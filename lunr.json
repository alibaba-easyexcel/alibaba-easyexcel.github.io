{"index":{"version":"2.1.0","fields":["title","body"],"fieldVectors":[["title/index.html",[0,0.178]],["body/index.html",[0,0.385,1,1.763,2,3.228,3,3.228,4,2.228,5,3.228,6,3.228,7,2.763,8,2.763,9,3.228,10,3.228,11,2.761,12,1.512,13,2.763,14,0.411,15,0.411,16,0.411,17,0.411,18,0.449,19,0.613,20,0.613,21,0.667,22,0.613,23,0.613,24,0.613,25,0.613,26,1.594,27,1.134,28,1.102,29,1.594,30,3.909,31,1.893,32,1.715,33,0.605,34,0.667,35,0.57,36,2.228,37,0.449,38,0.566,39,0.605,40,0.847,41,1.228,42,2.763,43,1.457,44,1.763,45,0.774,46,2.228,47,2.763,48,2.763,49,2.228,50,2.457,51,0.723,52,0.614,53,2.763,54,2.763,55,2.228,56,0.992,57,2.228,58,1.737,59,2.457,60,1.893,61,0.456,62,0.456,63,0.486,64,0.548,65,0.649,66,0.649,67,0.685,68,0.614,69,0.763,70,0.804,71,0.847,72,0.893,73,0.941,74,1.045,75,2.228,76,2.763,77,2.228,78,3.152,79,2.228,80,2.228,81,2.061,82,2.333,83,2.228,84,2.228,85,2.228,86,2.228,87,2.228,88,2.228,89,2.228,90,2.763,91,2.228,92,2.228,93,2.228,94,2.228,95,2.228,96,3.152,97,2.228,98,2.228,99,1.649,100,2.228,101,2.228,102,2.228,103,1.649,104,2.228]],["title/index.html#EasyExcel",[1,1.936]],["body/index.html#EasyExcel",[0,0.383,4,2.198,7,2.726,8,2.726,11,1.355,12,0.836,13,2.726,14,0.408,15,0.408,16,0.408,17,0.408,18,0.446,19,0.609,20,0.609,21,0.663,22,0.609,23,0.609,24,0.609,25,0.609,26,1.584,27,1.129,28,1.087,29,1.584,31,1.868,32,1.703,33,0.6,34,0.663,35,0.566,36,2.198,37,0.446,38,0.561,39,0.6,40,0.836,41,1.211,43,1.437,44,1.739,45,0.767,46,2.198,47,2.726,48,2.726,49,2.198,50,2.424,51,0.713,52,0.606,56,0.978,57,2.198,58,1.72,60,1.868,61,0.45,62,0.45,63,0.479,64,0.54,65,0.64,66,0.64,67,0.676,68,0.606,69,0.753,70,0.793,71,0.836,72,0.881,73,0.928,74,1.031,75,2.198,77,2.198,78,3.122,79,2.198,80,2.198,81,2.041,82,2.311,83,2.198,84,2.198,85,2.198,86,2.198,87,2.198,88,2.198,89,2.198,90,2.726,91,2.198,92,2.198,93,2.198,94,2.198,95,2.198,96,3.122,97,2.198,98,2.198,99,1.627,100,2.198,101,2.198,102,2.198,103,1.627,104,2.198,105,3.185,106,3.185,107,3.185,108,3.185,109,3.185,110,3.185,111,3.185,112,3.185,113,3.185,114,3.185,115,3.185,116,4.003,117,2.424,118,1.283,119,1.151,120,2.169,121,2.311,122,1.127,123,1.739,124,2.726,125,3.185,126,2.424,127,1.281,128,1.355,129,1.211,130,2.726,131,2.726,132,2.726,133,1.251,134,3.185,135,2.726,136,2.726,137,2.424,138,2.726,139,2.726]],["title/quickstart/api.html",[140,3.035]],["body/quickstart/api.html",[0,0.386,1,2.665,11,2.93,37,0.414,52,0.675,55,3.368,99,3.322,141,3.039,142,3.039,143,4.177,144,3.551,145,3.039,146,3.039,147,3.092,148,3.551,149,4.773,150,4.773,151,3.551,152,2.284,153,3.551,154,3.368,155,2.862,156,3.552,157,4.177,158,2.493,159,4.177,160,4.177,161,2.665,162,2.451,163,3.521,164,5.139,165,1.844,166,4.177,167,4.88,168,4.177,169,3.551,170,3.848,171,4.177,172,3.039,173,4.177,174,3.039,175,3.551,176,4.244,177,3.551,178,4.177,179,3.551,180,3.551,181,2.082,182,1.035,183,2.451,184,3.039,185,1.511,186,2.451,187,3.039,188,2.451,189,3.039,190,2.451,191,3.039,192,3.039,193,3.551,194,4.177,195,3.039,196,3.039,197,3.039,198,3.551,199,2.077,200,2.451,201,3.551,202,3.039]],["title/quickstart/api.html#详细参数介绍",[203,3.546]],["body/quickstart/api.html#详细参数介绍",[]],["title/quickstart/api.html#关于常见类解析",[204,3.546]],["body/quickstart/api.html#关于常见类解析",[0,0.328,1,1.947,37,0.415,52,0.678,55,3.378,99,3.326,119,1.209,137,3.725,141,3.052,142,3.052,143,4.189,145,3.052,146,3.052,147,3.101,149,4.189,150,4.189,152,2.288,154,3.378,155,2.87,156,3.556,157,4.189,158,2.5,159,4.189,160,4.189,161,2.673,162,2.461,163,3.528,164,5.148,166,4.189,168,4.189,170,3.857,171,4.189,172,3.052,174,3.052,176,4.253,178,4.189,181,2.091,182,1.039,183,2.461,184,3.052,185,1.518,186,2.461,187,3.052,188,2.461,189,3.052,190,2.461,191,3.052,192,3.052,194,4.189,195,3.052,196,3.052,197,3.052,202,3.052,205,3.566,206,4.895,207,3.566,208,3.566,209,3.566,210,3.566,211,3.566,212,3.052,213,3.725,214,3.566,215,3.566,216,3.566,217,3.566,218,4.895,219,3.566,220,4.895,221,4.895,222,4.895,223,4.895,224,4.895,225,3.566,226,3.566,227,6.792,228,3.566,229,3.566,230,4.895,231,3.566,232,3.566,233,4.895,234,3.566,235,3.566,236,3.566,237,3.566,238,3.566,239,4.895,240,3.566,241,3.566,242,3.566,243,3.566,244,3.566,245,3.566,246,3.566,247,3.052,248,3.566,249,3.566,250,3.566,251,3.566,252,3.566,253,3.566,254,3.566,255,3.566,256,3.566,257,3.566,258,3.566,259,3.566,260,3.566,261,3.566,262,3.566,263,3.566,264,3.566,265,3.566,266,3.566,267,3.566,268,3.566,269,3.566,270,4.895,271,3.566,272,3.566]],["title/quickstart/api.html#读",[212,3.035]],["body/quickstart/api.html#读",[213,4.55]],["title/quickstart/api.html#写",[247,3.035]],["body/quickstart/api.html#写",[213,4.55]],["title/quickstart/faq.html",[273,3.546]],["body/quickstart/faq.html",[0,0.386,1,2.165,12,1.041,14,0.408,15,0.408,16,0.408,17,0.408,18,0.446,37,0.336,45,1,68,0.999,158,2.025,173,3.393,274,3.964,275,3.393,276,3.964,277,3.017,278,1.155,279,3.393,280,4.499,281,3.393,282,3.393,283,3.393,284,3.964,285,3.393,286,3.083,287,3.393,288,3.393,289,3.393,290,4.488,291,5.257,292,3.393,293,3.393,294,3.017,295,3.393,296,3.964,297,3.964,298,3.964,299,3.964,300,3.964,301,3.964,302,3.964,303,3.964,304,3.964,305,3.964,306,3.964,307,3.964,308,3.964,309,4.001,310,3.017,311,5.257,312,3.964,313,3.964,314,3.964,315,3.393,316,3.393,317,3.964,318,3.393,319,3.964,320,3.393,321,3.393,322,5.048,323,3.964,324,3.964,325,3.393,326,3.393,327,3.393,328,3.964,329,3.393,330,3.393,331,3.393,332,3.964,333,3.964,334,3.964]],["title/quickstart/faq.html#常见问题",[335,2.698]],["body/quickstart/faq.html#常见问题",[]],["title/quickstart/faq.html#读取文件务必使用2-0-3",[336,3.546]],["body/quickstart/faq.html#读取文件务必使用2-0-3",[275,5.099,337,5.958]],["title/quickstart/faq.html#不支持功能",[338,3.546]],["body/quickstart/faq.html#不支持功能",[0,0.368,1,2.191,14,0.411,15,0.411,16,0.411,17,0.411,18,0.449,37,0.34,45,1.006,68,0.763,158,2.049,279,3.434,280,4.535,281,3.434,282,3.434,283,3.434,285,3.434,286,2.353,287,3.434,288,3.434,289,3.434,290,4.515,292,3.434,295,3.434,309,4.032,310,3.053,315,3.434,316,3.434,318,3.434,320,3.434,321,3.434,322,3.434,325,3.434,326,3.434,327,3.434,329,3.434,330,3.434,331,3.434,335,3.053,339,4.012,340,4.012,341,4.012,342,4.012,343,4.012,344,4.012,345,4.012,346,4.012,347,4.012,348,4.012,349,4.012,350,4.012,351,4.012,352,4.012,353,4.012,354,4.012,355,4.012,356,4.012,357,4.012,358,4.012,359,4.012,360,4.012,361,4.012,362,4.012,363,4.012,364,3.434,365,4.012,366,4.012,367,3.434,368,4.012,369,4.012,370,4.012,371,3.434,372,3.434,373,4.012,374,4.012,375,3.434,376,4.012,377,3.434,378,3.434,379,3.434,380,4.535,381,3.434,382,3.434,383,4.535,384,4.012,385,4.012,386,4.012,387,4.012,388,4.012,389,4.012,390,4.012,391,4.012,392,4.012,393,4.012,394,4.012,395,4.012,396,4.012,397,3.434,398,4.012,399,4.012,400,4.012,401,4.012,402,4.012,403,4.012,404,4.012,405,4.012,406,4.012,407,4.012,408,4.012,409,4.012,410,4.012,411,4.012]],["title/quickstart/faq.html#常见问题-1",[335,2.698]],["body/quickstart/faq.html#常见问题-1",[]],["title/quickstart/faq.html#超大-10M以上-文件读取说明",[364,3.035]],["body/quickstart/faq.html#超大-10M以上-文件读取说明",[0,0.346,14,0.431,15,0.431,16,0.431,17,0.431,45,0.943,309,4.942,310,4.232,367,4.76,371,4.76,372,4.76,375,4.76,377,4.76,378,4.76,379,4.76,380,4.76,381,4.76,382,4.76,383,4.76]],["title/support/about.html",[0,0.178]],["body/support/about.html",[0,0.364,11,2.69,14,0.49,15,0.49,16,0.49,17,0.355,18,0.389,35,0.493,45,0.979,81,2.853,82,2.342,140,3.924,277,3.489,286,3.892,293,3.924,294,3.489,412,4.584,413,4.584,414,4.584,415,4.584,416,3.924,417,3.924,418,5.411,419,5.411,420,5.978,421,3.924,422,3.924,423,4.943,424,3.924,425,1.268,426,3.924,427,3.924,428,3.924,429,3.924,430,3.924,431,4.943,432,4.584,433,4.584,434,4.584,435,4.584,436,4.584,437,4.584,438,4.584,439,4.584,440,4.584,441,4.584,442,4.584,443,3.924,444,4.584,445,4.584,446,4.584,447,4.584,448,4.584]],["title/support/about.html#Excel读写时候内存溢出",[449,3.546]],["body/support/about.html#Excel读写时候内存溢出",[450,5.958,451,5.958]],["title/support/about.html#其他开源框架使用复杂",[452,3.546]],["body/support/about.html#其他开源框架使用复杂",[453,5.979]],["title/support/about.html#其他开源框架存在一些BUG修复不及时",[454,3.546]],["body/support/about.html#其他开源框架存在一些BUG修复不及时",[0,0.371,14,0.467,15,0.467,16,0.467,17,0.381,18,0.416,35,0.528,45,1.022,81,2.942,82,2.507,286,3.533,416,4.2,417,4.2,418,5.58,419,5.58,420,6.079,421,4.2,422,4.2,423,5.157,424,4.2,425,1.357,426,4.2,427,4.2,428,4.2,429,4.2,430,4.2,431,5.157,455,4.907,456,4.907,457,4.907,458,4.907,459,4.907,460,4.907,461,4.907,462,4.907]],["title/support/about.html#Excel格式分析格式分析",[463,3.546]],["body/support/about.html#Excel格式分析格式分析",[277,4.455,464,5.853,465,5.853,466,5.853,467,5.853,468,5.853,469,5.853]],["title/support/about.html#核心原理",[470,3.546]],["body/support/about.html#核心原理",[294,4.363,443,4.907,471,5.733,472,5.733,473,5.733,474,5.733,475,5.733,476,5.733,477,5.733,478,5.733,479,5.733,480,5.733,481,5.733]],["title/quickstart/fill.html",[11,1.509]],["body/quickstart/fill.html",[0,0.388,11,0.735,12,1.203,14,0.42,15,0.42,16,0.381,17,0.381,18,0.417,19,0.53,20,0.53,21,0.53,22,0.53,23,0.53,24,0.53,25,0.53,33,0.607,34,0.569,35,0.493,37,0.501,38,0.644,39,0.8,40,1.515,45,0.881,50,1.315,51,1.163,52,0.987,61,0.648,62,0.648,63,0.689,64,0.777,65,0.921,66,0.921,67,0.972,68,0.871,69,1.082,70,1.141,71,1.203,72,1.267,73,1.047,74,0.916,165,0.531,182,1.047,183,1.953,185,2.824,200,2.48,278,0.504,425,0.783,482,3.555,483,1.953,484,0.695,485,3.075,486,2.34,487,2.885,488,1.479,489,1.479,490,1.479,491,2.422,492,1.479,493,2.903,494,2.631,495,2.96,496,2.631,497,3.117,498,1.479,499,3.075,500,2.835,501,1.479,502,1.479,503,2.599,504,2.631,505,2.631,506,3.434,507,1.991,508,2.422,509,1.479,510,2.422,511,1.728,512,1.728,513,1.728,514,1.728,515,1.479,516,4.125,517,1.479,518,3.593,519,1.479,520,2.422,521,2.48,522,0.657,523,0.657,524,0.695,525,0.735,526,0.735,527,0.735,528,0.735,529,0.829,530,0.883,531,1.014,532,1.014,533,1.014,534,1.014,535,1.014,536,1.014,537,0.657,538,1.728,539,2.422,540,1.479,541,1.193,542,1.479,543,1.193,544,1.193,545,1.479,546,1.193,547,1.479,548,3.555,549,2.48,550,1.479,551,2.422,552,1.479,553,1.479]],["title/quickstart/fill.html#最简单的填充",[554,3.035]],["body/quickstart/fill.html#最简单的填充",[0,0.383,12,1.038,14,0.407,15,0.407,16,0.407,17,0.407,18,0.445,19,0.458,20,0.458,21,0.458,22,0.458,23,0.458,24,0.458,25,0.458,33,0.524,34,0.607,35,0.426,37,0.499,38,0.651,39,0.781,40,1.378,45,0.89,51,1.176,52,0.998,61,0.559,62,0.559,63,0.595,64,0.671,65,0.795,66,0.795,67,0.839,68,0.752,69,0.934,70,0.985,71,1.038,72,1.094,73,1.153,122,1.307,129,1.996,133,1.094,165,1.215,183,3.622,278,1.153,425,1.452,482,5.371,483,3.622,484,1.59,485,5.042,486,2.02,487,2.319,488,3.385,489,3.385,490,3.385,491,4.492,492,3.385,493,2.505,494,2.505,495,2.866,496,2.505,497,3.325,498,3.385,554,3.385,555,2.505,556,0.632,557,0.632,558,2.505,559,2.505,560,2.505,561,2.505,562,2.505,563,2.505,564,3.385,565,3.955,566,4.492,567,5.248,568,3.385,569,3.955]],["title/quickstart/fill.html#填充列表",[570,3.035]],["body/quickstart/fill.html#填充列表",[0,0.382,12,1.103,14,0.326,15,0.326,16,0.326,17,0.326,18,0.356,19,0.486,20,0.486,21,0.486,22,0.486,23,0.486,24,0.486,25,0.486,33,0.557,34,0.486,35,0.453,37,0.463,38,0.677,39,0.805,40,1.434,51,1.224,52,1.039,61,0.594,62,0.594,63,0.632,64,0.713,65,0.845,66,0.845,67,0.892,68,0.799,69,0.993,70,1.047,71,1.103,72,1.163,122,1.047,129,1.599,133,1.163,185,2.735,486,2.147,487,2.465,499,5.195,501,3.598,502,3.598,503,2.619,504,2.663,505,2.663,506,3.461,507,2.015,555,2.663,556,0.873,557,0.672,558,2.663,559,2.663,560,2.663,561,2.663,562,2.663,563,2.663,564,3.598,566,3.598,568,3.598,570,3.598,571,1.103,572,4.203,573,4.203,574,4.203,575,4.203,576,4.203,577,4.203,578,4.203,579,4.203,580,4.203,581,4.203,582,4.203]],["title/quickstart/fill.html#复杂的填充",[583,3.035]],["body/quickstart/fill.html#复杂的填充",[0,0.382,12,1.048,14,0.31,15,0.31,16,0.31,17,0.31,18,0.338,19,0.462,20,0.462,21,0.462,22,0.462,23,0.462,24,0.462,25,0.462,33,0.529,34,0.462,35,0.43,37,0.448,38,0.495,39,0.7,40,1.387,45,0.677,51,0.894,52,0.759,61,0.564,62,0.564,63,0.601,64,0.677,65,0.802,66,0.802,67,0.847,68,0.759,69,0.943,70,0.994,71,1.048,72,1.104,73,1.164,74,1.292,133,1.104,182,1.164,185,2.788,486,2.039,487,2.341,493,2.529,494,2.529,495,2.884,496,2.529,497,3.346,503,2.532,504,2.529,505,2.529,506,3.346,507,1.914,508,4.521,509,3.417,510,3.417,515,3.417,516,4.794,517,3.417,519,3.417,520,3.417,521,2.755,555,2.529,556,0.844,557,0.638,558,2.529,559,2.529,560,2.529,561,2.529,562,2.529,563,2.529,571,1.048,583,3.417,584,3.038,585,3.038,586,2.529,587,3.992,588,3.992,589,3.992,590,3.992,591,3.992,592,3.992,593,3.992,594,3.992,595,3.992,596,3.992,597,3.992,598,3.992,599,3.992,600,3.992,601,3.038]],["title/quickstart/fill.html#数据量大的复杂填充",[602,3.035]],["body/quickstart/fill.html#数据量大的复杂填充",[0,0.383,12,0.955,14,0.282,15,0.282,16,0.282,17,0.282,18,0.308,19,0.421,20,0.421,21,0.421,22,0.421,23,0.421,24,0.421,25,0.421,33,0.482,34,0.421,35,0.391,37,0.42,38,0.451,39,0.657,40,1.302,45,0.957,51,0.814,52,0.691,61,0.514,62,0.514,63,0.547,64,0.617,65,0.731,66,0.731,67,0.772,68,0.691,69,0.859,70,0.906,71,0.955,72,1.006,73,1.06,74,1.177,133,1.006,182,1.06,185,2.787,486,1.857,487,2.132,493,2.304,494,2.304,495,2.709,496,2.304,497,2.304,500,1.743,503,2.378,504,2.304,505,2.304,506,3.143,507,1.743,521,2.509,522,1.383,523,1.383,524,1.462,525,1.547,526,1.547,527,1.547,528,1.547,529,1.743,530,1.857,531,2.132,532,2.132,533,2.132,534,2.132,535,2.132,536,2.132,537,1.383,539,4.245,540,3.112,541,2.509,542,3.112,543,2.509,544,2.509,545,3.112,546,2.509,547,3.112,548,5.191,549,3.896,550,3.112,555,2.304,556,0.793,557,0.581,558,2.304,559,2.304,560,2.304,561,2.304,562,2.304,563,2.304,571,0.955,584,2.767,585,2.767,601,2.767,602,3.112,603,3.636,604,3.636,605,3.636,606,3.636,607,3.636,608,3.636,609,3.636,610,3.636,611,3.636,612,3.636,613,3.636,614,3.636,615,3.636,616,3.636,617,3.636,618,3.636,619,3.636,620,3.636,621,3.636,622,3.636,623,3.636]],["title/quickstart/fill.html#横向的填充",[624,3.035]],["body/quickstart/fill.html#横向的填充",[0,0.382,12,1.118,14,0.33,15,0.33,16,0.33,17,0.33,18,0.361,19,0.493,20,0.493,21,0.493,22,0.493,23,0.493,24,0.493,25,0.493,33,0.564,34,0.493,35,0.458,37,0.467,38,0.528,39,0.73,40,1.446,45,0.722,51,0.954,52,0.809,61,0.602,62,0.602,63,0.641,64,0.722,65,0.855,66,0.855,67,0.904,68,0.809,69,1.006,70,1.06,71,1.118,72,1.178,133,1.178,182,1.241,185,2.846,486,2.174,487,2.497,493,2.697,494,2.697,495,3.008,496,2.697,497,2.697,503,2.641,504,2.697,505,2.697,506,3.49,507,2.041,516,4.914,521,2.938,551,4.715,552,3.644,553,3.644,555,2.697,556,0.881,557,0.681,558,2.697,559,2.697,560,2.697,561,2.697,562,2.697,563,2.697,571,1.118,584,3.24,585,3.24,601,3.24,624,3.644,625,4.257]],["title/quickstart/read.html",[11,1.509]],["body/quickstart/read.html",[0,0.387,11,2.649,12,1.3,14,0.479,15,0.47,16,0.459,17,0.441,18,0.489,19,0.658,20,0.647,21,0.635,22,0.635,23,0.635,24,0.622,25,0.622,26,0.952,27,1.077,28,1.487,29,0.952,30,3.728,31,2.226,32,1.114,33,0.577,34,0.708,35,0.565,36,0.734,37,0.519,38,0.592,39,0.633,40,1.254,41,1.817,42,3.249,43,1.965,44,1.88,45,0.89,46,0.734,59,0.81,60,0.624,61,0.742,62,0.722,63,0.768,64,0.84,65,0.875,66,0.875,67,0.806,68,0.654,69,0.813,70,0.752,71,0.658,72,0.694,73,0.731,74,0.812,81,0.845,82,0.544,93,0.734,94,0.734,95,0.734,96,1.293,97,0.734,98,0.734,99,0.544,100,0.734,101,0.734,102,0.734,103,2.092,104,0.734,147,1.914,152,1.444,155,1.098,156,1.023,158,0.957,161,1.37,162,1.731,163,0.624,165,1.338,181,1.098,182,1.194,199,0.797,200,2.376,278,1.194,290,1.425,425,1.451,483,0.734,484,0.753,495,1.023,500,1.65,522,0.954,523,0.954,524,1.008,525,0.797,526,0.797,527,0.797,528,0.797,529,0.51,530,0.544,531,0.624,532,0.624,533,0.624,534,0.624,535,0.624,536,0.624,537,1.817,626,1.067,627,1.873,628,0.911,629,0.911,630,1.293,631,1.187,632,1.293,633,0.911,634,1.064,635,0.674,636,1.603,637,0.734,638,0.81,639,2.378,640,0.911,641,2.085,642,2.62,643,2.402,644,1.909,645,0.734,646,1.603,647,2.147,648,0.911,649,0.911,650,2.299,651,1.909,652,1.909,653,0.674,654,0.911,655,1.425,656,1.603,657,1.064,658,0.911,659,0.911,660,0.911,661,0.911,662,1.064,663,0.911,664,1.064,665,1.064,666,0.911,667,0.911,668,0.911,669,1.603,670,1.603,671,1.064,672,0.911,673,1.064,674,0.911,675,1.293,676,0.734,677,0.911,678,0.734,679,0.734,680,0.734,681,0.734,682,0.734,683,1.603,684,0.734,685,0.911,686,0.911,687,0.911,688,0.911,689,0.911,690,3.297,691,2.585,692,2.585,693,2.585,694,1.603,695,3.249,696,0.911,697,1.603,698,0.911,699,0.911,700,0.911,701,0.911,702,1.603,703,0.911,704,0.911,705,1.064,706,1.064,707,0.911,708,0.911,709,1.064,710,1.064,711,0.911,712,0.911,713,1.064,714,0.911,715,0.911,716,1.603,717,0.911,718,0.911,719,1.603,720,0.911,721,1.064,722,0.911,723,1.909,724,0.911,725,2.147,726,1.603,727,0.911,728,0.911,729,0.911,730,0.911,731,1.603,732,1.603,733,2.376,734,1.603,735,0.911,736,0.911,737,2.147,738,0.911,739,0.911,740,0.911,741,0.911,742,0.911,743,0.911,744,0.911]],["title/quickstart/read.html#最简单的读",[117,2.698]],["body/quickstart/read.html#最简单的读",[0,0.383,12,1.186,14,0.407,15,0.407,16,0.407,17,0.407,18,0.485,19,0.608,20,0.523,21,0.523,22,0.523,23,0.523,24,0.523,25,0.523,26,0.879,27,0.812,28,1.953,29,0.879,31,3.355,32,1.029,33,0.421,34,0.699,35,0.616,36,2.194,37,0.445,38,0.56,39,0.599,40,1.186,41,1.718,43,2.038,44,2.467,45,0.891,46,2.194,61,0.639,62,0.639,63,0.68,64,0.766,65,0.908,66,0.908,67,0.959,68,0.859,69,1.067,70,1.125,71,0.835,72,0.879,73,0.927,74,1.029,117,2.419,118,0.712,119,0.639,120,1.524,121,1.624,122,0.792,123,1.736,124,2.721,147,2.862,165,1.387,182,1.317,199,1.353,278,1.317,425,1.737,484,1.278,500,1.524,522,1.209,523,1.209,524,1.278,525,1.353,526,1.353,527,1.353,528,1.353,556,0.508,557,0.508,626,1.353,628,2.721,629,2.721,630,3.118,631,2.862,632,3.118,633,2.721,635,2.014,636,3.867,637,2.194,638,2.419,639,2.467,640,2.721,641,3.118,642,3.118,643,3.355,644,2.419,645,2.194,646,3.867,647,4.498,648,2.721,649,2.721,650,3.438,651,2.419,652,2.419,653,2.014,654,2.721,655,2.419,745,0.712,746,1.624,747,4.517,748,4.517,749,3.179,750,3.179,751,3.179,752,3.179,753,3.179,754,3.179,755,3.179,756,3.179,757,3.179,758,2.721]],["title/quickstart/read.html#指定列的下标或者列名",[759,3.035]],["body/quickstart/read.html#指定列的下标或者列名",[0,0.382,12,1.092,14,0.421,15,0.468,16,0.421,17,0.421,18,0.46,19,0.628,20,0.628,21,0.628,22,0.628,23,0.628,24,0.628,25,0.628,26,1.151,27,1.085,29,1.151,32,1.347,33,0.552,34,0.628,35,0.448,37,0.512,38,0.516,39,0.552,40,1.092,41,1.583,43,1.878,45,0.706,61,0.767,62,0.588,63,0.626,119,0.836,120,1.995,121,2.126,152,2.297,165,1.278,181,3.183,182,1.582,278,1.213,397,3.562,425,1.671,483,2.872,484,1.673,556,0.665,557,0.665,571,1.425,626,1.771,656,4.646,658,3.562,659,3.562,660,3.562,661,3.562,745,1.216,746,2.772,759,3.562,760,4.161,761,4.161,762,4.161,763,4.161,764,2.273,765,2.441,766,4.161,767,4.161,768,4.161,769,4.161]],["title/quickstart/read.html#读多个sheet",[770,3.546]],["body/quickstart/read.html#读多个sheet",[0,0.381,12,1.387,14,0.459,15,0.41,16,0.41,17,0.31,18,0.338,19,0.462,20,0.462,21,0.462,22,0.462,23,0.462,24,0.462,25,0.462,27,0.949,28,1.363,31,2.341,33,0.529,34,0.462,35,0.43,37,0.338,38,0.655,39,0.7,40,1.387,41,2.009,43,1.801,44,2.18,45,1.004,61,0.564,62,0.564,63,0.601,64,0.677,65,0.802,66,0.802,67,0.847,68,0.759,69,0.943,70,0.994,71,1.048,72,1.104,73,1.164,74,1.292,118,0.894,119,0.802,120,1.914,121,2.039,147,3.346,199,1.699,522,1.518,523,1.518,524,1.605,537,2.251,556,0.844,557,0.638,571,1.554,586,2.529,650,4.02,651,4.02,652,4.02,655,3.038,663,3.417,666,3.417,667,3.417,668,3.417,669,4.521,670,4.521,672,3.417,674,3.417,745,1.183,746,2.698,758,3.417,771,3.992,772,3.992,773,3.992,774,3.992,775,3.992,776,3.992,777,3.992,778,3.992,779,3.992,780,3.992,781,3.992,782,3.992,783,3.992,784,3.992]],["title/quickstart/read.html#日期、数字或者自定义格式转换",[785,2.447]],["body/quickstart/read.html#日期、数字或者自定义格式转换",[0,0.384,12,0.753,14,0.384,15,0.384,16,0.384,17,0.384,18,0.42,19,0.574,20,0.574,21,0.574,22,0.574,23,0.574,24,0.574,25,0.574,26,0.793,27,1.043,29,0.793,32,0.928,33,0.38,34,0.725,35,0.309,37,0.544,38,0.356,39,0.38,40,0.753,41,1.091,43,1.294,45,0.711,61,0.701,62,0.701,63,0.746,64,0.841,65,0.996,66,0.996,67,0.89,68,0.545,69,0.678,70,0.714,71,0.753,72,0.793,73,0.836,74,0.928,103,3.097,118,0.642,119,0.576,120,1.375,121,1.465,122,0.714,123,1.566,152,1.091,155,1.682,156,2.29,158,1.465,161,2.29,165,1.523,182,0.836,278,0.836,425,1.372,522,1.091,523,1.091,524,1.153,525,1.22,526,1.22,527,1.22,528,1.22,529,1.375,530,1.465,531,1.682,532,1.682,533,1.682,534,1.682,535,1.682,536,1.682,537,1.091,556,0.458,557,0.458,571,1.101,586,1.817,626,1.22,639,2.979,675,1.979,676,1.979,678,1.979,679,1.979,680,1.979,681,1.979,682,1.979,683,3.59,684,1.979,685,2.455,686,2.455,687,2.455,688,2.455,689,2.455,690,4.184,691,4.669,692,4.669,693,4.669,694,3.59,695,5.189,696,2.455,697,3.59,698,2.455,699,2.455,700,2.455,701,2.455,702,3.59,703,2.455,704,2.455,707,2.455,708,2.455,745,0.939,746,2.142,785,1.979,786,2.868,787,2.868,788,2.868,789,2.868,790,2.868,791,2.455,792,2.868,793,2.455,794,2.868,795,2.868,796,2.868,797,2.868,798,2.868,799,2.868,800,2.868,801,2.455,802,2.455,803,2.868,804,2.868,805,2.868,806,2.868,807,2.868,808,2.868]],["title/quickstart/read.html#多行头",[809,3.035]],["body/quickstart/read.html#多行头",[0,0.378,12,1.217,14,0.451,15,0.359,16,0.359,17,0.359,18,0.393,19,0.536,20,0.536,21,0.536,22,0.536,23,0.536,24,0.536,25,0.536,26,1.282,27,1.142,28,1.582,29,1.282,31,2.718,32,1.5,33,0.614,34,0.536,35,0.499,37,0.393,38,0.575,39,0.614,40,1.217,41,1.763,43,2.091,44,2.531,45,0.786,61,0.655,62,0.655,63,0.697,64,0.786,118,1.038,119,0.931,120,2.222,122,1.154,123,2.531,162,3.199,556,0.93,557,0.741,571,1.668,711,3.967,712,3.967,714,3.967,745,1.303,746,2.97,809,3.967,810,4.635,811,4.635,812,4.635,813,4.635,814,4.635,815,4.635,816,4.635]],["title/quickstart/read.html#同步的返回",[817,3.546]],["body/quickstart/read.html#同步的返回",[0,0.381,12,1.162,14,0.343,15,0.343,16,0.343,17,0.343,18,0.375,19,0.512,20,0.512,21,0.512,22,0.512,23,0.512,24,0.512,25,0.512,28,1.511,33,0.587,34,0.512,35,0.476,37,0.479,38,0.549,39,0.587,40,1.162,41,1.683,61,0.626,62,0.626,63,0.666,64,0.751,65,0.889,66,0.889,67,0.939,68,0.841,69,1.046,122,1.407,123,2.417,278,1.646,495,3.084,500,3.141,556,0.903,557,0.708,571,1.483,643,3.312,644,4.298,715,3.789,717,3.789,718,3.789,719,4.834,720,3.789,722,3.789,723,4.298,724,3.789,745,1.265,818,4.426,819,5.648,820,5.648,821,4.426,822,4.426,823,4.426,824,4.426]],["title/quickstart/read.html#读取表头数据",[825,3.035]],["body/quickstart/read.html#读取表头数据",[0,0.381,12,1.12,14,0.474,15,0.474,16,0.474,17,0.428,18,0.468,19,0.638,20,0.638,21,0.638,22,0.638,23,0.638,24,0.494,25,0.494,27,0.991,28,1.457,33,0.566,34,0.638,35,0.594,37,0.468,38,0.529,39,0.566,40,1.12,41,1.623,43,1.926,44,2.331,45,0.724,61,0.603,62,0.603,63,0.642,64,0.724,118,0.956,119,0.858,120,2.046,121,2.18,122,1.063,123,2.331,537,2.325,556,0.882,557,0.682,571,1.605,639,2.331,641,2.945,642,3.808,643,2.503,690,3.808,723,3.248,725,3.653,726,4.722,727,3.653,728,3.653,729,3.653,730,3.653,745,1.236,746,2.818,825,3.653,826,4.268,827,4.268,828,4.268]],["title/quickstart/read.html#数据转换等异常处理",[829,3.035]],["body/quickstart/read.html#数据转换等异常处理",[0,0.382,12,0.991,14,0.478,15,0.478,16,0.478,17,0.446,18,0.488,19,0.666,20,0.666,21,0.589,22,0.589,23,0.589,24,0.589,25,0.589,27,0.914,33,0.5,34,0.666,35,0.548,37,0.32,38,0.468,39,0.5,40,0.991,41,1.436,43,1.704,45,0.64,61,0.719,62,0.719,63,0.766,64,0.863,65,0.759,66,0.759,81,1.704,118,0.846,119,0.759,120,1.81,121,1.929,122,0.94,123,2.062,165,1.16,182,1.483,278,1.1,425,1.044,537,2.189,556,0.604,557,0.604,571,1.336,639,2.062,641,2.606,642,3.512,690,3.512,731,4.355,732,3.232,733,4.438,734,4.355,735,3.232,736,3.232,737,4.926,738,3.232,739,3.232,740,3.232,741,3.232,742,3.232,743,3.232,744,3.232,745,1.14,746,2.599,829,3.232,830,3.776,831,3.776,832,3.776,833,3.776,834,3.776,835,3.776,836,3.776,837,3.776,838,3.776,839,3.776,840,3.776,841,3.776]],["title/quickstart/read.html#web中的读",[842,3.546]],["body/quickstart/read.html#web中的读",[0,0.372,14,0.376,15,0.376,16,0.376,17,0.376,18,0.411,19,0.561,20,0.561,21,0.561,22,0.561,23,0.561,24,0.561,25,0.561,26,1.342,27,1.075,29,1.342,32,1.57,34,0.561,37,0.411,45,0.823,60,2.845,81,2.189,82,2.478,93,3.348,94,3.348,95,3.348,96,4.128,97,3.348,98,3.348,99,2.478,100,3.348,101,3.348,102,3.348,103,2.478,104,3.348,116,3.691,118,1.086,119,0.975,120,2.325,121,2.478,139,4.152,556,0.956,557,0.775,571,1.703,745,1.34,746,3.055,793,4.152,843,4.152,844,4.85]],["title/quickstart/write.html",[11,1.509]],["body/quickstart/write.html",[0,0.387,1,0.365,4,1.18,11,2.526,12,0.323,14,0.472,15,0.48,16,0.453,17,0.424,18,0.479,19,0.632,20,0.632,21,0.653,22,0.632,23,0.64,24,0.616,25,0.608,26,1.043,27,1.033,28,1.218,29,1.043,32,1,33,0.586,34,0.66,35,0.547,37,0.503,38,0.619,39,0.662,40,0.323,41,0.254,45,0.938,49,1.18,51,1.139,52,0.931,53,3.228,54,0.571,55,0.461,56,1.437,57,0.461,58,1.434,59,0.508,60,0.392,61,0.677,62,0.661,63,0.666,64,0.726,65,0.829,66,0.829,67,0.84,68,0.814,69,0.843,70,0.888,71,0.877,72,0.854,73,0.974,74,1,75,0.461,76,0.571,77,0.461,78,0.849,79,0.461,80,0.461,81,0.555,82,0.341,83,0.461,84,0.461,85,0.461,86,0.849,87,0.461,88,0.461,89,0.461,91,0.461,92,0.461,99,0.628,103,0.874,152,2.053,154,0.461,155,0.721,156,1.358,158,0.628,161,0.934,163,1.811,165,1.315,170,1.936,176,0.508,181,1.003,182,1.29,185,1.991,186,0.849,188,0.461,190,0.461,199,1.684,200,2.131,278,1.363,286,0.392,425,1.562,484,1.128,486,0.341,500,1.48,503,1.601,507,1.192,522,1.067,523,1.067,524,1,525,1.058,526,1.058,527,1.058,528,1.058,529,1.019,530,0.874,531,0.392,532,0.392,533,0.392,534,0.392,535,0.392,536,0.392,537,1.862,541,1.18,543,0.461,544,1.18,546,1.18,549,0.849,626,1.194,630,0.849,631,1.084,632,1.467,635,1.576,637,1.716,638,0.508,639,1.358,643,0.721,645,0.849,653,1.084,675,0.849,676,0.461,677,0.571,678,0.461,679,0.461,680,0.461,681,0.461,682,0.461,684,0.849,716,2.129,733,0.461,845,1.053,846,1.053,847,1.053,848,0.668,849,0.571,850,1.467,851,1.18,852,1.936,853,1.302,854,1.053,855,0.571,856,1.302,857,1.053,858,0.571,859,0.571,860,0.571,861,0.571,862,1.302,863,0.571,864,0.571,865,0.571,866,0.571,867,0.571,868,0.571,869,1.819,870,1.23,871,1.053,872,0.571,873,0.668,874,0.571,875,1.053,876,0.571,877,1.302,878,1.053,879,1.617,880,2.129,881,0.668,882,0.571,883,0.571,884,0.571,885,1.053,886,0.571,887,0.571,888,0.571,889,0.571,890,0.571,891,0.571,892,0.571,893,1.464,894,0.571,895,0.571,896,0.571,897,0.571,898,0.571,899,0.571,900,0.668,901,0.571,902,1.053,903,0.571,904,1.053,905,1.053,906,1.053,907,0.571,908,0.668,909,1.053,910,1.819,911,0.571,912,0.571,913,1.819,914,0.571,915,0.571,916,1.053,917,0.571,918,1.053,919,1.053,920,0.668,921,0.571,922,0.571,923,0.571,924,0.571,925,0.571,926,1.053,927,0.571,928,0.571,929,0.668,930,1.053,931,0.668,932,1.464,933,0.571,934,3.088,935,1.053,936,0.571,937,0.668,938,1.053,939,1.053,940,1.053,941,1.053,942,0.668,943,1.053,944,0.571,945,0.571,946,0.571,947,0.571,948,0.571,949,0.571,950,0.571,951,0.571,952,0.571,953,0.571,954,1.819,955,1.053,956,0.571,957,1.053,958,0.571,959,0.936,960,0.571,961,0.571,962,1.053,963,0.571,964,0.571,965,0.571,966,1.053,967,1.053,968,1.053,969,1.053,970,0.571,971,0.571,972,3.228,973,2.401,974,1.053,975,1.819,976,0.571,977,1.464,978,1.464,979,1.819,980,0.571,981,2.129,982,0.571,983,0.571,984,0.571,985,0.571,986,1.053,987,0.571,988,0.571,989,0.571,990,0.571,991,1.053,992,0.571,993,0.571,994,0.571,995,1.464,996,0.571,997,0.571,998,1.819,999,0.571,1000,0.571,1001,1.819,1002,0.571,1003,0.571,1004,0.571,1005,0.571,1006,0.571,1007,0.571,1008,1.053,1009,0.571,1010,0.571,1011,0.668,1012,1.053,1013,0.571,1014,0.571,1015,0.668,1016,0.668,1017,1.053,1018,0.571]],["title/quickstart/write.html#最简单的写",[126,2.698]],["body/quickstart/write.html#最简单的写",[0,0.382,14,0.403,15,0.403,16,0.403,17,0.403,18,0.44,19,0.601,20,0.601,21,0.601,22,0.601,23,0.601,24,0.601,25,0.601,26,1.076,27,0.699,28,1.772,29,1.076,33,0.516,34,0.601,35,0.419,37,0.528,38,0.644,39,0.688,49,4.032,51,1.163,52,0.987,56,1.594,57,2.685,58,1.479,61,0.734,62,0.734,63,0.585,64,0.66,65,0.782,66,0.782,67,0.826,68,0.74,69,0.919,70,0.969,118,0.871,119,0.782,122,1.293,126,2.96,127,1.564,128,1.655,129,1.479,130,3.33,131,3.33,132,3.33,133,1.436,152,2.222,154,2.685,165,1.195,182,1.513,185,2.486,278,1.134,425,1.724,484,1.564,503,2.489,507,1.865,556,0.622,557,0.622,626,1.655,653,2.465,745,0.871,764,2.124,765,2.281,849,3.33,850,2.685,851,2.685,852,2.685,1019,2.465,1020,3.89,1021,3.89,1022,3.89,1023,2.96,1024,2.96,1025,2.96]],["title/quickstart/write.html#指定写入的列",[1026,3.035]],["body/quickstart/write.html#指定写入的列",[0,0.382,14,0.471,15,0.424,16,0.471,17,0.424,18,0.464,19,0.633,20,0.633,21,0.633,22,0.633,23,0.633,24,0.633,25,0.633,26,1.166,27,0.983,29,1.166,32,1.364,33,0.559,34,0.633,35,0.454,37,0.515,38,0.523,39,0.559,51,0.944,52,0.801,56,1.294,58,1.603,118,0.944,119,0.847,122,1.05,127,1.694,128,1.793,129,1.603,133,1.166,152,2.311,156,3.318,165,1.294,181,3.564,182,1.595,199,1.793,278,1.228,425,1.681,484,1.694,556,0.674,557,0.674,626,1.793,745,0.944,764,2.301,765,2.471,853,4.164,854,4.684,855,3.607,1019,2.67,1026,3.607,1027,4.214,1028,4.214,1029,2.67,1030,3.607]],["title/quickstart/write.html#复杂头写入",[1031,3.035]],["body/quickstart/write.html#复杂头写入",[0,0.381,14,0.436,15,0.436,16,0.436,17,0.436,18,0.477,19,0.651,20,0.651,21,0.651,22,0.651,23,0.509,24,0.509,25,0.509,26,1.218,27,1.011,29,1.218,32,1.425,33,0.584,34,0.651,35,0.474,37,0.526,38,0.546,39,0.584,51,0.986,52,0.837,56,1.352,58,1.675,118,0.986,119,0.885,122,1.097,127,1.77,128,1.874,129,1.675,133,1.218,152,2.36,165,1.352,182,1.641,278,1.283,425,1.716,484,1.77,556,0.704,557,0.704,626,1.874,745,0.986,764,2.404,765,2.582,856,4.284,857,4.818,858,3.769,1019,2.789,1029,2.789,1031,3.769,1032,6.205,1033,3.769]],["title/quickstart/write.html#重复多次写入",[1034,3.035]],["body/quickstart/write.html#重复多次写入",[0,0.385,14,0.347,15,0.347,16,0.347,17,0.243,18,0.482,19,0.362,20,0.362,21,0.362,22,0.362,23,0.362,24,0.362,25,0.362,27,0.803,33,0.415,34,0.362,35,0.337,37,0.265,38,0.646,39,0.691,51,1.167,52,0.991,56,1.373,61,0.443,62,0.443,63,0.471,64,0.531,65,0.629,66,0.629,67,0.665,68,0.595,69,0.74,70,0.78,71,0.822,72,0.866,73,0.913,74,1.014,118,0.701,119,0.629,122,1.298,133,1.441,185,2.737,199,2.217,278,1.821,503,2.724,507,2.498,522,1.191,523,1.191,524,1.259,525,1.333,526,1.333,527,1.333,528,1.333,529,1.501,530,1.6,531,1.836,532,1.836,533,1.836,534,1.836,535,1.836,536,1.836,537,1.982,556,0.714,557,0.501,571,0.822,586,1.984,635,3.301,637,3.596,653,2.831,678,2.161,679,2.161,680,2.161,681,2.161,682,2.161,745,0.701,850,3.084,851,2.161,852,3.596,856,2.383,859,2.68,860,2.68,861,2.68,862,2.383,863,2.68,864,2.68,865,2.68,866,2.68,867,2.68,868,2.68,869,4.864,871,3.825,872,2.68,874,2.68,1023,2.383,1024,3.966,1025,3.966,1029,1.984,1033,2.68,1034,2.68,1035,3.131,1036,3.131,1037,3.131,1038,3.131,1039,3.131,1040,5.211,1041,5.211,1042,3.131,1043,4.469,1044,3.131,1045,4.469,1046,4.469,1047,4.469,1048,3.131,1049,3.131,1050,3.131,1051,3.131,1052,3.131,1053,3.131,1054,3.131]],["title/quickstart/write.html#日期、数字或者自定义格式转换",[785,2.447]],["body/quickstart/write.html#日期、数字或者自定义格式转换",[0,0.383,14,0.411,15,0.411,16,0.411,17,0.411,18,0.449,19,0.613,20,0.613,21,0.613,22,0.613,23,0.613,24,0.613,25,0.613,26,1.11,27,1.134,29,1.11,32,1.299,33,0.532,34,0.613,35,0.432,37,0.503,38,0.497,39,0.532,51,0.899,52,0.763,56,1.232,58,1.526,61,0.567,62,0.567,63,0.604,64,0.68,65,0.806,66,0.806,67,0.851,68,0.763,118,0.899,119,0.806,122,0.999,127,1.613,128,1.707,129,1.526,133,1.11,152,2.256,155,2.353,156,2.893,158,2.049,161,2.191,165,1.232,182,1.544,278,1.169,425,1.641,484,1.613,556,0.641,557,0.641,626,1.707,675,3.657,676,2.769,745,0.899,764,2.191,765,2.353,785,2.769,791,3.434,801,3.434,802,3.434,875,4.535,876,3.434,1019,2.542,1029,2.542,1055,4.012,1056,4.012,1057,5.298,1058,4.012,1059,4.012,1060,4.012]],["title/quickstart/write.html#图片导出",[1061,3.035]],["body/quickstart/write.html#图片导出",[0,0.383,14,0.387,15,0.387,16,0.387,17,0.387,18,0.424,19,0.578,20,0.578,21,0.657,22,0.578,23,0.578,24,0.578,25,0.578,26,1.017,27,0.66,29,1.017,33,0.487,34,0.578,35,0.396,37,0.516,38,0.456,39,0.662,40,0.965,45,1.08,51,0.823,52,0.699,56,1.129,61,0.706,62,0.52,63,0.553,64,0.623,65,0.739,66,0.739,67,0.78,68,0.699,69,0.868,70,0.916,71,0.965,72,1.017,73,1.071,74,1.19,81,1.659,99,2.553,118,0.823,119,0.739,127,1.478,152,1.398,161,2.729,165,1.129,170,4.536,278,1.071,425,1.685,500,1.762,522,1.398,523,1.398,549,3.449,556,0.588,557,0.588,631,2.329,733,2.537,745,0.823,877,2.798,878,4.277,879,2.798,880,5.453,882,3.146,883,3.146,884,3.146,885,4.277,886,3.146,887,3.146,888,3.146,889,3.146,890,3.146,891,3.146,892,3.146,893,4.859,894,3.146,895,3.146,896,3.146,897,3.146,898,3.146,899,3.146,1061,3.146,1062,3.676,1063,3.676,1064,3.676,1065,3.676,1066,3.676,1067,3.676]],["title/quickstart/write.html#根据模板写入",[1068,3.035]],["body/quickstart/write.html#根据模板写入",[0,0.381,12,1.227,14,0.362,15,0.362,16,0.362,17,0.362,18,0.396,19,0.541,20,0.541,21,0.541,22,0.541,23,0.541,24,0.541,25,0.541,26,1.293,27,1.05,29,1.293,32,1.513,33,0.62,34,0.541,35,0.503,37,0.496,38,0.58,39,0.775,40,1.227,41,1.778,51,1.047,52,0.889,56,1.436,61,0.661,62,0.661,118,1.047,119,0.939,122,1.164,127,1.879,128,1.989,129,1.778,486,2.387,556,0.934,557,0.747,571,1.535,745,1.047,853,3.557,901,4.001,902,5.003,903,4.001,1029,2.961,1030,4.001,1068,4.001,1069,5.845,1070,4.674,1071,4.674]],["title/quickstart/write.html#列宽、行高",[1072,3.035]],["body/quickstart/write.html#列宽、行高",[0,0.383,14,0.419,15,0.419,16,0.419,17,0.419,18,0.458,19,0.625,20,0.625,21,0.625,22,0.625,23,0.696,24,0.625,25,0.625,26,1.143,27,1.147,29,1.143,32,1.337,33,0.548,34,0.625,35,0.445,37,0.51,38,0.512,39,0.548,51,0.925,52,0.785,56,1.269,58,1.571,61,0.584,62,0.584,63,0.622,64,0.701,68,0.785,73,1.204,118,0.925,119,0.83,122,1.029,127,1.661,128,1.758,129,1.571,133,1.143,152,2.289,165,1.269,182,1.574,278,1.204,425,1.665,484,1.661,556,0.66,557,0.66,626,1.758,745,0.925,764,2.256,765,2.422,862,3.144,877,3.144,879,4.111,904,3.536,905,4.623,906,4.623,907,3.536,1019,2.617,1072,3.536,1073,4.131,1074,4.131,1075,4.131,1076,4.131,1077,4.131]],["title/quickstart/write.html#自定义样式",[1078,3.035]],["body/quickstart/write.html#自定义样式",[0,0.381,14,0.306,15,0.306,16,0.306,17,0.306,18,0.334,19,0.457,20,0.457,21,0.457,22,0.457,23,0.457,24,0.457,25,0.457,26,1.091,27,0.709,28,1.347,29,1.091,32,1.277,33,0.523,34,0.457,35,0.425,37,0.334,38,0.489,39,0.523,45,1.107,51,0.884,52,0.75,56,1.212,58,1.5,61,0.558,62,0.558,63,0.594,64,0.669,65,0.793,66,0.793,67,0.837,68,1.119,69,0.932,70,0.983,71,1.036,72,1.091,73,1.15,74,1.277,118,0.884,119,0.793,122,0.983,127,1.586,128,1.679,129,1.5,133,1.091,522,1.5,523,1.5,524,1.586,525,1.679,526,1.679,527,1.679,528,1.679,529,1.891,556,0.838,557,0.631,571,1.036,745,0.884,909,4.485,910,5.366,911,3.377,912,3.377,913,5.366,914,3.377,915,3.377,916,4.485,917,3.377,918,4.485,919,3.377,921,3.377,922,3.377,923,3.377,924,3.377,925,3.377,926,4.485,927,3.377,928,3.377,1078,3.377,1079,3.945,1080,3.377,1081,3.945,1082,3.945,1083,3.945,1084,3.945,1085,3.945,1086,3.945,1087,3.945,1088,3.945,1089,3.945,1090,3.945,1091,3.945,1092,3.945,1093,3.945]],["title/quickstart/write.html#合并单元格",[1094,3.035]],["body/quickstart/write.html#合并单元格",[0,0.38,14,0.362,15,0.453,16,0.453,17,0.362,18,0.396,19,0.541,20,0.541,21,0.541,22,0.541,23,0.541,24,0.541,25,0.541,26,1.293,27,0.84,28,1.596,29,1.293,32,1.513,33,0.62,34,0.541,35,0.503,37,0.396,38,0.58,39,0.62,45,0.793,51,1.047,52,0.889,56,1.436,58,1.778,61,0.661,62,0.661,63,0.703,118,1.047,119,0.939,122,1.164,127,1.879,128,1.989,129,1.778,133,1.293,199,1.989,556,0.934,557,0.747,571,1.227,745,1.047,930,5.003,932,5.459,933,4.001,1080,4.001,1094,4.001,1095,4.674,1096,4.674,1097,4.674,1098,4.674,1099,4.674]],["title/quickstart/write.html#使用table去写入",[1100,3.035]],["body/quickstart/write.html#使用table去写入",[0,0.38,14,0.429,15,0.333,16,0.333,17,0.333,18,0.364,19,0.496,20,0.496,21,0.496,22,0.496,23,0.496,24,0.496,25,0.496,26,1.187,27,0.771,28,1.464,29,1.187,33,0.569,34,0.496,35,0.462,37,0.364,38,0.532,39,0.569,51,0.961,52,0.816,56,1.318,61,0.606,62,0.606,63,0.645,64,0.728,65,0.862,66,0.862,67,0.91,68,0.816,69,1.013,70,1.068,71,1.126,118,0.961,119,0.862,122,1.068,133,1.187,185,2.756,186,3.82,199,1.825,503,2.654,507,2.057,556,0.885,557,0.686,571,1.126,745,0.961,850,2.961,851,2.961,852,3.82,935,4.738,936,3.672,938,4.738,939,4.738,940,4.738,941,4.738,1023,3.265,1024,3.265,1025,3.265,1100,3.672,1101,3.672,1102,4.29,1103,4.29,1104,4.29,1105,4.29,1106,4.29,1107,4.29,1108,4.29,1109,4.29,1110,4.29,1111,4.29,1112,4.29]],["title/quickstart/write.html#动态头，实时生成头写入",[1113,3.035]],["body/quickstart/write.html#动态头，实时生成头写入",[0,0.381,14,0.414,15,0.414,16,0.315,17,0.315,18,0.344,19,0.47,20,0.47,21,0.47,22,0.47,23,0.47,24,0.47,25,0.47,27,0.729,28,1.386,33,0.538,34,0.47,35,0.437,37,0.344,38,0.504,39,0.538,45,1.075,51,1.42,52,0.772,56,1.247,58,1.544,61,0.574,62,0.574,63,0.611,64,0.689,65,0.816,66,0.816,67,0.862,68,0.772,69,0.959,70,1.011,71,1.066,72,1.123,73,1.183,74,1.314,103,2.074,118,0.909,119,0.816,133,1.123,163,2.381,425,1.123,500,2.561,522,1.544,523,1.544,524,1.632,525,1.728,526,1.728,527,1.728,528,1.728,537,2.27,541,4.119,543,2.802,544,4.119,546,4.119,556,0.854,557,0.649,571,1.066,745,0.909,943,4.571,944,3.475,945,3.475,946,3.475,947,3.475,948,3.475,949,3.475,950,3.475,951,3.475,952,3.475,953,3.475,1101,3.475,1113,3.475,1114,4.06,1115,4.06,1116,4.06,1117,4.06,1118,4.06,1119,4.06,1120,4.06,1121,3.475,1122,4.06]],["title/quickstart/write.html#自动列宽-不太精确",[1123,3.035]],["body/quickstart/write.html#自动列宽-不太精确",[0,0.383,14,0.436,15,0.436,16,0.436,17,0.383,18,0.419,19,0.571,20,0.571,21,0.571,22,0.571,23,0.571,24,0.418,25,0.418,27,1.087,33,0.479,34,0.571,35,0.389,37,0.477,38,0.448,39,0.479,45,1.026,51,0.809,52,0.687,56,1.11,61,0.511,62,0.511,63,0.544,64,0.613,65,0.726,66,0.726,67,0.767,68,0.687,69,0.853,70,0.9,71,0.948,72,0.999,73,1.053,74,1.169,103,1.845,118,0.809,119,0.726,122,0.9,127,1.452,128,1.537,129,1.374,133,0.999,152,2.14,165,1.11,182,1.64,199,1.537,278,1.439,286,2.119,425,1.673,484,1.452,500,2.367,522,1.374,523,1.374,524,1.452,525,1.537,526,1.537,527,1.537,528,1.537,529,1.732,530,1.845,537,2.408,556,0.578,557,0.578,626,1.537,635,2.289,645,2.493,745,0.809,764,1.973,845,3.092,846,3.092,847,3.092,954,5.176,955,3.092,956,3.092,957,4.227,958,3.092,959,2.749,960,3.092,961,3.092,962,4.227,963,3.092,964,3.092,965,3.092,1121,3.092,1123,3.092,1124,3.612,1125,3.612,1126,3.612,1127,3.612,1128,3.612,1129,3.612,1130,3.612,1131,3.612,1132,3.612,1133,3.612]],["title/quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）",[1134,3.546]],["body/quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）",[0,0.382,4,1.843,14,0.437,15,0.475,16,0.369,17,0.369,18,0.403,19,0.55,20,0.55,21,0.55,22,0.55,23,0.55,24,0.55,25,0.55,27,0.854,28,0.912,33,0.354,34,0.728,35,0.636,37,0.337,38,0.331,39,0.354,45,0.894,51,0.598,52,0.508,56,0.82,58,1.016,61,0.672,62,0.672,63,0.716,64,0.807,65,0.956,66,0.956,67,0.845,68,0.756,69,0.94,70,0.991,71,1.045,72,1.101,73,1.16,74,1.288,118,0.598,119,0.537,122,0.665,127,1.074,128,1.137,129,1.016,133,0.739,163,3.465,165,1.222,188,1.843,190,1.843,199,2.024,425,1.101,522,1.016,523,1.016,524,1.074,525,1.137,526,1.137,527,1.137,528,1.137,529,1.28,530,1.364,537,2.004,556,0.636,557,0.427,571,0.701,630,2.746,631,2.521,632,3.637,639,3.078,643,2.334,684,2.746,745,0.598,959,2.033,966,3.406,967,3.406,968,3.406,969,3.406,970,2.286,971,2.286,972,5.601,973,5.058,974,3.406,975,4.511,976,2.286,977,4.071,978,4.071,979,4.511,980,2.286,981,4.511,982,2.286,983,2.286,984,2.286,985,2.286,986,3.406,987,2.286,988,2.286,989,2.286,990,2.286,991,3.406,992,2.286,993,2.286,994,2.286,995,4.071,996,2.286,997,2.286,998,4.511,999,2.286,1000,2.286,1001,4.511,1002,2.286,1003,2.286,1004,2.286,1005,2.286,1006,2.286,1007,2.286,1008,3.406,1009,2.286,1010,2.286,1012,3.406,1013,2.286,1014,2.286,1135,2.671,1136,2.671,1137,2.671,1138,2.671,1139,2.671,1140,4.756,1141,4.756,1142,2.671,1143,2.671,1144,2.671,1145,2.671,1146,2.671,1147,2.671,1148,2.671,1149,2.671]],["title/quickstart/write.html#web中的写",[1150,3.546]],["body/quickstart/write.html#web中的写",[0,0.38,11,1.874,14,0.436,15,0.436,16,0.436,17,0.341,18,0.373,19,0.509,20,0.509,21,0.718,22,0.509,23,0.509,24,0.509,25,0.509,27,0.791,34,0.509,35,0.474,37,0.373,38,0.698,52,0.837,58,1.675,60,2.582,61,0.622,62,0.622,63,0.662,64,0.747,65,0.885,66,0.885,67,0.934,75,3.039,77,3.039,78,3.885,79,3.039,80,3.039,81,1.987,82,2.249,83,3.039,84,3.039,85,3.039,86,3.885,87,3.039,88,3.039,89,3.039,91,3.039,92,3.039,116,3.351,118,0.986,119,0.885,133,1.218,135,3.769,136,3.769,137,3.351,138,3.769,537,2.36,556,0.9,557,0.704,571,1.156,586,2.789,843,3.769,1017,3.769,1018,3.769,1151,4.403,1152,4.403,1153,4.403,1154,4.403,1155,4.403,1156,4.403]]],"invertedIndex":[["",{"_index":0,"title":{"index.html":{},"support/about.html":{}},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{},"quickstart/faq.html#超大-10M以上-文件读取说明":{},"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["0",{"_index":199,"title":{},"body":{"quickstart/api.html":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{},"quickstart/write.html":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["0.56",{"_index":848,"title":{},"body":{"quickstart/write.html":{}}}],["03",{"_index":54,"title":{},"body":{"index.html":{},"quickstart/write.html":{}}}],["03&#x7248;&#x6ca1;&#x6709;&#x529e;&#x6cd5;&#x5904;&#x7406;&#xff0c;&#x76f8;&#x5bf9;&#x5185;&#x5b58;&#x5360;&#x7528;&#x5927;&#x5f88;&#x591a;&#x3002;excel",{"_index":365,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["03版没有办法处理，相对内存占用大很多。excel",{"_index":297,"title":{},"body":{"quickstart/faq.html":{}}}],["03版的excel",{"_index":673,"title":{},"body":{"quickstart/read.html":{}}}],["07",{"_index":298,"title":{},"body":{"quickstart/faq.html":{}}}],["07&#x7248;&#x672c;&#x6709;&#x4e2a;&#x5171;&#x4eab;&#x5b57;&#x7b26;&#x4e32",{"_index":366,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["1",{"_index":14,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{},"quickstart/faq.html#超大-10M以上-文件读取说明":{},"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["1&#x3001;&#x6587;&#x4ef6;&#x89e3;&#x538b;&#x6587;&#x4ef6;&#x8bfb;&#x53d6;&#x901a;&#x8fc7;&#x6587;&#x4ef6;&#x5f62;&#x5f0f",{"_index":477,"title":{},"body":{"support/about.html#核心原理":{}}}],["10",{"_index":23,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["10&#x500d;&#xff0c;&#x6240;&#x4ee5;easyexcel&#x7528;&#x5b58;&#x50a8;&#x6587;&#x4ef6;&#x7684;&#xff0c;&#x7136;&#x540e;&#x518d;&#x53cd;&#x5e8f;&#x5217;&#x5316;&#x53bb;&#x8bfb;&#x53d6;&#x7684;&#x7b56;&#x7565;&#x6765;&#x8282;&#x7ea6;&#x5185;&#x5b58;&#x3002;&#x5f53;&#x7136;&#x9700;&#x8981;&#x901a;&#x8fc7;&#x6587;&#x4ef6;&#x53cd;&#x5e8f;&#x5217;&#x5316;&#x4ee5;&#x540e;&#xff0c;&#x6548;&#x7387;&#x4f1a;&#x964d;&#x4f4e;&#xff0c;&#x5927;&#x6982;&#x964d;&#x4f4e;30",{"_index":369,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["100",{"_index":878,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["1000",{"_index":520,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#复杂的填充":{}}}],["1000000000000.0",{"_index":965,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["100m",{"_index":10,"title":{},"body":{"index.html":{}}}],["100m内存(这里说的是解析过程中的永久占用,临时对象不算)来解析excel",{"_index":314,"title":{},"body":{"quickstart/faq.html":{}}}],["10m",{"_index":296,"title":{},"body":{"quickstart/faq.html":{}}}],["10倍，所以easyexcel用存储文件的，然后再反序列化去读取的策略来节约内存。当然需要通过文件反序列化以后，效率会降低，大概降低30",{"_index":300,"title":{},"body":{"quickstart/faq.html":{}}}],["11",{"_index":24,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["12",{"_index":25,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["13",{"_index":61,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["14",{"_index":62,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["15",{"_index":63,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["16",{"_index":64,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["17",{"_index":65,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["18",{"_index":66,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["19",{"_index":67,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#同步的返回":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["1，因为头就是一行。如果多行头，可以设置其他值。不传入也可以，因为默认会根据demodata",{"_index":713,"title":{},"body":{"quickstart/read.html":{}}}],["2",{"_index":15,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{},"quickstart/faq.html#超大-10M以上-文件读取说明":{},"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["2&#x3001;&#x907f;&#x514d;&#x5c06;&#x5168;&#x90e8;&#x5168;&#x90e8;&#x6570;&#x636e;&#x4e00;&#x6b21;&#x52a0;&#x8f7d;&#x5230;&#x5185;&#x5b58",{"_index":478,"title":{},"body":{"support/about.html#核心原理":{}}}],["2.0.0",{"_index":275,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#读取文件务必使用2-0-3":{}}}],["2.0.3",{"_index":274,"title":{},"body":{"quickstart/faq.html":{}}}],["20",{"_index":68,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#同步的返回":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["20))&#x53c2;&#x6570;&#x800c;&#x5df2;&#xff0c;&#x5176;&#x4ed6;&#x7684;&#x53c2;&#x7167;&#x5176;&#x4ed6;demo&#x5199",{"_index":399,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["20))参数而已，其他的参照其他demo",{"_index":319,"title":{},"body":{"quickstart/faq.html":{}}}],["2003",{"_index":180,"title":{},"body":{"quickstart/api.html":{}}}],["2003&#x4e0d;&#x652f;&#x6301;&#x6839;&#x636e;&#x540d;&#x5b57;&#x53bb;&#x5339;&#x914d",{"_index":246,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["2019&#x5e74;10&#x6708;9&#x65e5;13:28:28",{"_index":601,"title":{},"body":{"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{}}}],["2019年10月9日13:28:28",{"_index":518,"title":{},"body":{"quickstart/fill.html":{}}}],["20m",{"_index":313,"title":{},"body":{"quickstart/faq.html":{}}}],["20m+90m",{"_index":315,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["20m的excel使用150m（很多临时对象，所以100m会一直gc",{"_index":307,"title":{},"body":{"quickstart/faq.html":{}}}],["21",{"_index":69,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#同步的返回":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["21960511",{"_index":8,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{}}}],["22",{"_index":70,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["23",{"_index":71,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["24",{"_index":72,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["25",{"_index":73,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["26",{"_index":74,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["27",{"_index":522,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["28",{"_index":523,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["29",{"_index":524,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["2个线程同时判断directory.exist",{"_index":432,"title":{},"body":{"support/about.html":{}}}],["3",{"_index":16,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{},"quickstart/faq.html#超大-10M以上-文件读取说明":{},"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["3&#x3001;&#x629b;&#x5f03;&#x4e0d;&#x91cd;&#x8981;&#x7684;&#x6570;&#x636",{"_index":480,"title":{},"body":{"support/about.html#核心原理":{}}}],["3.15.jar:3.15",{"_index":423,"title":{},"body":{"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["3.17",{"_index":287,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["30",{"_index":525,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["31",{"_index":526,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["32",{"_index":527,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["33",{"_index":528,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["34",{"_index":529,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["35",{"_index":530,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["36",{"_index":531,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["37",{"_index":532,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["38",{"_index":533,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["39",{"_index":534,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["4",{"_index":17,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{},"quickstart/faq.html#超大-10M以上-文件读取说明":{},"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["4.0.1",{"_index":288,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["4.1.0",{"_index":289,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["40",{"_index":535,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["4000000",{"_index":327,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["400w",{"_index":328,"title":{},"body":{"quickstart/faq.html":{}}}],["41",{"_index":536,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["42",{"_index":678,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["43",{"_index":679,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["44",{"_index":680,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["45",{"_index":681,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["46",{"_index":682,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["47",{"_index":859,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["48",{"_index":860,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["49",{"_index":861,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["4k，400w/4k=1000",{"_index":332,"title":{},"body":{"quickstart/faq.html":{}}}],["5",{"_index":18,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{},"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["5.2",{"_index":491,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{}}}],["50",{"_index":862,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#列宽、行高":{}}}],["50%&#xff08;&#x4e0d;&#x4e00;&#x5b9a;&#xff0c;&#x4e5f;&#x770b;&#x547d;&#x4e2d;&#x7387;&#xff0c;&#x53ef;&#x80fd;&#x4f1a;&#x8d85;&#x8fc7;100%&#xff09",{"_index":370,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["50%（不一定，也看命中率，可能会超过100",{"_index":301,"title":{},"body":{"quickstart/faq.html":{}}}],["500",{"_index":333,"title":{},"body":{"quickstart/faq.html":{}}}],["500到1000",{"_index":334,"title":{},"body":{"quickstart/faq.html":{}}}],["50m&#x7684;&#x5185;&#x5b58;,&#x8d85;&#x8fc7;5m&#x5219;&#x4f7f;&#x7528;&#x6587;&#x4ef6;&#x5b58;&#x50a8;&#xff0c;&#x7136;&#x540e;&#x6587;&#x4ef6;&#x5b58;&#x50a8;&#x4e5f;&#x8981;&#x8bbe;&#x7f6e;&#x591a;&#x5185;&#x5b58;m&#x7528;&#x6765;&#x5b58;&#x653e;&#x4e34;&#x65f6;&#x7684;&#x5171;&#x4eab;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x9ed8;&#x8ba4;20m&#x3002;&#x9664;&#x4e86;&#x5171;&#x4eab;&#x5b57;&#x7b26;&#x4e32;&#x5360;&#x7528;&#x5185;&#x5b58;&#x5916;&#xff0c;&#x5176;&#x4ed6;&#x5360;&#x7528;&#x8f83;&#x5c11;&#xff0c;&#x6240;&#x4ee5;&#x53ef;&#x4ee5;&#x9884;&#x4f30;10m&#xff0c;&#x6240;&#x4ee5;&#x9ed8;&#x8ba4;&#x5927;&#x6982;30m&#x5c31;&#x80fd;&#x8bfb;&#x53d6;&#x4e00;&#x4e2a;&#x8d85;&#x7ea7;&#x5927;&#x7684;&#x6587;&#x4ef6;&#x3002",{"_index":374,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["50m的内存,超过5m则使用文件存储，然后文件存储也要设置多内存m用来存放临时的共享字符串，默认20m。除了共享字符串占用内存外，其他占用较少，所以可以预估10m，所以默认大概30m",{"_index":304,"title":{},"body":{"quickstart/faq.html":{}}}],["51",{"_index":863,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["52",{"_index":864,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["53",{"_index":865,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["54",{"_index":866,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["55",{"_index":867,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["56",{"_index":868,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["5m",{"_index":173,"title":{},"body":{"quickstart/api.html":{},"quickstart/faq.html":{}}}],["5m以下会使用内存存储，大概占用15",{"_index":303,"title":{},"body":{"quickstart/faq.html":{}}}],["5个sheet",{"_index":870,"title":{},"body":{"quickstart/write.html":{}}}],["5条存储数据库，实际使用中可以3000条，然后清理list",{"_index":634,"title":{},"body":{"quickstart/read.html":{}}}],["6",{"_index":19,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["64m&#x5185;&#x5b58;1&#x5206;&#x949f;&#x5185;&#x8bfb;&#x53d6;75m(46w&#x884c;25&#x5217;)&#x7684;excel",{"_index":112,"title":{},"body":{"index.html#EasyExcel":{}}}],["64m内存1分钟内读取75m(46w行25列)的excel",{"_index":9,"title":{},"body":{"index.html":{}}}],["662022184",{"_index":7,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{}}}],["7",{"_index":20,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["8",{"_index":21,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["9",{"_index":22,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["90",{"_index":316,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["aftercellcr",{"_index":980,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["aftercelldispos",{"_index":982,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["aftersheetcr",{"_index":999,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["alreadi",{"_index":325,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["amp;&amp",{"_index":987,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["analysiscontext",{"_index":641,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{}}}],["analysiseventlisten",{"_index":629,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{}}}],["api",{"_index":140,"title":{"quickstart/api.html":{}},"body":{"support/about.html":{}}}],["api&#xff09;&#x201d;&#x65b9;&#x5f0f;&#x6765;&#x89e3;&#x51b3;&#x3002",{"_index":475,"title":{},"body":{"support/about.html#核心原理":{}}}],["apo",{"_index":431,"title":{},"body":{"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["apos;/home/admin/dio2o/.default/temp/poifiles&apo",{"_index":421,"title":{},"body":{"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["application/vnd.m",{"_index":84,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/write.html":{},"quickstart/write.html#web中的写":{}}}],["arraylistdemodata",{"_index":638,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/write.html":{}}}],["arraylistimagedata",{"_index":888,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["arraylistliststr",{"_index":543,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/write.html":{},"quickstart/write.html#动态头，实时生成头写入":{}}}],["arraylistlongestmatchcolumnwidthdata",{"_index":964,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["arrayliststr",{"_index":546,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/write.html":{},"quickstart/write.html#动态头，实时生成头写入":{}}}],["attachment;filenam",{"_index":1018,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#web中的写":{}}}],["attachment;filename=demo.xlsx",{"_index":90,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{}}}],["author",{"_index":966,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["autoclosestream",{"_index":171,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["autotrim",{"_index":166,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["autowir",{"_index":292,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["batch_count",{"_index":636,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{}}}],["beforecellcr",{"_index":971,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["beforesheetcr",{"_index":997,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["beta1&#x5230;2.0.2&#x6709;&#x5c0f;&#x6982;&#x7387;&#x4f1a;&#x4e22;&#x5931;&#x6570;&#x5b57;&#x3002",{"_index":337,"title":{},"body":{"quickstart/faq.html#读取文件务必使用2-0-3":{}}}],["beta1到2.0.2",{"_index":276,"title":{},"body":{"quickstart/faq.html":{}}}],["boolean",{"_index":978,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["bug",{"_index":293,"title":{},"body":{"quickstart/faq.html":{},"support/about.html":{}}}],["build",{"_index":653,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#重复多次写入":{}}}],["byte",{"_index":883,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["bytearray",{"_index":884,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["cach",{"_index":329,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["caus",{"_index":416,"title":{},"body":{"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["cell",{"_index":981,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["cell.getcolumnindex",{"_index":986,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["cell.getrowindex",{"_index":985,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["cell.sethyperlink(hyperlink",{"_index":994,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["celldata",{"_index":691,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["celldata(valu",{"_index":700,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["celldata.getstringvalu",{"_index":698,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["celldatalist",{"_index":984,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["celldatatypeenum",{"_index":687,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["celldatatypeenum.str",{"_index":689,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["cellrangeaddresslist",{"_index":1001,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["cellwritehandl",{"_index":190,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["class",{"_index":165,"title":{},"body":{"quickstart/api.html":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["classnotfoundexcept",{"_index":282,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["class则默认为1.当然你指定了headrownumber不管是否传入class",{"_index":710,"title":{},"body":{"quickstart/read.html":{}}}],["class去读，然后写到第一个sheet",{"_index":53,"title":{},"body":{"index.html":{},"quickstart/write.html":{}}}],["class去读，然后读取第一个sheet",{"_index":42,"title":{},"body":{"index.html":{},"quickstart/read.html":{}}}],["class，返回一个list，然后读取第一个sheet",{"_index":721,"title":{},"body":{"quickstart/read.html":{}}}],["clazz",{"_index":164,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["clean",{"_index":285,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["columnindex",{"_index":976,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["columnwidth",{"_index":879,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#列宽、行高":{}}}],["columnwidth}&#x3001",{"_index":1075,"title":{},"body":{"quickstart/write.html#列宽、行高":{}}}],["com.alibaba.easyexcel.test.demo.write.demodata",{"_index":48,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{}}}],["complex.xlsx",{"_index":509,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#复杂的填充":{}}}],["complexfil",{"_index":508,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#复杂的填充":{}}}],["complexfillwitht",{"_index":539,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{}}}],["complexfillwithtable.xlsx",{"_index":540,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{}}}],["complexheaddata",{"_index":856,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{}}}],["complexheaddata.class).sheet",{"_index":858,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#复杂头写入":{}}}],["complexheaderread",{"_index":711,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#多行头":{}}}],["complexheadwrit",{"_index":857,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#复杂头写入":{}}}],["constraint",{"_index":1006,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["content",{"_index":88,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/write.html":{},"quickstart/write.html#web中的写":{}}}],["contentproperti",{"_index":693,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["contentrowheight",{"_index":877,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#列宽、行高":{}}}],["contentrowheight}&#x6307;&#x5b9a;&#x5bbd;&#x5ea6;&#x6216;&#x9ad8;&#x5ea6",{"_index":1077,"title":{},"body":{"quickstart/write.html#列宽、行高":{}}}],["contentwritecellstyl",{"_index":918,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义样式":{}}}],["contentwritecellstyle.setfillforegroundcolor(indexedcolors.green.getindex",{"_index":922,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义样式":{}}}],["contentwritecellstyle.setfillpatterntype(fillpatterntype.solid_foreground",{"_index":921,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义样式":{}}}],["contentwritecellstyle.setwritefont(contentwritefont",{"_index":925,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义样式":{}}}],["contentwritefont",{"_index":923,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义样式":{}}}],["contentwritefont.setfontheightinpoint",{"_index":924,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义样式":{}}}],["context",{"_index":642,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{}}}],["convert",{"_index":161,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{}}}],["converterdata",{"_index":675,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#日期、数字或者自定义格式转换":{}}}],["converterdata.class",{"_index":704,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["converterdata.class).sheet",{"_index":876,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#日期、数字或者自定义格式转换":{}}}],["converterdatalisten",{"_index":702,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["converterdata}.&#x91cc;&#x9762;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x6ce8;&#x89e3",{"_index":800,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["converterread",{"_index":703,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["converterwrit",{"_index":875,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#日期、数字或者自定义格式转换":{}}}],["converttoexceldata",{"_index":699,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["converttojavadata",{"_index":696,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["count:4001",{"_index":331,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["creat",{"_index":418,"title":{},"body":{"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["createhelp",{"_index":989,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["createhelper.createhyperlink(hyperlinktype.url",{"_index":992,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["createtempdirectory(fil",{"_index":426,"title":{},"body":{"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["creationhelp",{"_index":988,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["csv",{"_index":277,"title":{},"body":{"quickstart/faq.html":{},"support/about.html":{},"support/about.html#Excel格式分析格式分析":{}}}],["csv&#x8bfb;&#x53d6;&#xff08;&#x8fd9;&#x4e2a;&#x540e;&#x7eed;&#x53ef;&#x80fd;&#x4f1a;&#x8003;&#x8651;&#xff09",{"_index":342,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["customcellwritehandl",{"_index":969,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["customcellwritehandler()).sheet",{"_index":1014,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["customhandlerwrit",{"_index":1012,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["customsheetwritehandl",{"_index":995,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["customstringstringconvert",{"_index":683,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["customstringstringconverter.class",{"_index":676,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#日期、数字或者自定义格式转换":{}}}],["data",{"_index":278,"title":{},"body":{"quickstart/faq.html":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["data.setd",{"_index":846,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["data.setdoubledata",{"_index":847,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["data.setstr",{"_index":845,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["datalong",{"_index":963,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["datavalid",{"_index":1008,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["datavalidationconstraint",{"_index":1005,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["datavalidationhelp",{"_index":1002,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["date",{"_index":182,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/fill.html":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["datetimeformat",{"_index":155,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#日期、数字或者自定义格式转换":{}}}],["datetimeformat}&#x3001",{"_index":801,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#日期、数字或者自定义格式转换":{}}}],["db&#x662f;&#x5fae;&#x8f6f;com&#x7ec4;&#x4ef6;&#x7684;&#x4e00;&#x79cd;&#x5b9e;&#x73b0;&#xff0c;&#x672c;&#x8d28;&#x4e0a;&#x4e5f;&#x662f;&#x4e00;&#x4e2a;&#x5fae;&#x578b;&#x6570;&#x636e;&#x5e93;&#xff0c;&#x7531;&#x4e8e;&#x5fae;&#x8f6f;&#x7684;&#x4e1c;&#x897f;&#x5f88;&#x591a;&#x4e0d;&#x5f00;&#x6e90;&#xff0c;&#x53e6;&#x5916;&#x4e5f;&#x5df2;&#x7ecf;&#x88ab;&#x6dd8;&#x6c70;&#xff0c;&#x4e86;&#x89e3;&#x5b83;&#x7684;&#x7ec6;&#x8282;&#x610f;&#x4e49;&#x4e0d;&#x5927;&#xff0c;&#x5e95;&#x5c42;&#x7684;&#x7f16;&#x7a0b;&#x90fd;&#x662f;&#x57fa;&#x4e8e;&#x5fae;&#x8f6f;&#x7684;com&#x7ec4;&#x4ef6;&#x53bb;&#x5f00;&#x53d1;&#x7684;&#x3002",{"_index":466,"title":{},"body":{"support/about.html#Excel格式分析格式分析":{}}}],["db是微软com组件的一种实现，本质上也是一个微型数据库，由于微软的东西很多不开源，另外也已经被淘汰，了解它的细节意义不大，底层的编程都是基于微软的com",{"_index":438,"title":{},"body":{"support/about.html":{}}}],["debug",{"_index":324,"title":{},"body":{"quickstart/faq.html":{}}}],["defaultconverterloader#loaddefaultreadconvert",{"_index":701,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["demo",{"_index":12,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/faq.html":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/write.html":{},"quickstart/write.html#根据模板写入":{}}}],["demo&#x4ee3;&#x7801;&#x5730;&#x5740;&#xff1a",{"_index":116,"title":{},"body":{"index.html#EasyExcel":{},"quickstart/read.html#web中的读":{},"quickstart/write.html#web中的写":{}}}],["demo&#x8fd9;&#x91cc;&#x5b9e;&#x73b0;2&#x70b9;&#x3002;1",{"_index":1146,"title":{},"body":{"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["demo.xlsx",{"_index":41,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/write.html":{},"quickstart/write.html#根据模板写入":{}}}],["demodata",{"_index":28,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["demodata)obj",{"_index":720,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#同步的返回":{}}}],["demodata.class",{"_index":44,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#多行头":{},"quickstart/read.html#读取表头数据":{}}}],["demodata.class).build",{"_index":850,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#使用table去写入":{}}}],["demodata.class).registerwritehandl",{"_index":1013,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["demodata.class).registerwritehandler(horizontalcellstylestrategy).sheet",{"_index":928,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义样式":{}}}],["demodata.class).registerwritehandler(loopmergestrategy).sheet",{"_index":933,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#合并单元格":{}}}],["demodata.class).sheet",{"_index":57,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{}}}],["demodata.class).withtemplate(templatefilename).sheet().dowrite(data",{"_index":903,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#根据模板写入":{}}}],["demodatalisten",{"_index":31,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#多行头":{}}}],["demodatalistener&#x7684;doafterallanalys",{"_index":774,"title":{},"body":{"quickstart/read.html#读多个sheet":{}}}],["demodatalistener()).build",{"_index":651,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{}}}],["demodatalistener()).doreadal",{"_index":666,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#读多个sheet":{}}}],["demodatalistener()).sheet",{"_index":712,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#多行头":{}}}],["demodatalistener()).sheet().doread",{"_index":46,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{}}}],["demodatalistener的doafterallanalys",{"_index":664,"title":{},"body":{"quickstart/read.html":{}}}],["demoexceptionlisten",{"_index":741,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#数据转换等异常处理":{}}}],["demoexceptionlistener()).sheet().doread",{"_index":744,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#数据转换等异常处理":{}}}],["demoheaddatalisten",{"_index":728,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#读取表头数据":{}}}],["demoheaddatalistener()).sheet().doread",{"_index":730,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#读取表头数据":{}}}],["demo这里实现2点。1",{"_index":1011,"title":{},"body":{"quickstart/write.html":{}}}],["directori",{"_index":420,"title":{},"body":{"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["directory.exist",{"_index":427,"title":{},"body":{"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["directory.isdirectori",{"_index":429,"title":{},"body":{"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["directory.mkdir",{"_index":428,"title":{},"body":{"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["disposit",{"_index":89,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/write.html":{},"quickstart/write.html#web中的写":{}}}],["doafterallanalys",{"_index":649,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{}}}],["doread",{"_index":714,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#多行头":{}}}],["doubl",{"_index":484,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["doubledata",{"_index":626,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["download",{"_index":78,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/write.html":{},"quickstart/write.html#web中的写":{}}}],["downloaddata",{"_index":75,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/write.html":{},"quickstart/write.html#web中的写":{}}}],["downloaddata.class).sheet",{"_index":92,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/write.html":{},"quickstart/write.html#web中的写":{}}}],["dowrite(data",{"_index":58,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["dowrite(datalong",{"_index":961,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["dynamicheadwrit",{"_index":943,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#动态头，实时生成头写入":{}}}],["eachcolumn",{"_index":931,"title":{},"body":{"quickstart/write.html":{}}}],["easyexcel",{"_index":1,"title":{"index.html#EasyExcel":{}},"body":{"index.html":{},"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{},"quickstart/write.html":{}}}],["easyexcel&#x4f1a;&#x5e2e;&#x5fd9;&#x521b;&#x5efa;&#x4e34;&#x65f6;&#x6587;&#x4ef6;&#xff0c;&#x6700;&#x7ec8;&#x8fd8;&#x662f",{"_index":237,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["easyexcel&#x5728;&#x4f7f;&#x7528;&#x6587;&#x4ef6;&#x5b58;&#x50a8;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x4f1a;&#x628a;&#x5171;&#x4eab;&#x5b57;&#x7b26;&#x4e32;&#x62c6;&#x5206;&#x6210;1000&#x6761;&#x4e00;&#x6279;&#xff0c;&#x7136;&#x540e;&#x653e;&#x5230;&#x6587;&#x4ef6;&#x5b58;&#x50a8;&#x3002;&#x7136;&#x540e;excel&#x6765;&#x8bfb;&#x53d6;&#x5171;&#x4eab;&#x5b57;&#x7b26;&#x4e32;&#x5927;&#x6982;&#x7387;&#x662f;&#x6309;&#x7167;&#x987a;&#x5e8f;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x9ed8;&#x8ba4;20m&#x7684;1000&#x6761;&#x7684;&#x6570;&#x636e;&#x653e;&#x5728;&#x5185;&#x5b58;&#xff0c;&#x547d;&#x4e2d;&#x540e;&#x76f4;&#x63a5;&#x8fd4;&#x56de;&#xff0c;&#x6ca1;&#x547d;&#x4e2d;&#x53bb;&#x8bfb;&#x6587;&#x4ef6;&#x3002;&#x6240;&#x4ee5;&#x4e0d;&#x80fd;&#x8bbe;&#x7f6e;&#x592a;&#x5c0f;&#xff0c;&#x592a;&#x5c0f;&#x4e86;&#xff0c;&#x5f88;&#x96be;&#x547d;&#x4e2d;&#xff0c;&#x4e00;&#x76f4;&#x53bb;&#x8bfb;&#x53d6;&#x6587;&#x4ef6;&#xff0c;&#x592a;&#x5927;&#x4e86;&#x7684;&#x8bdd;&#x4f1a;&#x5360;&#x7528;&#x8fc7;&#x591a;&#x7684;&#x5185;&#x5b58;&#x3002",{"_index":402,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["easyexcel&#x662f;&#x4e00;&#x4e2a;&#x57fa;&#x4e8e;java&#x7684;&#x7b80;&#x5355;&#x3001;&#x7701;&#x5185;&#x5b58;&#x7684;&#x8bfb;&#x53d6;excel&#x7684;&#x5f00;&#x6e90;&#x9879;&#x76ee;&#x3002",{"_index":105,"title":{},"body":{"index.html#EasyExcel":{}}}],["easyexcel.read().readcach",{"_index":310,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{},"quickstart/faq.html#超大-10M以上-文件读取说明":{}}}],["easyexcel.read().readcacheselector",{"_index":320,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["easyexcel.read(file.getinputstream",{"_index":100,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#web中的读":{}}}],["easyexcel.read(filenam",{"_index":43,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{}}}],["easyexcel.read(filename).build",{"_index":667,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#读多个sheet":{}}}],["easyexcel.read(filename).head(demodata.class).sheet().doreadsync",{"_index":718,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#同步的返回":{}}}],["easyexcel.read(filename).sheet().doreadsync",{"_index":722,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#同步的返回":{}}}],["easyexcel.readsheet",{"_index":652,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{}}}],["easyexcel.write(filenam",{"_index":56,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["easyexcel.write(filename).build",{"_index":872,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["easyexcel.write(filename).withtemplate(templatefilename).build",{"_index":504,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{}}}],["easyexcel.write(filename).withtemplate(templatefilename).sheet().dofill(data",{"_index":502,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#填充列表":{}}}],["easyexcel.write(filename).withtemplate(templatefilename).sheet().dofill(filldata",{"_index":492,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{}}}],["easyexcel.write(filename).withtemplate(templatefilename).sheet().dofill(map",{"_index":498,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{}}}],["easyexcel.write(response.getoutputstream",{"_index":91,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/write.html":{},"quickstart/write.html#web中的写":{}}}],["easyexcel.writersheet",{"_index":851,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#使用table去写入":{}}}],["easyexcel.writersheet().build",{"_index":505,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{}}}],["easyexcel.writersheet(i",{"_index":871,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["easyexcel.writert",{"_index":939,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#使用table去写入":{}}}],["easyexcel在使用文件存储的时候，会把共享字符串拆分成1000条一批，然后放到文件存储。然后excel来读取共享字符串大概率是按照顺序的，所以默认20m的1000",{"_index":323,"title":{},"body":{"quickstart/faq.html":{}}}],["easyexcel在写文件时候首先创建了该临时目录，避免poi",{"_index":435,"title":{},"body":{"support/about.html":{}}}],["easyexcel是一个基于java的简单、省内存的读取excel",{"_index":2,"title":{},"body":{"index.html":{}}}],["ehcach",{"_index":174,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["excel",{"_index":11,"title":{"quickstart/fill.html":{},"quickstart/read.html":{},"quickstart/write.html":{}},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/api.html":{},"support/about.html":{},"quickstart/fill.html":{},"quickstart/read.html":{},"quickstart/write.html":{},"quickstart/write.html#web中的写":{}}}],["excel&#x683c;&#x5f0f;&#x5206;&#x6790;&#x683c;&#x5f0f;&#x5206;&#x6790",{"_index":463,"title":{"support/about.html#Excel格式分析格式分析":{}},"body":{}}],["excel&#x793a;&#x4f8b",{"_index":745,"title":{},"body":{"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["excel&#x89e3;&#x6790;&#x65f6;&#x5019;&#x4f1a;&#x5305;&#x542b;&#x6837;&#x5f0f;&#xff0c;&#x5b57;&#x4f53;&#xff0c;&#x5bbd;&#x5ea6;&#x7b49;&#x6570;&#x636e;&#xff0c;&#x4f46;&#x8fd9;&#x4e9b;&#x6570;&#x636e;&#x662f;&#x6211;&#x4eec;&#x4e0d;&#x5173;&#x5fc3;&#x7684;&#xff0c;&#x5982;&#x679c;&#x5c06;&#x8fd9;&#x90e8;&#x5206;&#x6570;&#x636e;&#x629b;&#x5f03;&#x53ef;&#x4ee5;&#x5927;&#x5927;&#x964d;&#x4f4e;&#x5185;&#x5b58;&#x4f7f;&#x7528;&#x3002;excel&#x4e2d;&#x6570;&#x636e;&#x5982;&#x4e0b;style&#x5360;&#x4e86;&#x76f8;&#x5f53;&#x5927;&#x7684;&#x7a7a;&#x95f4;&#x3002",{"_index":481,"title":{},"body":{"support/about.html#核心原理":{}}}],["excel&#x8bfb;&#x5199;&#x65f6;&#x5019;&#x5185;&#x5b58;&#x6ea2;&#x51fa",{"_index":449,"title":{"support/about.html#Excel读写时候内存溢出":{}},"body":{}}],["excel,比如希望读取excel最多占用100m内存（是读取过程中永久占用，新生代马上回收的不算），那就设置使用文件来存储共享字符串的大小判断为20m(小于20m存内存，大于存临时文件)，然后设置文件存储时临时共享字符串占用内存大小90m",{"_index":305,"title":{},"body":{"quickstart/faq.html":{}}}],["excel2007&#x524d;excel&#x7684;&#x6587;&#x4ef6;&#x5b58;&#x50a8;&#x683c;&#x5f0f;&#xff0c;&#x5b9e;&#x73b0;&#x539f;&#x7406;&#x662f;&#x57fa;&#x4e8e;&#x5fae;&#x8f6f;&#x7684;ol",{"_index":465,"title":{},"body":{"support/about.html#Excel格式分析格式分析":{}}}],["excel2007&#x540e;excel&#x7684;&#x6587;&#x4ef6;&#x5b58;&#x50a8;&#x683c;&#x5f0f;&#xff0c;&#x5b9e;&#x73b0;&#x662f;&#x57fa;&#x4e8e;openxml&#x548c;zip&#x6280;&#x672f;&#x3002;&#x8fd9;&#x79cd;&#x5b58;&#x50a8;&#x7b80;&#x5355;&#xff0c;&#x5b89;&#x5168;&#x4f20;&#x8f93;&#x65b9;&#x4fbf;&#xff0c;&#x540c;&#x65f6;&#x5904;&#x7406;&#x6570;&#x636e;&#x4e5f;&#x53d8;&#x7684;&#x7b80;&#x5355;&#x3002",{"_index":468,"title":{},"body":{"support/about.html#Excel格式分析格式分析":{}}}],["excel2007前excel的文件存储格式，实现原理是基于微软的ol",{"_index":437,"title":{},"body":{"support/about.html":{}}}],["excel2007后excel的文件存储格式，实现是基于openxml和zip",{"_index":440,"title":{},"body":{"support/about.html":{}}}],["excelcontentproperti",{"_index":697,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["exceldataconvertexcept",{"_index":737,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#数据转换等异常处理":{}}}],["exceldataconvertexception)except",{"_index":738,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#数据转换等异常处理":{}}}],["exceldataconvertexception.getcolumnindex",{"_index":740,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#数据转换等异常处理":{}}}],["exceldataconvertexception.getrowindex",{"_index":739,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#数据转换等异常处理":{}}}],["excelignor",{"_index":154,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{}}}],["excelignoreunannot",{"_index":160,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["excelproperti",{"_index":152,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/read.html":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["excelproperty#valu",{"_index":709,"title":{},"body":{"quickstart/read.html":{}}}],["excelproperty#value()}&#x91cc;&#x9762;&#x7684;&#x8868;&#x5934;&#x7684;&#x6570;&#x91cf;&#x6765;&#x51b3;&#x5b9a;&#x884c;&#x6570;&#xff0c",{"_index":813,"title":{},"body":{"quickstart/read.html#多行头":{}}}],["excelproperty}&#x6ce8;&#x89e3",{"_index":768,"title":{},"body":{"quickstart/read.html#指定列的下标或者列名":{}}}],["excelproperty}&#x6ce8;&#x89e3;&#x6307;&#x5b9a;&#x5199;&#x5165;&#x7684;&#x5217",{"_index":1030,"title":{},"body":{"quickstart/write.html#指定写入的列":{},"quickstart/write.html#根据模板写入":{}}}],["excelproperty}&#x6ce8;&#x89e3;&#x6307;&#x5b9a;&#x590d;&#x6742;&#x7684;&#x5934",{"_index":1033,"title":{},"body":{"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{}}}],["excelproperty}&#x914d;&#x5408;&#x4f7f;&#x7528;&#x6ce8;&#x89e3",{"_index":1060,"title":{},"body":{"quickstart/write.html#日期、数字或者自定义格式转换":{}}}],["excelread",{"_index":650,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{}}}],["excelreader.finish",{"_index":655,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{}}}],["excelreader.read(readsheet",{"_index":654,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{}}}],["excelreader.read(readsheet1",{"_index":674,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#读多个sheet":{}}}],["excelreaderbuild",{"_index":141,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["excelreadersheetbuild",{"_index":145,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["exceltyp",{"_index":55,"title":{},"body":{"index.html":{},"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/write.html":{}}}],["excelwrit",{"_index":503,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#使用table去写入":{}}}],["excelwriter.fill(data",{"_index":506,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{}}}],["excelwriter.fill(map",{"_index":521,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{}}}],["excelwriter.finish",{"_index":507,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#使用table去写入":{}}}],["excelwriter.write(data",{"_index":852,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#使用table去写入":{}}}],["excelwriter.write(totallistlist",{"_index":550,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{}}}],["excelwriterbuild",{"_index":142,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["excelwritersheetbuild",{"_index":146,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["excel中的那一列。可以根据名字或者index去匹配。当然也可以不写，默认第一个字段就是index=0，以此类推。千万注意，要么全部不写，要么全部用index",{"_index":153,"title":{},"body":{"quickstart/api.html":{}}}],["excel也就是十几二十m",{"_index":306,"title":{},"body":{"quickstart/faq.html":{}}}],["excel文件的大小的3",{"_index":299,"title":{},"body":{"quickstart/faq.html":{}}}],["excel解析时候会包含样式，字体，宽度等数据，但这些数据是我们不关心的，如果将这部分数据抛弃可以大大降低内存使用。excel中数据如下styl",{"_index":448,"title":{},"body":{"support/about.html":{}}}],["excel读取整个过程）一般不会超过50m(大概率就30m)，剩下临时的gc",{"_index":302,"title":{},"body":{"quickstart/faq.html":{}}}],["excel，所以需要创建excel",{"_index":30,"title":{},"body":{"index.html":{},"quickstart/read.html":{}}}],["except",{"_index":733,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["exception.getmessag",{"_index":735,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#数据转换等异常处理":{}}}],["exceptiondemodata",{"_index":731,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#数据转换等异常处理":{}}}],["exceptiondemodata.class",{"_index":743,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#数据转换等异常处理":{}}}],["exceptionread",{"_index":742,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#数据转换等异常处理":{}}}],["extend",{"_index":628,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{}}}],["fals",{"_index":512,"title":{},"body":{"quickstart/fill.html":{}}}],["false,但执行directory.mkdirs()如果一些线程优先执行完，另外一个线程就会返回fals",{"_index":433,"title":{},"body":{"support/about.html":{}}}],["faq",{"_index":273,"title":{"quickstart/faq.html":{}},"body":{}}],["file",{"_index":99,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/read.html":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["file(imagepath",{"_index":893,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["file.separ",{"_index":40,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/write.html":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{}}}],["filenam",{"_index":38,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["fileutils.openinputstream",{"_index":896,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["fill",{"_index":487,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{}}}],["fillconfig",{"_index":516,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#横向的填充":{}}}],["fillconfig.builder().direction(writedirectionenum.horizontal).build",{"_index":553,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#横向的填充":{}}}],["fillconfig.builder().forcenewrow(boolean.true).build",{"_index":517,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#复杂的填充":{}}}],["filldata",{"_index":482,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{}}}],["filldata.setnam",{"_index":489,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{}}}],["filldata.setnumb",{"_index":490,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{}}}],["fillpatterntyp",{"_index":919,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义样式":{}}}],["fillpatterntype&#x6240;&#x4ee5;&#x53ef;&#x4ee5;&#x4e0d;&#x6307;&#x5b9a",{"_index":1087,"title":{},"body":{"quickstart/write.html#自定义样式":{}}}],["fillpatterntype.solid_foreground",{"_index":920,"title":{},"body":{"quickstart/write.html":{}}}],["final",{"_index":631,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/write.html":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["finish",{"_index":716,"title":{},"body":{"quickstart/read.html":{},"quickstart/write.html":{}}}],["finish的时候会自动关闭outputstream",{"_index":76,"title":{},"body":{"index.html":{},"quickstart/write.html":{}}}],["forcenewrow",{"_index":510,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#复杂的填充":{}}}],["forcenewrow=tru",{"_index":515,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#复杂的填充":{}}}],["gc",{"_index":413,"title":{},"body":{"support/about.html":{}}}],["gc&#x3002",{"_index":451,"title":{},"body":{"support/about.html#Excel读写时候内存溢出":{}}}],["getmap",{"_index":77,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/write.html":{},"quickstart/write.html#web中的写":{}}}],["github",{"_index":3,"title":{},"body":{"index.html":{}}}],["github&#x5730;&#x5740",{"_index":106,"title":{},"body":{"index.html#EasyExcel":{}}}],["globalconfigur",{"_index":695,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["hashmapstr",{"_index":496,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{}}}],["head",{"_index":163,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/read.html":{},"quickstart/write.html":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["head(demodata.class).build",{"_index":874,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["head(demodata.class).registerreadlisten",{"_index":669,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#读多个sheet":{}}}],["head(head()).sheet",{"_index":944,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#动态头，实时生成头写入":{}}}],["head0",{"_index":945,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#动态头，实时生成头写入":{}}}],["head0.add",{"_index":946,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#动态头，实时生成头写入":{}}}],["head1",{"_index":947,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#动态头，实时生成头写入":{}}}],["head1.add",{"_index":948,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#动态头，实时生成头写入":{}}}],["head2",{"_index":949,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#动态头，实时生成头写入":{}}}],["head2.add",{"_index":950,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#动态头，实时生成头写入":{}}}],["headerread",{"_index":729,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#读取表头数据":{}}}],["headmap",{"_index":726,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#读取表头数据":{}}}],["headrowheight",{"_index":904,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#列宽、行高":{}}}],["headrowheight}&#x3001",{"_index":1076,"title":{},"body":{"quickstart/write.html#列宽、行高":{}}}],["headrownumb",{"_index":162,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/read.html":{},"quickstart/read.html#多行头":{}}}],["headwritecellstyl",{"_index":911,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义样式":{}}}],["headwritecellstyle.setfillforegroundcolor(indexedcolors.red.getindex",{"_index":912,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义样式":{}}}],["headwritecellstyle.setwritefont(headwritefont",{"_index":917,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义样式":{}}}],["headwritefont",{"_index":914,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义样式":{}}}],["headwritefont.setfontheightinpoint",{"_index":915,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义样式":{}}}],["heap",{"_index":443,"title":{},"body":{"support/about.html":{},"support/about.html#核心原理":{}}}],["helper",{"_index":1003,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["helper.createexplicitlistconstraint",{"_index":1007,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["helper.createvalidation(constraint",{"_index":1009,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["horizontal.xlsx",{"_index":552,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#横向的填充":{}}}],["horizontalcellstylestrategi",{"_index":926,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义样式":{}}}],["horizontalcellstylestrategy(headwritecellstyl",{"_index":927,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义样式":{}}}],["horizontalfil",{"_index":551,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#横向的填充":{}}}],["https://github.com/alibaba/easyexcel",{"_index":4,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/demo/read/readtest.java",{"_index":13,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{}}}],["https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/web/webtest.java",{"_index":60,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#web中的写":{}}}],["https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/write/writetest.java",{"_index":47,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{}}}],["httpservletrespons",{"_index":79,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/write.html":{},"quickstart/write.html#web中的写":{}}}],["hyperlink",{"_index":991,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["hyperlink.setaddress",{"_index":993,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["ignor",{"_index":849,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#最简单的写":{}}}],["imagedata",{"_index":880,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["imagedata.class).sheet().dowrite(list",{"_index":898,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["imagedata.setbytearray(fileutils.readfiletobytearray",{"_index":892,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["imagedata.setfil",{"_index":894,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["imagedata.setinputstream(inputstream",{"_index":897,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["imagedata.setstring(imagepath",{"_index":895,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["imagepath",{"_index":890,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["imagewrit",{"_index":885,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["img.jpg",{"_index":891,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["implement",{"_index":684,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["index",{"_index":181,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/read.html":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/write.html":{},"quickstart/write.html#指定写入的列":{}}}],["indexdata",{"_index":853,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#根据模板写入":{}}}],["indexdata.class).sheet",{"_index":855,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#指定写入的列":{}}}],["indexornamedata",{"_index":656,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#指定列的下标或者列名":{}}}],["indexornamedata.class",{"_index":660,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#指定列的下标或者列名":{}}}],["indexornamedatalisten",{"_index":658,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#指定列的下标或者列名":{}}}],["indexornamedatalistener()).sheet().doread",{"_index":661,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#指定列的下标或者列名":{}}}],["indexornameread",{"_index":659,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#指定列的下标或者列名":{}}}],["indexwrit",{"_index":854,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#指定写入的列":{}}}],["index，要么一个对象只用nam",{"_index":657,"title":{},"body":{"quickstart/read.html":{}}}],["inputstream",{"_index":170,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["inputstream.clos",{"_index":899,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["instanceof",{"_index":736,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#数据转换等异常处理":{}}}],["int",{"_index":635,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["integ",{"_index":975,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["invok",{"_index":640,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{}}}],["invokeheadmap",{"_index":725,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#读取表头数据":{}}}],["ioexcept",{"_index":82,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{},"quickstart/read.html":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#web中的写":{}}}],["ioexception(&#x201c;could",{"_index":460,"title":{},"body":{"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["ioexception(could",{"_index":430,"title":{},"body":{"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["ioexception(“could",{"_index":434,"title":{},"body":{"support/about.html":{}}}],["ishead",{"_index":979,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["jar",{"_index":284,"title":{},"body":{"quickstart/faq.html":{}}}],["java",{"_index":294,"title":{},"body":{"quickstart/faq.html":{},"support/about.html":{},"support/about.html#核心原理":{}}}],["java.io.ioexcept",{"_index":417,"title":{},"body":{"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["java.text.decimalformat",{"_index":159,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["java.text.simpledateformat",{"_index":157,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["java为string,excel为str",{"_index":706,"title":{},"body":{"quickstart/read.html":{}}}],["jiaju",{"_index":967,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["json.tojsonstring(data",{"_index":644,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#同步的返回":{}}}],["json.tojsonstring(headmap",{"_index":727,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#读取表头数据":{}}}],["link",{"_index":27,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["list",{"_index":500,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#同步的返回":{},"quickstart/write.html":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["list&#x4e0d;&#x662f;&#x6700;&#x540e;&#x4e00;&#x884c",{"_index":599,"title":{},"body":{"quickstart/fill.html#复杂的填充":{}}}],["list,且list",{"_index":514,"title":{},"body":{"quickstart/fill.html":{}}}],["list.add(data",{"_index":645,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/write.html":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["list.add(head0",{"_index":951,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#动态头，实时生成头写入":{}}}],["list.add(head1",{"_index":952,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#动态头，实时生成头写入":{}}}],["list.add(head2",{"_index":953,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#动态头，实时生成头写入":{}}}],["list.add(imagedata",{"_index":889,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["list.clear",{"_index":648,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{}}}],["list.siz",{"_index":646,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{}}}],["list.xlsx",{"_index":501,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#填充列表":{}}}],["listcelldata",{"_index":983,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["listdemodata",{"_index":637,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["listen",{"_index":290,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{},"quickstart/read.html":{}}}],["listfil",{"_index":499,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#填充列表":{}}}],["listimagedata",{"_index":887,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["listliststr",{"_index":541,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/write.html":{},"quickstart/write.html#动态头，实时生成头写入":{}}}],["listlongestmatchcolumnwidthdata",{"_index":962,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["listobject",{"_index":717,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#同步的返回":{}}}],["liststr",{"_index":544,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/write.html":{},"quickstart/write.html#动态头，实时生成头写入":{}}}],["liststring头格式的sheet仅仅写入头,然后通过t",{"_index":942,"title":{},"body":{"quickstart/write.html":{}}}],["list为最后一行，然后再拼接table.还有03",{"_index":538,"title":{},"body":{"quickstart/fill.html":{}}}],["list的时候不管list",{"_index":511,"title":{},"body":{"quickstart/fill.html":{}}}],["logger",{"_index":632,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["logger.error",{"_index":734,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#数据转换等异常处理":{}}}],["logger.info",{"_index":643,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["loggerfactory.getlogger(customcellwritehandler.class",{"_index":970,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["loggerfactory.getlogger(customsheetwritehandler.class",{"_index":996,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["loggerfactory.getlogger(demodatalistener.class",{"_index":633,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{}}}],["lombok",{"_index":279,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["longestmatchcolumnwidthdata",{"_index":954,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["longestmatchcolumnwidthdata.class",{"_index":958,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["longestmatchcolumnwidthstylestrategi",{"_index":955,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["longestmatchcolumnwidthstylestrategy()).sheet",{"_index":960,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["longestmatchcolumnwidthstylestrategy}&#x91cd;&#x65b0;&#x5b9e;&#x73b0",{"_index":1128,"title":{},"body":{"quickstart/write.html#自动列宽-不太精确":{}}}],["longestmatchcolumnwidthwrit",{"_index":957,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["loopmergestrategi",{"_index":932,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#合并单元格":{}}}],["m",{"_index":311,"title":{},"body":{"quickstart/faq.html":{}}}],["map",{"_index":493,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{}}}],["map.put",{"_index":497,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{}}}],["mapcach",{"_index":309,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{},"quickstart/faq.html#超大-10M以上-文件读取说明":{}}}],["mapinteg",{"_index":723,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{}}}],["mapstr",{"_index":494,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{}}}],["maxcacheactivates",{"_index":322,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["maxcacheactivatesize&#x662f;&#x5426;&#x9700;&#x8981;&#x8c03;&#x6574",{"_index":404,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["mb",{"_index":312,"title":{},"body":{"quickstart/faq.html":{}}}],["merg",{"_index":929,"title":{},"body":{"quickstart/write.html":{}}}],["mergewrit",{"_index":930,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#合并单元格":{}}}],["miss",{"_index":330,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["multipartfil",{"_index":98,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#web中的读":{}}}],["name",{"_index":483,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/read.html":{},"quickstart/read.html#指定列的下标或者列名":{}}}],["needhead",{"_index":192,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["needhead(boolean.false).build",{"_index":936,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#使用table去写入":{}}}],["needhead(boolean.true).build",{"_index":940,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#使用table去写入":{}}}],["new",{"_index":45,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{},"quickstart/faq.html#超大-10M以上-文件读取说明":{},"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["noclassdeffounderror",{"_index":283,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["nosuchmethodexcept",{"_index":281,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["notnul",{"_index":692,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["null",{"_index":549,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["nullabl",{"_index":694,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["number",{"_index":183,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{}}}],["numberformat",{"_index":158,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{},"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#日期、数字或者自定义格式转换":{}}}],["numberformat.format",{"_index":295,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["numberformat}&#x6216;&#x8005;&#x81ea;&#x5b9a;&#x4e49;&#x6ce8;&#x89e3",{"_index":802,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#日期、数字或者自定义格式转换":{}}}],["obj",{"_index":719,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#同步的返回":{}}}],["object",{"_index":495,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#同步的返回":{}}}],["onexcept",{"_index":732,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#数据转换等异常处理":{}}}],["org.apache.poi.util.defaulttempfilecreationstrategy.createpoifilesdirectory(defaulttempfilecreationstrategy.java:82",{"_index":424,"title":{},"body":{"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["org.apache.poi.util.defaulttempfilecreationstrategy.createtempdirectory(defaulttempfilecreationstrategy.java:93",{"_index":422,"title":{},"body":{"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["outputstream",{"_index":194,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["overrid",{"_index":639,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["p",{"_index":537,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/read.html":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["p1",{"_index":26,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{}}}],["p2",{"_index":29,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{}}}],["p3",{"_index":32,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{}}}],["p4",{"_index":901,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#根据模板写入":{}}}],["param",{"_index":690,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{}}}],["password",{"_index":168,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["poi",{"_index":286,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{},"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{},"quickstart/write.html":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["poi后要解决oom有3",{"_index":446,"title":{},"body":{"support/about.html":{}}}],["poi存在一些bug,如果让poi团队修复估计遥遥无期了。所以我们在easyexcel对这些bug",{"_index":415,"title":{},"body":{"support/about.html":{}}}],["poi是目前使用最多的用来做excel解析的框架，但这个框架并不那么完美。大部分使用poi都是使用他的usermodel模式。usermodel的好处是上手容易使用简单，随便拷贝个代码跑一下，剩下就是写业务转换了，虽然转换也要写上百行代码，相对比较好理解。然而usermodel模式最大的问题是在于非常大的内存消耗，一个几兆的文件解析要用掉上百兆的内存。现在很多应用采用这种模式，之所以还正常在跑一定是并发不大，并发上来后一定会oom或者频繁的ful",{"_index":412,"title":{},"body":{"support/about.html":{}}}],["poi有过深入了解的估计才知道原来poi还有sax模式。但sax模式相对比较复杂，excel有03和07两种版本，两个版本数据存储方式截然不同，sax",{"_index":414,"title":{},"body":{"support/about.html":{}}}],["postman",{"_index":1016,"title":{},"body":{"quickstart/write.html":{}}}],["postmap",{"_index":95,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#web中的读":{}}}],["privat",{"_index":425,"title":{},"body":{"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["public",{"_index":34,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["put",{"_index":326,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["qq",{"_index":6,"title":{},"body":{"index.html":{}}}],["qq&#x7fa4",{"_index":110,"title":{},"body":{"index.html#EasyExcel":{}}}],["readcach",{"_index":172,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["readcache(new",{"_index":308,"title":{},"body":{"quickstart/faq.html":{}}}],["readcacheselector(new",{"_index":317,"title":{},"body":{"quickstart/faq.html":{}}}],["readlisten",{"_index":149,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["readsheet",{"_index":147,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{}}}],["readsheet&#xff08;&#x5c31;&#x662f;excel&#x7684;&#x4e00;&#x4e2a;sheet&#xff09;&#x53c2;&#x6570",{"_index":243,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["readsheet1",{"_index":668,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#读多个sheet":{}}}],["readsheet2",{"_index":670,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#读多个sheet":{}}}],["readsheet（就是excel的一个sheet",{"_index":175,"title":{},"body":{"quickstart/api.html":{}}}],["readworkbook",{"_index":143,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["readworkbook&#xff08;&#x7406;&#x89e3;&#x6210;excel&#x5bf9;&#x8c61;&#xff09;&#x53c2;&#x6570",{"_index":232,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["readworkbook（理解成excel",{"_index":169,"title":{},"body":{"quickstart/api.html":{}}}],["registerconvert",{"_index":705,"title":{},"body":{"quickstart/read.html":{}}}],["registerconverter(new",{"_index":707,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["registerwritehandl",{"_index":959,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["relativeheadrowindex",{"_index":191,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["relativerowindex",{"_index":977,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["repeatedread",{"_index":663,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#读多个sheet":{}}}],["repeatedwrit",{"_index":869,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#重复多次写入":{}}}],["respons",{"_index":80,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/write.html":{},"quickstart/write.html#web中的写":{}}}],["response.setcharacterencod",{"_index":85,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/write.html":{},"quickstart/write.html#web中的写":{}}}],["response.setcontenttyp",{"_index":83,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/write.html":{},"quickstart/write.html#web中的写":{}}}],["response.sethead",{"_index":87,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/write.html":{},"quickstart/write.html#web中的写":{}}}],["responsebodi",{"_index":97,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#web中的读":{}}}],["return",{"_index":103,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["row",{"_index":974,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["rowwritehandl",{"_index":189,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["savedata",{"_index":647,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{}}}],["sax",{"_index":447,"title":{},"body":{"support/about.html":{}}}],["sax&#xff08;ev",{"_index":474,"title":{},"body":{"support/about.html#核心原理":{}}}],["sax（ev",{"_index":445,"title":{},"body":{"support/about.html":{}}}],["set",{"_index":280,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["sheet",{"_index":200,"title":{},"body":{"quickstart/api.html":{},"quickstart/fill.html":{},"quickstart/read.html":{},"quickstart/write.html":{}}}],["sheet().doread",{"_index":708,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["sheet,excel",{"_index":179,"title":{},"body":{"quickstart/api.html":{}}}],["sheet,这里注意一个sheet",{"_index":662,"title":{},"body":{"quickstart/read.html":{}}}],["sheet1",{"_index":671,"title":{},"body":{"quickstart/read.html":{}}}],["sheet2",{"_index":672,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#读多个sheet":{}}}],["sheetnam",{"_index":178,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["sheetno",{"_index":176,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/write.html":{}}}],["sheetno。这里注意demodata.class",{"_index":873,"title":{},"body":{"quickstart/write.html":{}}}],["sheetwritehandl",{"_index":188,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["sheet的编码，建议使用这个来指定读取哪个sheet",{"_index":177,"title":{},"body":{"quickstart/api.html":{}}}],["sheet的配置，sheet配置了不需要，t",{"_index":937,"title":{},"body":{"quickstart/write.html":{}}}],["sheet读取完毕后调用一次。然后所有sheet都会往同一个demodatalisten",{"_index":665,"title":{},"body":{"quickstart/read.html":{}}}],["short",{"_index":916,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义样式":{}}}],["simple.xlsx",{"_index":488,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{}}}],["simplefil",{"_index":485,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{}}}],["simpleread",{"_index":36,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{}}}],["simplereadcacheselector",{"_index":321,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["simplereadcacheselector(5",{"_index":318,"title":{},"body":{"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{}}}],["simplewrit",{"_index":49,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{}}}],["space&#x9519;&#x8bef;&#x3002;poi&#x5b98;&#x65b9;&#x63a8;&#x8350;&#x4f7f;&#x7528;&#x201c;xssf",{"_index":473,"title":{},"body":{"support/about.html#核心原理":{}}}],["space错误。poi官方推荐使用“xssf",{"_index":444,"title":{},"body":{"support/about.html":{}}}],["spring",{"_index":291,"title":{},"body":{"quickstart/faq.html":{}}}],["spring管理，要每次读取excel都要new,然后里面用到spr",{"_index":627,"title":{},"body":{"quickstart/read.html":{}}}],["star",{"_index":5,"title":{},"body":{"index.html":{}}}],["static",{"_index":630,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["string",{"_index":37,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/faq.html":{},"quickstart/faq.html#不支持功能":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["string)obj",{"_index":724,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#同步的返回":{}}}],["string.class",{"_index":686,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["stringimageconverter.class",{"_index":882,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["string默认转换成str",{"_index":881,"title":{},"body":{"quickstart/write.html":{}}}],["style",{"_index":908,"title":{},"body":{"quickstart/write.html":{}}}],["stylewrit",{"_index":909,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义样式":{}}}],["success",{"_index":104,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#web中的读":{}}}],["supportexceltypekey",{"_index":688,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["supportjavatypekey",{"_index":685,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["swagger",{"_index":1015,"title":{},"body":{"quickstart/write.html":{}}}],["sxssfsheet#autosizecolumn(int",{"_index":956,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["synchronousread",{"_index":715,"title":{},"body":{"quickstart/read.html":{},"quickstart/read.html#同步的返回":{}}}],["system.currenttimemilli",{"_index":51,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["tabl",{"_index":934,"title":{},"body":{"quickstart/write.html":{}}}],["tableno",{"_index":202,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["tablewrit",{"_index":935,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#使用table去写入":{}}}],["templatefil",{"_index":196,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["templatefilenam",{"_index":486,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/write.html":{},"quickstart/write.html#根据模板写入":{}}}],["templateinputstream",{"_index":195,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["templatewrit",{"_index":902,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#根据模板写入":{}}}],["temporari",{"_index":419,"title":{},"body":{"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["test",{"_index":33,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["testfileutil.getpath",{"_index":39,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["throw",{"_index":81,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{},"quickstart/read.html":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#web中的写":{}}}],["total",{"_index":519,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#复杂的填充":{}}}],["totallist",{"_index":545,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{}}}],["totallist.add",{"_index":548,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{}}}],["totallistlist",{"_index":542,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{}}}],["totallistlist.add(totallist",{"_index":547,"title":{},"body":{"quickstart/fill.html":{},"quickstart/fill.html#数据量大的复杂填充":{}}}],["tri",{"_index":886,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#图片导出":{}}}],["trim",{"_index":167,"title":{},"body":{"quickstart/api.html":{}}}],["true",{"_index":513,"title":{},"body":{"quickstart/fill.html":{}}}],["upload",{"_index":96,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#web中的读":{}}}],["uploaddata",{"_index":93,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#web中的读":{}}}],["uploaddata.class",{"_index":101,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#web中的读":{}}}],["uploaddatalisten",{"_index":94,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#web中的读":{}}}],["uploaddatalistener()).sheet().doread",{"_index":102,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/read.html":{},"quickstart/read.html#web中的读":{}}}],["urlencoder.encod",{"_index":1017,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#web中的写":{}}}],["usedefaultstyl",{"_index":197,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["utf",{"_index":86,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/write.html":{},"quickstart/write.html#web中的写":{}}}],["valu",{"_index":156,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/read.html":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#日期、数字或者自定义格式转换":{}}}],["void",{"_index":35,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"support/about.html":{},"support/about.html#其他开源框架存在一些BUG修复不及时":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["web",{"_index":59,"title":{},"body":{"index.html":{},"quickstart/read.html":{},"quickstart/write.html":{}}}],["web&#x4e0a;&#x4f20;&#x3001;&#x4e0b;&#x8f7d",{"_index":134,"title":{},"body":{"index.html#EasyExcel":{}}}],["web&#x4e2d;&#x7684;&#x5199",{"_index":1150,"title":{"quickstart/write.html#web中的写":{}},"body":{}}],["web&#x4e2d;&#x7684;&#x8bfb",{"_index":842,"title":{"quickstart/read.html#web中的读":{}},"body":{}}],["widthandheightdata",{"_index":905,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#列宽、行高":{}}}],["widthandheightdata.class).sheet",{"_index":907,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#列宽、行高":{}}}],["widthandheightwrit",{"_index":906,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#列宽、行高":{}}}],["withtempl",{"_index":900,"title":{},"body":{"quickstart/write.html":{}}}],["workbookwritehandl",{"_index":187,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["workbook处理就不行了，因为poi对文件是先将文件中的cell读入内存，生成一个树的结构（针对excel中的每个sheet，使用treemap存储sheet中的行）。如果数据量比较大，则同样会产生java.lang.outofmemoryerror",{"_index":442,"title":{},"body":{"support/about.html":{}}}],["workbook的配置会被sheet继承，所以在用easyexcel设置参数的时候，在easyexcel…sheet()方法之前作用域是整个sheet,之后针对单个sheet",{"_index":151,"title":{},"body":{"quickstart/api.html":{}}}],["write",{"_index":50,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/fill.html":{}}}],["writecellstyl",{"_index":910,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义样式":{}}}],["writefont",{"_index":913,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义样式":{}}}],["writehandl",{"_index":150,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["writesheet",{"_index":185,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/fill.html":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#使用table去写入":{}}}],["writesheet&#x5bf9;&#x8c61;&#xff0c;&#x53ef;&#x4ee5;&#x7406;&#x89e3;&#x6210;excel&#x91cc;&#x9762;&#x7684;&#x4e00;&#x9875;,&#x6bcf;&#x4e00;&#x9875;&#x90fd;&#x8981;&#x6784;&#x5efa;&#x4e00;&#x4e2a",{"_index":208,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["writesheet&#xff08;&#x5c31;&#x662f;excel&#x7684;&#x4e00;&#x4e2a;sheet&#xff09;&#x53c2;&#x6570",{"_index":269,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["writesheethold",{"_index":972,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["writesheetholder.getsheet().addvalidationdata(datavalid",{"_index":1010,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["writesheetholder.getsheet().getdatavalidationhelp",{"_index":1004,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["writesheetholder.getsheet().getworkbook().getcreationhelp",{"_index":990,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["writesheetholder.getsheetno",{"_index":1000,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["writesheet对象，可以理解成excel",{"_index":148,"title":{},"body":{"quickstart/api.html":{}}}],["writesheet（就是excel的一个sheet",{"_index":198,"title":{},"body":{"quickstart/api.html":{}}}],["writet",{"_index":186,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/write.html":{},"quickstart/write.html#使用table去写入":{}}}],["writetable&#xff08;&#x5c31;&#x628a;excel&#x7684;&#x4e00;&#x4e2a;sheet,&#x4e00;&#x5757;&#x533a;&#x57df;&#x770b;&#x4e00;&#x4e2a;table&#xff09;&#x53c2;&#x6570",{"_index":272,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["writetable0",{"_index":938,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#使用table去写入":{}}}],["writetable1",{"_index":941,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#使用table去写入":{}}}],["writetablehold",{"_index":973,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["writetable（就把excel的一个sheet,一块区域看一个t",{"_index":201,"title":{},"body":{"quickstart/api.html":{}}}],["writeworkbook",{"_index":184,"title":{},"body":{"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{}}}],["writeworkbook&#xff08;&#x7406;&#x89e3;&#x6210;excel&#x5bf9;&#x8c61;&#xff09;&#x53c2;&#x6570",{"_index":261,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["writeworkbook&#xff0c;&#x53ef;&#x4ee5;&#x7406;&#x89e3;&#x6210;&#x4e00;&#x4e2a;excel&#x5bf9;&#x8c61;&#xff0c;&#x4e00;&#x4e2a;excel&#x53ea;&#x8981;&#x6784;&#x5efa;&#x4e00;&#x4e2a",{"_index":207,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["writeworkbookhold",{"_index":998,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["writeworkbook（理解成excel",{"_index":193,"title":{},"body":{"quickstart/api.html":{}}}],["writeworkbook，可以理解成一个excel对象，一个excel",{"_index":144,"title":{},"body":{"quickstart/api.html":{}}}],["x2018;&#x201c",{"_index":461,"title":{},"body":{"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["x201c;&#x2018;&#x201c;)&#x3002;&#x9488;&#x5bf9;&#x8fd9;&#x4e2a;&#x95ee;&#x9898;easyexcel&#x5728;&#x5199;&#x6587;&#x4ef6;&#x65f6;&#x5019;&#x9996;&#x5148;&#x521b;&#x5efa;&#x4e86;&#x8be5;&#x4e34;&#x65f6;&#x76ee;&#x5f55;&#xff0c;&#x907f;&#x514d;poi&#x5728;&#x5e76;&#x53d1;&#x521b;&#x5efa;&#x65f6;&#x5019;&#x5f15;&#x8d77;&#x4e0d;&#x8be5;&#x6709;&#x7684;&#x62a5;&#x9519;&#x3002",{"_index":462,"title":{},"body":{"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["x3002",{"_index":346,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x3002;&#x6211;&#x7ed9;&#x4ed6;&#x52a0;&#x4e0a;&#x201c;&#x81ea;&#x5b9a;&#x4e49;&#xff1a;&#x201d",{"_index":788,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["x4e00;&#x4e0b;&#x5b50;&#x5168;&#x90e8;&#x653e;&#x5230;&#x5185;&#x5b58;&#x91cc;&#x9762",{"_index":577,"title":{},"body":{"quickstart/fill.html#填充列表":{}}}],["x4e00;&#x4e2a;&#x3002",{"_index":359,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x4e00;&#x5b9a;&#x8981;&#x628a;sheet1",{"_index":782,"title":{},"body":{"quickstart/read.html#读多个sheet":{}}}],["x4e00;&#x8d77;&#x4f20;&#x8fdb;&#x53bb;&#xff0c;&#x4e0d;&#x7136;&#x6709;&#x4e2a;&#x95ee;&#x9898;&#x5c31;&#x662f;03&#x7248;&#x7684;excel",{"_index":783,"title":{},"body":{"quickstart/read.html#读多个sheet":{}}}],["x4e0b;&#x62c9;&#xff0c;&#x8d85;&#x94fe;&#x63a5;&#x7b49;&#x81ea;&#x5b9a;&#x4e49;&#x62e6;&#x622a;&#x5668;&#xff08;&#x4e0a;&#x9762;&#x51e0;&#x70b9;&#x90fd;&#x4e0d;&#x7b26;&#x5408;&#x4f46;&#x662f;&#x8981;&#x5bf9;&#x5355;&#x5143;&#x683c;&#x8fdb;&#x884c;&#x64cd;&#x4f5c;&#x7684;&#x53c2;&#x7167;&#x8fd9;&#x4e2a;&#xff09",{"_index":1145,"title":{},"body":{"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["x4e0d;&#x5199;&#x5165;&#x5934;&#x7684;&#x65b9;&#x5f0f",{"_index":1115,"title":{},"body":{"quickstart/write.html#动态头，实时生成头写入":{}}}],["x4e0d;&#x540c;&#x7684;&#x5bf9;&#x8c61",{"_index":1050,"title":{},"body":{"quickstart/write.html#重复多次写入":{}}}],["x4e0d;&#x652f;&#x6301;&#x529f;&#x80fd",{"_index":338,"title":{"quickstart/faq.html#不支持功能":{}},"body":{}}],["x4e0d;&#x652f;&#x6301;&#x884c;&#x7684;&#x5220;&#x9664;&#x548c;&#x79fb;&#x52a8;&#xff0c;&#x4e5f;&#x4e0d;&#x652f;&#x6301;&#x5907;&#x6ce8;&#x8fd9;&#x79cd;&#x7684;&#x5199;&#x5165;&#xff0c;&#x6240;&#x4ee5;&#x4e5f;&#x6392;&#x9664;&#x4e86;&#x53ef;&#x4ee5",{"_index":621,"title":{},"body":{"quickstart/fill.html#数据量大的复杂填充":{}}}],["x4e0d;&#x7136;&#x4f1a;&#x8f93;&#x51fa;sheet&#x7684;&#x5934",{"_index":1105,"title":{},"body":{"quickstart/write.html#使用table去写入":{}}}],["x4e0d;&#x7136;&#x65e0;&#x6cd5;&#x663e;&#x793a;&#x80cc;&#x666f;&#x989c;&#x8272;.&#x5934;&#x9ed8;&#x8ba4;&#x4e86",{"_index":1086,"title":{},"body":{"quickstart/write.html#自定义样式":{}}}],["x4e0d;&#x7528;&#x7ba1",{"_index":798,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["x4e0d;&#x80fd;&#x88ab;spring&#x7ba1;&#x7406;&#xff0c;&#x8981;&#x6bcf;&#x6b21;&#x8bfb;&#x53d6;excel&#x90fd;&#x8981;new,&#x7136;&#x540e;&#x91cc;&#x9762;&#x7528;&#x5230;spring&#x53ef;&#x4ee5;&#x6784;&#x9020;&#x65b9;&#x6cd5;&#x4f20;&#x8fdb;&#x53bb",{"_index":748,"title":{},"body":{"quickstart/read.html#最简单的读":{}}}],["x4e0e",{"_index":227,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x4e3a;false,&#x4f46;&#x6267;&#x884c;directory.mkdirs()&#x5982;&#x679c;&#x4e00;&#x4e9b;&#x7ebf;&#x7a0b;&#x4f18;&#x5148;&#x6267;&#x884c;&#x5b8c;&#xff0c;&#x53e6;&#x5916;&#x4e00;&#x4e2a;&#x7ebf;&#x7a0b;&#x5c31;&#x4f1a;&#x8fd4;&#x56de;false&#x3002;&#x6700;&#x7ec8",{"_index":459,"title":{},"body":{"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["x4e3a;fillpatterntype.solid_foreground",{"_index":1085,"title":{},"body":{"quickstart/write.html#自定义样式":{}}}],["x4e3b;&#x6807;&#x9898",{"_index":1032,"title":{},"body":{"quickstart/write.html#复杂头写入":{}}}],["x4e5f;&#x53ef;&#x4ee5;&#x4e0d;&#x6307;&#x5b9a;class&#xff0c;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;list&#xff0c;&#x7136;&#x540e;&#x8bfb;&#x53d6;&#x7b2c;&#x4e00;&#x4e2a;sheet",{"_index":821,"title":{},"body":{"quickstart/read.html#同步的返回":{}}}],["x4e5f;&#x53ef;&#x4ee5;&#x7528;&#x5bf9;&#x8c61",{"_index":612,"title":{},"body":{"quickstart/fill.html#数据量大的复杂填充":{}}}],["x4e5f;&#x53ef;&#x4ee5;&#x76f4;&#x4e00;&#x884c;&#x4ee3;&#x7801;&#x641e;&#x5b9a;&#xff0c;&#x53c2;&#x7167;&#x5176;&#x4ed6;&#x6848;&#x4f8b",{"_index":1103,"title":{},"body":{"quickstart/write.html#使用table去写入":{}}}],["x4e5f;&#x5c31;&#x662f;&#x524d;&#x9762;&#x7b2c;&#x4e8c;&#x4e2a;&#x53c2;&#x6570;&#x7684;&#x8be6;&#x7ec6;&#x8bf4;&#x660",{"_index":401,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x4e5f;&#x5c31;&#x662f;&#x6211;&#x4eec;&#x6570;&#x636e;&#x7684;&#x957f;&#x5ea6;&#xff0c;&#x6240;&#x4ee5;&#x5c31;&#x7b2c;&#x4e00;&#x5217;&#x4f1a;&#x5408;&#x5e76;&#x3002;&#x5f53;&#x7136;&#x5176;&#x4ed6;&#x5408;&#x5e76;&#x7b56;&#x7565;&#x4e5f;&#x53ef;&#x4ee5;&#x81ea;&#x5df1;&#x5199",{"_index":1099,"title":{},"body":{"quickstart/write.html#合并单元格":{}}}],["x4e8c;&#x9009;&#x4e00;&#x3002;&#x5199;&#x5165;&#x6587;&#x4ef6;&#x7684;&#x5934;&#x5217;&#x8868;&#xff0c;&#x5efa;&#x8bae;&#x4f7f;&#x7528;class&#x3002",{"_index":259,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x4e8c;&#x9009;&#x4e00;&#x3002;&#x5199;&#x5165;&#x6587;&#x4ef6;&#x7684;&#x5934;&#x5bf9;&#x5e94;&#x7684;class&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x6ce8;&#x89e3;&#x3002",{"_index":260,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x4e8c;&#x9009;&#x4e00;&#x3002;&#x5199;&#x5165;&#x6587;&#x4ef6;&#x7684;&#x6d41",{"_index":263,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x4e8c;&#x9009;&#x4e00;&#x3002;&#x5199;&#x5165;&#x7684;&#x6587;&#x4ef6",{"_index":264,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x4e8c;&#x9009;&#x4e00;&#x3002;&#x8bfb;&#x53d6;&#x6587;&#x4ef6;&#x5934;&#x5bf9;&#x5e94;&#x7684;&#x5217;&#x8868;&#xff0c;&#x4f1a;&#x6839;&#x636e;&#x5217;&#x8868;&#x5339;&#x914d;&#x6570;&#x636e;&#xff0c;&#x5efa;&#x8bae;&#x4f7f;&#x7528;class&#x3002",{"_index":228,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x4e8c;&#x9009;&#x4e00;&#x3002;&#x8bfb;&#x53d6;&#x6587;&#x4ef6;&#x7684;&#x5934;&#x5bf9;&#x5e94;&#x7684;class&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x6ce8;&#x89e3;&#x3002;&#x5982;&#x679c;&#x4e24;&#x4e2a;&#x90fd;&#x4e0d;&#x6307;&#x5b9a;&#xff0c;&#x5219;&#x4f1a;&#x8bfb;&#x53d6;&#x5168;&#x90e8;&#x6570;&#x636e;&#x3002",{"_index":229,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x4e8c;&#x9009;&#x4e00;&#x3002;&#x8bfb;&#x53d6;&#x6587;&#x4ef6;&#x7684;&#x6587;&#x4ef6;&#x3002",{"_index":238,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x4e8c;&#x9009;&#x4e00;&#x3002;&#x8bfb;&#x53d6;&#x6587;&#x4ef6;&#x7684;&#x6d41;&#xff0c;&#x5982;&#x679c;&#x63a5;&#x6536;&#x5230;&#x7684;&#x662f;&#x6d41;&#x5c31;&#x53ea;&#x7528;&#xff0c;&#x4e0d;&#x7528;&#x6d41;&#x5efa;&#x8bae;&#x4f7f;&#x7528",{"_index":235,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x4ed4;&#x7ec6;&#x770b;&#x4ee3;&#x7801;&#x5bb9;&#x6613;&#x660e;&#x767d;&#x5982;&#x679c;&#x5728;&#x5e76;&#x53d1;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x5982;&#x679c;2&#x4e2a;&#x7ebf;&#x7a0b;&#x540c;&#x65f6;&#x5224;&#x65ad;directory.exists()&#x90fd",{"_index":458,"title":{},"body":{"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["x4ed6;&#x4f1a;&#x81ea;&#x52a8;&#x751f;&#x6210",{"_index":344,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x4ee3;&#x7801",{"_index":557,"title":{},"body":{"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["x4ee3;&#x8868;&#x5728;&#x5199;&#x5165;list&#x7684;&#x65f6;&#x5019;&#x4e0d;&#x7ba1;list&#x4e0b;&#x9762;&#x6709;&#x6ca1;&#x6709;&#x7a7a;&#x884c",{"_index":588,"title":{},"body":{"quickstart/fill.html#复杂的填充":{}}}],["x4ee3;&#x8868;&#x662f;list&#x7684;&#x53d8;&#x91cf",{"_index":585,"title":{},"body":{"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{}}}],["x4ee3;&#x8868;&#x666e;&#x901a;&#x53d8;&#x91cf",{"_index":584,"title":{},"body":{"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{}}}],["x4f1a;&#x4f7f;&#x7528;&#x6587;&#x4ef6;&#x7f13;&#x5b58;&#xff08;&#x7701;&#x5185;&#x5b58;&#xff09",{"_index":581,"title":{},"body":{"quickstart/fill.html#填充列表":{}}}],["x4f1a;&#x5728;&#x6bcf;&#x4e2a;sheet&#x8bfb;&#x53d6;&#x5b8c;&#x6bd5;&#x540e;&#x8c03;&#x7528;&#x4e00;&#x6b21;&#x3002;&#x7136;&#x540e;&#x6240;&#x6709;sheet&#x90fd;&#x4f1a;&#x5f80;&#x540c;&#x4e00;&#x4e2a;demodatalistener&#x91cc;&#x9762;&#x5199",{"_index":775,"title":{},"body":{"quickstart/read.html#读多个sheet":{}}}],["x4f1a;&#x586b;&#x5145;&#x5230;&#x7b2c;&#x4e00;&#x4e2a;sheet&#xff0c",{"_index":566,"title":{},"body":{"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{}}}],["x4f1a;&#x5bfc;&#x81f4;&#x5404;&#x79cd;&#x95ee;&#x9898;&#xff0c;&#x8bf7;&#x76f4;&#x63a5;&#x7528;&#x6d4f;&#x89c8;&#x5668;&#x6216;&#x8005;&#x7528;postman",{"_index":1153,"title":{},"body":{"quickstart/write.html#web中的写":{}}}],["x4f1a;&#x5bfc;&#x81f4;&#x7b2c;&#x4e8c;&#x5217;&#x7a7a;&#x7684",{"_index":1028,"title":{},"body":{"quickstart/write.html#指定写入的列":{}}}],["x4f1a;&#x5e2e;&#x5fd9;&#x5173;&#x95ed;&#x6d41",{"_index":1025,"title":{},"body":{"quickstart/write.html#最简单的写":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#使用table去写入":{}}}],["x4f1a;&#x5f88;&#x8017;&#x5185;&#x5b58",{"_index":597,"title":{},"body":{"quickstart/fill.html#复杂的填充":{}}}],["x4f1a;&#x6839;&#x636e;&#x4f60;&#x4f20;&#x5165;&#x7684;class&#x7684",{"_index":812,"title":{},"body":{"quickstart/read.html#多行头":{}}}],["x4f1a;&#x7ee7;&#x627f;sheet&#x7684;&#x914d;&#x7f6e;&#xff0c;sheet&#x914d;&#x7f6e;&#x4e86;&#x4e0d;&#x9700;&#x8981;&#xff0c;t",{"_index":1109,"title":{},"body":{"quickstart/write.html#使用table去写入":{}}}],["x4f1a;&#x8bfb;&#x53d6;&#x591a;&#x6b21;&#xff0c;&#x6d6a;&#x8d39;&#x6027;&#x80fd",{"_index":784,"title":{},"body":{"quickstart/read.html#读多个sheet":{}}}],["x4f20;&#x5165;exceltype&#x53c2;&#x6570;&#x5373;&#x53ef",{"_index":132,"title":{},"body":{"index.html#EasyExcel":{},"quickstart/write.html#最简单的写":{}}}],["x4f46;&#x662f;&#x4e5f;&#x6ca1;&#x6709;&#x60f3;&#x5230;&#x597d;&#x7684;&#x7248;&#x672c",{"_index":619,"title":{},"body":{"quickstart/fill.html#数据量大的复杂填充":{}}}],["x4f46;&#x662f;&#x8fd9;&#x4e2a;&#x5c31;&#x4f1a;&#x628a;&#x6240;&#x6709;&#x6570;&#x636e;&#x653e;&#x5230;&#x5185;&#x5b58",{"_index":596,"title":{},"body":{"quickstart/fill.html#复杂的填充":{}}}],["x4f46;&#x662f;&#x8fd9;&#x4e2a;&#x8f6c;&#x6362;&#x53d8;&#x6210;&#x5168;&#x5c40;&#x4e86;&#xff0c",{"_index":804,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["x4f60;&#x5e0c;&#x671b;&#x7528;100m&#x5185;&#x5b58;(&#x8fd9;&#x91cc;&#x8bf4;&#x7684;&#x662f;&#x89e3;&#x6790;&#x8fc7;&#x7a0b;&#x4e2d;&#x7684;&#x6c38;&#x4e45;&#x5360;&#x7528;,&#x4e34;&#x65f6;&#x5bf9;&#x8c61;&#x4e0d;&#x7b97;)&#x6765;&#x89e3;&#x6790;excel&#xff0c;&#x524d;&#x9762;&#x7b97;&#x8fc7;&#x4e86",{"_index":394,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x4f7f;&#x7528",{"_index":1029,"title":{},"body":{"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#根据模板写入":{}}}],["x4f7f;&#x7528;&#x6ce8;&#x89e3",{"_index":1074,"title":{},"body":{"quickstart/write.html#列宽、行高":{}}}],["x4f7f;&#x7528;table&#x53bb;&#x5199;&#x5165",{"_index":1100,"title":{"quickstart/write.html#使用table去写入":{}},"body":{"quickstart/write.html#使用table去写入":{}}}],["x4f7f;&#x7528;withtempl",{"_index":1070,"title":{},"body":{"quickstart/write.html#根据模板写入":{}}}],["x5165;&#x53c2;&#x7528;&#x4e86;forcenewrow",{"_index":587,"title":{},"body":{"quickstart/fill.html#复杂的填充":{}}}],["x5165;&#x53e3;&#x7c7b;&#xff0c;&#x7528;&#x4e8e;&#x6784;&#x5efa;&#x5f00;&#x59cb;&#x5404;&#x79cd;&#x64cd;&#x4f5c",{"_index":205,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x5171;&#x4eab;&#x5b57;&#x7b26;&#x4e32",{"_index":367,"title":{},"body":{"quickstart/faq.html#不支持功能":{},"quickstart/faq.html#超大-10M以上-文件读取说明":{}}}],["x5173;&#x4e8e;&#x5e38;&#x89c1;&#x7c7b;&#x89e3;&#x6790",{"_index":204,"title":{"quickstart/api.html#关于常见类解析":{}},"body":{}}],["x5173;&#x4e8e;@data&#xff0c;&#x8bfb;&#x5199;&#x7684;&#x5bf9;&#x8c61;&#x90fd;&#x7528;&#x5230;&#x4e86",{"_index":343,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x5173;&#x4e8e;maxcacheactivates",{"_index":400,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x5176;&#x4ed6;&#x5f00;&#x6e90;&#x6846;&#x67b6;&#x4f7f;&#x7528;&#x590d;&#x6742",{"_index":452,"title":{"support/about.html#其他开源框架使用复杂":{}},"body":{}}],["x5176;&#x4ed6;&#x5f00;&#x6e90;&#x6846;&#x67b6;&#x5b58;&#x5728;&#x4e00;&#x4e9b;bug&#x4fee;&#x590d;&#x4e0d;&#x53ca;&#x65f6",{"_index":454,"title":{"support/about.html#其他开源框架存在一些BUG修复不及时":{}},"body":{}}],["x5176;&#x4ed6;&#x7684;&#x7b56;&#x7565;&#x53ef;&#x4ee5;&#x81ea;&#x5df1;&#x5b9e;&#x73b0",{"_index":1093,"title":{},"body":{"quickstart/write.html#自定义样式":{}}}],["x517c;&#x5bb9;poi&#x7684",{"_index":352,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x5185;&#x5b58;&#xff0c;&#x8d85;&#x8fc7;5m&#x4f1a;&#x4f7f;&#x7528",{"_index":241,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x5185;&#x5bb9;&#x662f;&#x5185;&#x5bb9;&#x7684;&#x6837;&#x5f0f",{"_index":1092,"title":{},"body":{"quickstart/write.html#自定义样式":{}}}],["x5185;&#x5bb9;&#x7684;&#x7b56;&#x7565",{"_index":1083,"title":{},"body":{"quickstart/write.html#自定义样式":{}}}],["x5199",{"_index":247,"title":{"quickstart/api.html#写":{}},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x5199;&#x5165;list&#x4e4b;&#x524d;&#x7684;&#x6570;&#x636",{"_index":608,"title":{},"body":{"quickstart/fill.html#数据量大的复杂填充":{}}}],["x5199;&#x5230;excel&#x4f1a;&#x8c03;&#x7528;&#x8fd9;&#x4e2a;&#x6ce8;&#x89e3;&#x3002;&#x91cc;&#x9762;&#x7684",{"_index":253,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x5199;&#x6709;&#x5927;&#x91cf;&#x6570;&#x636e;&#x7684;xlsx&#x6587;&#x4ef6;&#x65f6;&#xff0c;poi&#x4e3a;&#x6211;&#x4eec;&#x63d0;&#x4f9b;&#x4e86;sxssfworkbook&#x7c7b;&#x6765;&#x5904;&#x7406;&#xff0c;&#x8fd9;&#x4e2a;&#x7c7b;&#x7684;&#x5904;&#x7406;&#x673a;&#x5236;&#x662f;&#x5f53;&#x5185;&#x5b58;&#x4e2d;&#x7684;&#x6570;&#x636e;&#x6761;&#x6570;&#x8fbe;&#x5230;&#x4e00;&#x4e2a;&#x6781;&#x9650;&#x6570;&#x91cf;&#x7684;&#x65f6;&#x5019;&#x5c31;flush&#x8fd9;&#x90e8;&#x5206;&#x6570;&#x636e;&#xff0c;&#x518d;&#x4f9d;&#x6b21;&#x5904;&#x7406;&#x4f59;&#x4e0b;&#x7684;&#x6570;&#x636e;&#xff0c;&#x8fd9;&#x4e2a;&#x5728;&#x5927;&#x591a;&#x6570;&#x573a;&#x666f;&#x80fd;&#x591f;&#x6ee1;&#x8db3;&#x9700;&#x6c42;&#x3002",{"_index":471,"title":{},"body":{"support/about.html#核心原理":{}}}],["x5199;&#x6cd5;1",{"_index":1021,"title":{},"body":{"quickstart/write.html#最简单的写":{}}}],["x5199;&#x6cd5;1&#xff1a",{"_index":756,"title":{},"body":{"quickstart/read.html#最简单的读":{}}}],["x5199;&#x6cd5;2",{"_index":1022,"title":{},"body":{"quickstart/write.html#最简单的写":{}}}],["x5199;&#x6cd5;2&#xff1a",{"_index":757,"title":{},"body":{"quickstart/read.html#最简单的读":{}}}],["x5199;&#x7684;&#x5904;&#x7406;&#x5668;&#x3002;&#x53ef;&#x4ee5;&#x5b9e;&#x73b0",{"_index":255,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x5199;&#x7684;&#x65f6;&#x5019;&#x662f;&#x5426;&#x662f;&#x4f7f;&#x7528;&#x9ed8;&#x8ba4;&#x5934",{"_index":268,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x5199;&#x7684;&#x65f6;&#x5019;&#x662f;&#x5426;&#x9700;&#x8981;&#x4f7f;&#x7528;&#x5bc6;&#x7801",{"_index":267,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x5199;excel",{"_index":125,"title":{},"body":{"index.html#EasyExcel":{}}}],["x5199;excel&#x4f1a;&#x8c03;&#x7528;&#x8fd9;&#x4e2a;&#x6ce8;&#x89e3;&#x3002;&#x91cc;&#x9762;&#x7684",{"_index":254,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x51fa;&#x73b0",{"_index":347,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x5206;&#x591a;&#x6b21",{"_index":579,"title":{},"body":{"quickstart/fill.html#填充列表":{}}}],["x5206;&#x6790;&#x6e05;&#x695a;poi&#x540e;&#x8981;&#x89e3;&#x51b3;oom&#x6709;3&#x4e2a;&#x5173;&#x952e;&#x3002",{"_index":476,"title":{},"body":{"support/about.html#核心原理":{}}}],["x5206;&#x9875;&#x53bb;&#x6570;&#x636e;&#x5e93;&#x67e5;&#x8be2;&#x6570;&#x636",{"_index":1040,"title":{},"body":{"quickstart/write.html#重复多次写入":{}}}],["x5217;&#x5bbd;&#x3001;&#x884c;&#x9ad8",{"_index":1072,"title":{"quickstart/write.html#列宽、行高":{}},"body":{"quickstart/write.html#列宽、行高":{}}}],["x5219",{"_index":131,"title":{},"body":{"index.html#EasyExcel":{},"quickstart/write.html#最简单的写":{}}}],["x521b;&#x5efa;&#x4e00;&#x4e2a;merge&#x7b56;&#x7565",{"_index":1095,"title":{},"body":{"quickstart/write.html#合并单元格":{}}}],["x521b;&#x5efa;&#x4e00;&#x4e2a;style&#x7b56;&#x7565",{"_index":1079,"title":{},"body":{"quickstart/write.html#自定义样式":{}}}],["x521b;&#x5efa;&#x6210;&#x5458;&#x53d8;&#x91cf;&#xff0c;&#x7136;&#x540e;&#x5728;&#x6784;&#x9020;&#x65b9;&#x6cd5;&#x91cc;&#x9762;&#x4f20;&#x8fdb;&#x53bb;&#x3002;&#x800c;&#x522b;&#x5fc5;&#x987b;&#x4e0d;&#x8ba9;spring&#x7ba1;&#x7406",{"_index":357,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x521b;&#x5efa;excel&#x5bf9;&#x5e94;&#x7684;&#x5b9e;&#x4f53;&#x5bf9;&#x8c61",{"_index":118,"title":{},"body":{"index.html#EasyExcel":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["x521b;&#x5efa;excel&#x5bf9;&#x5e94;&#x7684;&#x5b9e;&#x4f53;&#x5bf9;&#x8c61;,&#x5e76;&#x4f7f;&#x7528",{"_index":767,"title":{},"body":{"quickstart/read.html#指定列的下标或者列名":{}}}],["x5220;&#x9664;&#x4e86;list&#x4ee5;&#x540e;&#x7684;&#x6570;&#x636e;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x7edf;&#x8ba1;&#x7684;&#x8fd9;&#x4e00;&#x884c",{"_index":606,"title":{},"body":{"quickstart/fill.html#数据量大的复杂填充":{}}}],["x522b;&#x548c;fill",{"_index":616,"title":{},"body":{"quickstart/fill.html#数据量大的复杂填充":{}}}],["x522b;&#x5fd8;&#x8bb0;&#x5173;&#x95ed;&#x6d41",{"_index":625,"title":{},"body":{"quickstart/fill.html#横向的填充":{}}}],["x52a0;&#x4e0a;&#x5b58;&#x50a8;&#x6570;&#x636e;&#x5e93",{"_index":753,"title":{},"body":{"quickstart/read.html#最简单的读":{}}}],["x52a8;&#x6001;&#x5934;&#xff0c;&#x5b9e;&#x65f6;&#x751f;&#x6210;&#x5934;&#x5199;&#x5165",{"_index":1113,"title":{"quickstart/write.html#动态头，实时生成头写入":{}},"body":{"quickstart/write.html#动态头，实时生成头写入":{}}}],["x533a;&#x95f4;&#x8bbe;&#x7f6",{"_index":1143,"title":{},"body":{"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["x5343;&#x4e07;&#x522b;&#x5fd8;&#x8bb0;&#x5173;&#x95ed;&#x6d41",{"_index":582,"title":{},"body":{"quickstart/fill.html#填充列表":{}}}],["x5343;&#x4e07;&#x522b;&#x5fd8;&#x8bb0;finish",{"_index":1024,"title":{},"body":{"quickstart/write.html#最简单的写":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#使用table去写入":{}}}],["x5355;&#x4e2a;&#x6587;&#x4ef6;&#x7684;&#x5e76;&#x53d1;&#x5199;&#x5165;&#x3001;&#x8bfb;&#x53d6",{"_index":339,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x5355;&#x4f4d;mb",{"_index":388,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x53bb;&#x4f20;&#x5165",{"_index":1119,"title":{},"body":{"quickstart/write.html#动态头，实时生成头写入":{}}}],["x53bb;&#x5199;&#x5165;&#x6570;&#x636e",{"_index":1116,"title":{},"body":{"quickstart/write.html#动态头，实时生成头写入":{}}}],["x53bb;&#x63a5;&#x6536;&#x6570;&#x5b57;&#xff0c;&#x51fa;&#x73b0;&#x5c0f;&#x6570;&#x70b9;&#x7b49;&#x60c5;&#x51b5;&#xff0c;&#x8fd9;&#x4e2a;&#x662f;bug&#xff0c;&#x4f46;&#x662f;&#x5f88;&#x96be;&#x4fee;&#x590d;&#xff0c;&#x540e;&#x7eed;&#x7248;&#x672c;&#x4f1a;&#x4fee;&#x590d;&#x8fd9;&#x4e2a;&#x95ee;&#x9898;&#x3002;&#x76ee;&#x524d;&#x8bf7;&#x4f7f;&#x7528",{"_index":361,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x53bb;&#x63a5;&#x6536;excel&#x6570;&#x5b57;&#x683c;&#x5f0f;&#x7684;&#x6570;&#x636e;&#x4f1a;&#x8c03;&#x7528;&#x8fd9;&#x4e2a;&#x6ce8;&#x89e3;&#x3002;&#x91cc;&#x9762;&#x7684",{"_index":219,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x53bb;&#x63a5;&#x6536;excel&#x65e5;&#x671f;&#x683c;&#x5f0f;&#x7684;&#x6570;&#x636e;&#x4f1a;&#x8c03;&#x7528;&#x8fd9;&#x4e2a;&#x6ce8;&#x89e3;&#x3002;&#x91cc;&#x9762;&#x7684",{"_index":217,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x53bb;&#x63a5;&#x65e5;&#x671f;&#x624d;&#x80fd;&#x683c;&#x5f0f;&#x5316;&#x3002;&#x6211;&#x60f3;&#x63a5;&#x6536;&#x5e74;&#x6708;&#x65e5;&#x683c;&#x5f0f",{"_index":790,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["x53bb;&#x8c03;&#x7528;&#x5199;&#x5165;,&#x8fd9;&#x91cc;&#x6211;&#x8c03;&#x7528;&#x4e86;&#x4e94;&#x6b21;&#xff0c;&#x5b9e;&#x9645;&#x4f7f;&#x7528;&#x65f6;&#x6839;&#x636e;&#x6570;&#x636e;&#x5e93;&#x5206;&#x9875;&#x7684;&#x603b;&#x7684;&#x9875;&#x6570;&#x6765",{"_index":1039,"title":{},"body":{"quickstart/write.html#重复多次写入":{}}}],["x53bb;&#x8c03;&#x7528;&#x5199;&#x5165;,&#x8fd9;&#x91cc;&#x6211;&#x8c03;&#x7528;&#x4e86;&#x4e94;&#x6b21;&#xff0c;&#x5b9e;&#x9645;&#x4f7f;&#x7528;&#x65f6;&#x6839;&#x636e;&#x6570;&#x636e;&#x5e93;&#x5206;&#x9875;&#x7684;&#x603b;&#x7684;&#x9875;&#x6570;&#x6765;&#x3002;&#x8fd9;&#x91cc;&#x6700;&#x7ec8;&#x4f1a;&#x5199;&#x5230;5&#x4e2a;sheet&#x91cc;&#x9762",{"_index":1046,"title":{},"body":{"quickstart/write.html#重复多次写入":{}}}],["x53c2;&#x6570",{"_index":137,"title":{},"body":{"index.html#EasyExcel":{},"quickstart/api.html#关于常见类解析":{},"quickstart/write.html#web中的写":{}}}],["x53c2;&#x6570;&#x3002;&#x56e0;&#x4e3a;&#x4f7f;&#x7528;&#x4e86",{"_index":236,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x53c2;&#x6570;&#x800c;&#x5df2;&#xff0c;&#x5176;&#x4ed6;&#x7684;&#x53c2;&#x7167;&#x5176;&#x4ed6;demo&#x5199",{"_index":382,"title":{},"body":{"quickstart/faq.html#不支持功能":{},"quickstart/faq.html#超大-10M以上-文件读取说明":{}}}],["x53c2;&#x7167",{"_index":119,"title":{},"body":{"index.html#EasyExcel":{},"quickstart/api.html#关于常见类解析":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["x53c2;&#x7167;&#x4e0b;&#x4e00;&#x4e2a",{"_index":600,"title":{},"body":{"quickstart/fill.html#复杂的填充":{}}}],["x53c2;&#x7167;&#xff1a",{"_index":571,"title":{},"body":{"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["x53ea;&#x662f;&#x540d;&#x5b57;&#x53d8;&#x4e86",{"_index":844,"title":{},"body":{"quickstart/read.html#web中的读":{}}}],["x53ea;&#x662f;&#x6cdb;&#x578b;&#x53d8;&#x4e86",{"_index":793,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#web中的读":{}}}],["x53ea;&#x662f;&#x6cdb;&#x578b;&#x53d8;&#x4e86;&#x800c;&#x5df2",{"_index":766,"title":{},"body":{"quickstart/read.html#指定列的下标或者列名":{}}}],["x53ef;&#x4ee5;&#x53c2;&#x7167;&#x5feb;&#x901f;&#x5f00;&#x59cb;&#x4e2d;&#x7684;&#x590d;&#x6742;&#x5934",{"_index":250,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x53ef;&#x4ee5;&#x6bcf;&#x6b21;&#x90fd;&#x53d8;&#xff0c;&#x6211;&#x8fd9;&#x91cc;&#x4e3a;&#x4e86;&#x65b9;&#x4fbf",{"_index":1052,"title":{},"body":{"quickstart/write.html#重复多次写入":{}}}],["x5408;&#x5e76;&#x5355;&#x5143;&#x683c",{"_index":1094,"title":{"quickstart/write.html#合并单元格":{}},"body":{"quickstart/write.html#合并单元格":{}}}],["x540c;&#x4e00;&#x4e2a;&#x5bf9;&#x8c61",{"_index":1044,"title":{},"body":{"quickstart/write.html#重复多次写入":{}}}],["x540c;&#x65f6;&#x7528;&#xff0c;&#x8981;&#x4e48;&#x4e00;&#x4e2a;&#x5bf9;&#x8c61;&#x53ea;&#x7528;index&#xff0c;&#x8981;&#x4e48;&#x4e00;&#x4e2a;&#x5bf9;&#x8c61;&#x53ea;&#x7528;name&#x53bb;&#x5339;&#x914d",{"_index":762,"title":{},"body":{"quickstart/read.html#指定列的下标或者列名":{}}}],["x540c;&#x6837;&#x7684;head",{"_index":779,"title":{},"body":{"quickstart/read.html#读多个sheet":{}}}],["x540c;&#x6b65;&#x7684;&#x8fd4;&#x56de",{"_index":817,"title":{"quickstart/read.html#同步的返回":{}},"body":{}}],["x540c;&#x6b65;&#x7684;&#x8fd4;&#x56de;&#xff0c;&#x4e0d;&#x63a8;&#x8350;&#x4f7f;&#x7528;&#xff0c;&#x5982;&#x679c;&#x6570;&#x636e;&#x91cf;&#x5927;&#x4f1a;&#x628a;&#x6570;&#x636e;&#x653e;&#x5230;&#x5185;&#x5b58;&#x91cc;&#x9762",{"_index":818,"title":{},"body":{"quickstart/read.html#同步的返回":{}}}],["x540c;&#x6b65;&#x8bfb;&#x53d6;&#x4f1a;&#x81ea;&#x52a8;finish",{"_index":819,"title":{},"body":{"quickstart/read.html#同步的返回":{}}}],["x540e;&#x9762;&#x8fd8;&#x6709;&#x4e2a;&#x7edf;&#x8ba1",{"_index":609,"title":{},"body":{"quickstart/fill.html#数据量大的复杂填充":{}}}],["x548c",{"_index":397,"title":{},"body":{"quickstart/faq.html#不支持功能":{},"quickstart/read.html#指定列的下标或者列名":{}}}],["x548c;&#x6240;&#x5728;&#x5217;&#x7684;&#x503c",{"_index":824,"title":{},"body":{"quickstart/read.html#同步的返回":{}}}],["x548c;listen",{"_index":780,"title":{},"body":{"quickstart/read.html#读多个sheet":{}}}],["x56fe;&#x7247;&#x5bfc;&#x51fa",{"_index":1061,"title":{"quickstart/write.html#图片导出":{}},"body":{"quickstart/write.html#图片导出":{}}}],["x5728;&#x6bcf;&#x4e00;&#x4e2a;&#x64cd;&#x4f5c;&#x5305;&#x62ec;&#x521b;&#x5efa;&#x5355;&#x5143;&#x683c;&#x3001;&#x521b;&#x5efa;&#x8868;&#x683c;&#x7b49;&#x90fd;&#x4f1a;&#x8c03;&#x7528;writehandler&#x6765;&#x5904;&#x7406;&#x6570;&#x636",{"_index":210,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x5728;&#x6bcf;&#x4e00;&#x884c;&#x8bfb;&#x53d6;&#x5b8c;&#x6bd5;&#x540e;&#x90fd;&#x4f1a;&#x8c03;&#x7528;readlistener&#x6765;&#x5904;&#x7406;&#x6570;&#x636",{"_index":209,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x5728;&#x8f6c;&#x6362;&#x5f02;&#x5e38",{"_index":833,"title":{},"body":{"quickstart/read.html#数据转换等异常处理":{}}}],["x586b;&#x5145",{"_index":580,"title":{},"body":{"quickstart/fill.html#填充列表":{}}}],["x586b;&#x5145;&#x5217;&#x8868",{"_index":570,"title":{"quickstart/fill.html#填充列表":{}},"body":{"quickstart/fill.html#填充列表":{}}}],["x586b;&#x5145;list",{"_index":572,"title":{},"body":{"quickstart/fill.html#填充列表":{}}}],["x590d;&#x6742;&#x5934;&#x5199;&#x5165",{"_index":1031,"title":{"quickstart/write.html#复杂头写入":{}},"body":{"quickstart/write.html#复杂头写入":{}}}],["x590d;&#x6742;&#x7684;&#x586b;&#x5145",{"_index":583,"title":{"quickstart/fill.html#复杂的填充":{}},"body":{"quickstart/fill.html#复杂的填充":{}}}],["x591a;&#x4e86;&#x4e2a;&#x70b9",{"_index":575,"title":{},"body":{"quickstart/fill.html#填充列表":{}}}],["x591a;&#x5c11;m&#x5171;&#x4eab;&#x5b57;&#x7b26;&#x4e32;&#x4ee5;&#x540",{"_index":386,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x591a;&#x884c;&#x5934",{"_index":809,"title":{"quickstart/read.html#多行头":{}},"body":{"quickstart/read.html#多行头":{}}}],["x5927;&#x6982;&#x662f",{"_index":395,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x5934;&#x662f;&#x5934;&#x7684;&#x6837;&#x5f0f",{"_index":1091,"title":{},"body":{"quickstart/write.html#自定义样式":{}}}],["x5934;&#x7684;&#x7b56;&#x7565",{"_index":1081,"title":{},"body":{"quickstart/write.html#自定义样式":{}}}],["x5982;&#x4e0b;&#x4e00;&#x6bb5;&#x62a5;&#x9519;&#x5c31;&#x662f;&#x5728;&#x5927;&#x5e76;&#x53d1;&#x60c5;&#x51b5;&#x4e0b;poi&#x629b;&#x7684;&#x4e00;&#x4e2a;&#x5f02;&#x5e38;&#x3002",{"_index":456,"title":{},"body":{"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["x5982;&#x4f55;&#x5224;&#x65ad",{"_index":403,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x5982;&#x679c;&#x4e0d;&#x4f20;&#x5165;class&#x5219;&#x9ed8;&#x8ba4;&#x4e3a;1.&#x5f53;&#x7136;&#x4f60;&#x6307;&#x5b9a;&#x4e86;headrownumber&#x4e0d;&#x7ba1;&#x662f;&#x5426;&#x4f20;&#x5165;class&#x90fd;&#x662f;&#x4ee5;&#x4f60;&#x4f20;&#x5165;&#x7684;&#x4e3a;&#x51c6;&#x3002",{"_index":814,"title":{},"body":{"quickstart/read.html#多行头":{}}}],["x5982;&#x679c;&#x4f60;&#x7684;&#x6a21;&#x677f;&#x6709;list,&#x4e14;list&#x4e0d;&#x662f;&#x6700;&#x540e;&#x4e00;&#x884c;&#xff0c;&#x4e0b;&#x9762;&#x8fd8;&#x6709;&#x6570;&#x636e;&#x9700;&#x8981;&#x586b;&#x5145",{"_index":594,"title":{},"body":{"quickstart/fill.html#复杂的填充":{}}}],["x5982;&#x679c;&#x4f7f;&#x7528;&#x6d41",{"_index":1064,"title":{},"body":{"quickstart/write.html#图片导出":{}}}],["x5982;&#x679c;&#x5199;&#x5230;&#x4e0d;&#x540c;&#x7684;sheet",{"_index":1043,"title":{},"body":{"quickstart/write.html#重复多次写入":{}}}],["x5982;&#x679c;&#x5199;&#x5230;&#x540c;&#x4e00;&#x4e2a;sheet",{"_index":1037,"title":{},"body":{"quickstart/write.html#重复多次写入":{}}}],["x5982;&#x679c;&#x540c;&#x4e00;&#x4e2a;sheet&#x53ea;&#x8981;&#x521b;&#x5efa;&#x4e00;&#x6b21",{"_index":1038,"title":{},"body":{"quickstart/write.html#重复多次写入":{}}}],["x5982;&#x679c;&#x5728;&#x8bfb;&#x7684;&#x65f6;&#x5019",{"_index":354,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x5982;&#x679c;&#x5bf9;&#x8bfb;&#x53d6;&#x6548;&#x7387;&#x611f;&#x89c9;&#x8fd8;&#x80fd;&#x63a5;&#x53d7;&#xff0c;&#x5c31;&#x7528;&#x9ed8;&#x8ba4;&#x7684;&#xff0c;&#x6c38;&#x4e45;&#x5360;&#x7528;&#xff08;&#x5355;&#x4e2a;excel&#x8bfb;&#x53d6;&#x6574;&#x4e2a;&#x8fc7;&#x7a0b;&#xff09;&#x4e00;&#x822c;&#x4e0d;&#x4f1a;&#x8d85;&#x8fc7;50m(&#x5927;&#x6982;&#x7387;&#x5c31;30m)&#xff0c;&#x5269;&#x4e0b;&#x4e34;&#x65f6;&#x7684;gc&#x4f1a;&#x5f88;&#x5feb;&#x56de;&#x6536",{"_index":371,"title":{},"body":{"quickstart/faq.html#不支持功能":{},"quickstart/faq.html#超大-10M以上-文件读取说明":{}}}],["x5982;&#x679c;&#x5c31;&#x60f3;&#x5355;&#x4e2a;&#x5b57;&#x6bb5;&#x4f7f;&#x7528;&#x8bf7;&#x4f7f;&#x7528;@excelproperti",{"_index":806,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["x5982;&#x679c;&#x6570;&#x636e;&#x91cf;&#x5927",{"_index":598,"title":{},"body":{"quickstart/fill.html#复杂的填充":{}}}],["x5982;&#x679c;&#x662f;&#x67d0;&#x4e00;&#x4e2a;&#x5355;&#x5143;&#x683c;&#x7684;&#x8f6c;&#x6362;&#x5f02;&#x5e38",{"_index":837,"title":{},"body":{"quickstart/read.html#数据转换等异常处理":{}}}],["x5982;&#x679c;&#x6700;&#x5927;&#x6587;&#x4ef6;&#x6761;&#x6570;&#x4e5f;&#x5c31;&#x5341;&#x51e0;&#x4e8c;&#x5341;&#x4e07;&#xff0c;&#x7136;&#x540e;excel&#x4e5f;&#x5c31;&#x662f;&#x5341;&#x51e0;&#x4e8c;&#x5341;m&#xff0c;&#x800c;&#x4e14;&#x4e0d;&#x4f1a;&#x6709;&#x5f88;&#x9ad8;&#x7684;&#x5e76;&#x53d1;&#xff0c;&#x5e76;&#x4e14;&#x5185;&#x5b58;&#x4e5f;&#x8f83;&#x5927",{"_index":377,"title":{},"body":{"quickstart/faq.html#不支持功能":{},"quickstart/faq.html#超大-10M以上-文件读取说明":{}}}],["x5982;&#x679c;&#x672c;&#x6765;&#x5c31;&#x6709",{"_index":561,"title":{},"body":{"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{}}}],["x5982;&#x679c;&#x7528",{"_index":360,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x5982;&#x679c;&#x8981;&#x83b7;&#x53d6;&#x5934;&#x7684;&#x4fe1;&#x606f",{"_index":839,"title":{},"body":{"quickstart/read.html#数据转换等异常处理":{}}}],["x5982;&#x679c;&#x8bbe;&#x7f6e;&#x4e86;true,&#x6709;&#x4e2a;&#x7f3a;&#x70b9",{"_index":591,"title":{},"body":{"quickstart/fill.html#复杂的填充":{}}}],["x5982;&#x679c;&#x8fd9;&#x91cc;&#x60f3;&#x4f7f;&#x7528;03",{"_index":130,"title":{},"body":{"index.html#EasyExcel":{},"quickstart/write.html#最简单的写":{}}}],["x5982;&#x679c;string&#x7c7b;&#x578b",{"_index":1062,"title":{},"body":{"quickstart/write.html#图片导出":{}}}],["x5b57;&#x4f53;&#x5927;&#x5c0f",{"_index":1089,"title":{},"body":{"quickstart/write.html#自定义样式":{}}}],["x5b57;&#x7b26;&#x4e32",{"_index":1120,"title":{},"body":{"quickstart/write.html#动态头，实时生成头写入":{}}}],["x5b57;&#x7b26;&#x4e32;&#x3001;&#x8868;&#x5934;&#x7b49;&#x6570;&#x636e;&#x81ea;&#x52a8;trim",{"_index":230,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x5b57;&#x7b26;&#x4e32;&#x6807;&#x9898",{"_index":764,"title":{},"body":{"quickstart/read.html#指定列的下标或者列名":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["x5b57;&#x7b26;&#x4e32;&#x8d77;&#x524d;&#x9762;&#x52a0;&#x4e0a;&#x81ea;&#x5b9a;&#x4e49;&#xff1a;&#x4e09;&#x4e2a;&#x5b57",{"_index":1056,"title":{},"body":{"quickstart/write.html#日期、数字或者自定义格式转换":{}}}],["x5b58;&#x50a8;&#x6570;&#x636e;&#x5e93;&#x6210;&#x529f;&#xff01",{"_index":755,"title":{},"body":{"quickstart/read.html#最简单的读":{}}}],["x5b8f",{"_index":341,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x5b9a;&#x4e49;&#x62e6;&#x622a;&#x5668",{"_index":1135,"title":{},"body":{"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["x5b9e;&#x9645;&#x4e0a;&#x53ef;&#x4ee5;&#x4e00;&#x76f4;&#x53d8",{"_index":1054,"title":{},"body":{"quickstart/write.html#重复多次写入":{}}}],["x5b9e;&#x9645;&#x4f7f;&#x7528;&#x53ea;&#x8981;&#x9009;&#x4e00;&#x79cd;&#x5373;&#x53ef",{"_index":1067,"title":{},"body":{"quickstart/write.html#图片导出":{}}}],["x5bbd;&#x5ea6;&#x4e3a;50",{"_index":1073,"title":{},"body":{"quickstart/write.html#列宽、行高":{}}}],["x5bf9;&#x4e2d;&#x6587;&#x652f;&#x6301;&#x4e5f;&#x4e0d;&#x592a;&#x597d;&#x3002;&#x76ee;&#x524d;&#x6ca1;&#x627e;&#x5230;&#x5f88;&#x597d;&#x7684;&#x7b97;&#x6cd5;&#x3002",{"_index":1130,"title":{},"body":{"quickstart/write.html#自动列宽-不太精确":{}}}],["x5bf9;&#x5e76;&#x53d1;&#x8981;&#x6c42;&#x8f83;&#x9ad8;&#xff0c;&#x800c;&#x4e14;&#x90fd;&#x662f;&#x7ecf;&#x5e38;&#x6709;&#x8d85;&#x7ea7;&#x5927;&#x6587;&#x4ef6",{"_index":384,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x5bf9;&#x7b2c;&#x4e00;&#x5217;&#x7b2c;&#x4e00;&#x884c;&#x548c;&#x7b2c;&#x4e8c;&#x884c;&#x7684;&#x6570;&#x636e;&#x65b0;&#x589e;&#x4e0b;&#x62c9;&#x6846;&#xff0c;&#x663e;&#x793a",{"_index":1148,"title":{},"body":{"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["x5bf9;&#x7b2c;&#x4e00;&#x884c;&#x7b2c;&#x4e00;&#x5217;&#x7684;&#x5934;&#x8d85;&#x94fe;&#x63a5;&#x5230;:https://github.com/alibaba/easyexcel",{"_index":1147,"title":{},"body":{"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["x5bf9;&#x8c61",{"_index":556,"title":{},"body":{"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["x5bf9;poi&#x6709;&#x8fc7;&#x6df1;&#x5165;&#x4e86;&#x89e3;&#x7684;&#x4f30;&#x8ba1;&#x624d;&#x77e5;&#x9053;&#x539f;&#x6765;poi&#x8fd8;&#x6709;sax&#x6a21;&#x5f0f;&#x3002;&#x4f46;sax&#x6a21;&#x5f0f;&#x76f8;&#x5bf9;&#x6bd4;&#x8f83;&#x590d;&#x6742;&#xff0c;excel&#x6709;03&#x548c;07&#x4e24;&#x79cd;&#x7248;&#x672c;&#xff0c;&#x4e24;&#x4e2a;&#x7248;&#x672c;&#x6570;&#x636e;&#x5b58;&#x50a8;&#x65b9;&#x5f0f;&#x622a;&#x7136;&#x4e0d;&#x540c;&#xff0c;sax&#x89e3;&#x6790;&#x65b9;&#x5f0f;&#x4e5f;&#x5404;&#x4e0d;&#x4e00;&#x6837;&#x3002;&#x60f3;&#x8981;&#x4e86;&#x89e3;&#x6e05;&#x695a;&#x8fd9;&#x4e24;&#x79cd;&#x89e3;&#x6790;&#x65b9;&#x5f0f;&#xff0c;&#x624d;&#x53bb;&#x5199;&#x4ee3;&#x7801;&#x6d4b;&#x8bd5;&#xff0c;&#x4f30;&#x8ba1;&#x4e24;&#x5929;&#x65f6;&#x95f4;&#x662f;&#x9700;&#x8981;&#x7684;&#x3002;&#x518d;&#x52a0;&#x4e0a;&#x5373;&#x4f7f;&#x89e3;&#x6790;&#x5b8c;&#xff0c;&#x8981;&#x8f6c;&#x6362;&#x5230;&#x81ea;&#x5df1;&#x4e1a;&#x52a1;&#x6a21;&#x578b;&#x8fd8;&#x8981;&#x5f88;&#x591a;&#x7e41;&#x7410;&#x7684;&#x4ee3;&#x7801;&#x3002;&#x603b;&#x4f53;&#x4e0b;&#x6765;&#x611f;&#x89c9;&#x81f3;&#x5c11;&#x9700;&#x8981;&#x4e09;&#x5929;&#xff0c;&#x7531;&#x4e8e;&#x4ee3;&#x7801;&#x590d;&#x6742;&#xff0c;&#x540e;&#x7eed;&#x7ef4;&#x62a4;&#x6210;&#x672c;&#x5de8;&#x5927;&#x3002",{"_index":453,"title":{},"body":{"support/about.html#其他开源框架使用复杂":{}}}],["x5c31;&#x5fc5;&#x987b;&#x8bbe;&#x7f6",{"_index":595,"title":{},"body":{"quickstart/fill.html#复杂的填充":{}}}],["x5c31;&#x662f;&#x4ed6;&#x4f1a;&#x628a;&#x6240;&#x6709;&#x7684;&#x6570;&#x636e;&#x90fd;&#x653e;&#x5230;&#x5185;&#x5b58;&#x4e86;&#xff0c;&#x6240;&#x4ee5;&#x614e;&#x7528",{"_index":592,"title":{},"body":{"quickstart/fill.html#复杂的填充":{}}}],["x5c31;&#x662f;&#x52a0;&#x4e86;&#x4e2a;readcache(new",{"_index":381,"title":{},"body":{"quickstart/faq.html#不支持功能":{},"quickstart/faq.html#超大-10M以上-文件读取说明":{}}}],["x5c31;&#x662f;&#x52a0;&#x4e86;&#x4e2a;readcacheselector(new",{"_index":398,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x5c31;&#x662f;&#x540d;&#x79f0;&#x53d8;&#x4e86;&#x4e0b",{"_index":1151,"title":{},"body":{"quickstart/write.html#web中的写":{}}}],["x5c31;&#x6709;2&#x4e2a;&#x5934;&#x4e86",{"_index":1107,"title":{},"body":{"quickstart/write.html#使用table去写入":{}}}],["x5df2;&#x7ecf;&#x975e;&#x5e38;&#x5408;&#x7406;&#x4e86;&#x3002;&#x5982;&#x679c;&#x5c0f;&#x4e8e;500",{"_index":409,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x5e38;&#x89c1;&#x95ee;&#x9898",{"_index":335,"title":{"quickstart/faq.html#常见问题":{},"quickstart/faq.html#常见问题-1":{}},"body":{"quickstart/faq.html#不支持功能":{}}}],["x5e76;&#x586b;&#x5145",{"_index":578,"title":{},"body":{"quickstart/fill.html#填充列表":{}}}],["x5e76;&#x6ce8;&#x518c",{"_index":1080,"title":{},"body":{"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{}}}],["x5e94;&#x8be5;&#x90fd;&#x8fd8;&#x884c;&#x3002",{"_index":411,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x5f00;&#x542f;debug&#x65e5;&#x5fd7;&#x4f1a;&#x8f93;&#x51fa",{"_index":405,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x5f00;&#x6e90;&#x9879;&#x76ee;&#x4e0d;&#x5bb9;&#x6613;&#xff0c;&#x5982;&#x679c;&#x89c9;&#x5f97;&#x672c;&#x9879;&#x76ee;&#x5bf9;&#x60a8;&#x7684;&#x5de5;&#x4f5c;&#x8fd8;&#x662f;&#x6709;&#x5e2e;&#x52a9;&#x7684;&#x8bdd;&#xff0c;&#x8bf7;&#x5728;&#x5e2e;&#x5fd9;&#x5728",{"_index":107,"title":{},"body":{"index.html#EasyExcel":{}}}],["x5f02;&#x6b65;&#x7684;&#x53bb;&#x5199;&#x5165;excel",{"_index":620,"title":{},"body":{"quickstart/fill.html#数据量大的复杂填充":{}}}],["x5f20;&#x4e09",{"_index":567,"title":{},"body":{"quickstart/fill.html#最简单的填充":{}}}],["x5f3a;&#x5236;&#x4f7f;&#x7528;&#x5185;&#x5b58;&#x5b58;&#x50a8;&#xff0c;&#x8fd9;&#x6837;&#x5927;&#x6982;&#x4e00;&#x4e2a;20m&#x7684;excel&#x4f7f;&#x7528;150m&#xff08;&#x5f88;&#x591a;&#x4e34;&#x65f6;&#x5bf9;&#x8c61;&#xff0c;&#x6240;&#x4ee5;100m&#x4f1a;&#x4e00;&#x76f4;gc&#xff09;&#x7684;&#x5185;&#x5b58",{"_index":378,"title":{},"body":{"quickstart/faq.html#不支持功能":{},"quickstart/faq.html#超大-10M以上-文件读取说明":{}}}],["x5f3a;&#x5236;&#x8bfb;&#x53d6;&#x7b2c;&#x4e09;&#x4e2a",{"_index":760,"title":{},"body":{"quickstart/read.html#指定列的下标或者列名":{}}}],["x5f53;&#x524d;excel&#x7684;&#x7c7b;&#x578b",{"_index":233,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x5f53;&#x7136;&#x4e5f;&#x53ef;&#x4ee5;&#x81ea;&#x5df1;&#x53c2;&#x7167",{"_index":1127,"title":{},"body":{"quickstart/write.html#自动列宽-不太精确":{}}}],["x5f53;&#x7136;&#x548c;easyexcel&#x6ca1;&#x6709;&#x5173;&#x7cfb",{"_index":1155,"title":{},"body":{"quickstart/write.html#web中的写":{}}}],["x5f53;&#x7136;&#x8fd8;&#x6709;&#x6025;&#x901f;&#x6a21;&#x5f0f;&#x80fd;&#x66f4;&#x5feb;&#xff0c;&#x4f46;&#x662f;&#x5185;&#x5b58;&#x5360;&#x7528;&#x4f1a;&#x5728;100m&#x591a;&#x4e00;&#x70b9",{"_index":113,"title":{},"body":{"index.html#EasyExcel":{}}}],["x5f53;&#x7136;&#x8fd9;&#x91cc;&#x6570;&#x636e;&#x4e5f;&#x53ef;&#x4ee5;&#x7528",{"_index":1118,"title":{},"body":{"quickstart/write.html#动态头，实时生成头写入":{}}}],["x5f97;&#x5230;&#x503c;&#x4e3a;4k&#xff0c;400w/4k=1000",{"_index":407,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x5fc5;&#x987b;&#x6307;&#x5b9a;&#x8f6c;&#x6362;&#x5668;&#xff0c;string&#x9ed8;&#x8ba4;&#x8f6c;&#x6362;&#x6210;str",{"_index":1063,"title":{},"body":{"quickstart/write.html#图片导出":{}}}],["x5feb;&#x901f;&#x5f00;&#x59cb",{"_index":114,"title":{},"body":{"index.html#EasyExcel":{}}}],["x5ffd;&#x7565;&#x8fd9;&#x4e2a;&#x5b57;&#x6bb5",{"_index":1020,"title":{},"body":{"quickstart/write.html#最简单的写":{}}}],["x601d;&#x8def;&#x662f;&#x8fd9;&#x6837;&#x5b50;&#x7684;&#xff0c;&#x5148;&#x521b;&#x5efa;liststring&#x5934;&#x683c;&#x5f0f;&#x7684;sheet&#x4ec5;&#x4ec5;&#x5199;&#x5165;&#x5934;,&#x7136;&#x540e;&#x901a;&#x8fc7;t",{"_index":1114,"title":{},"body":{"quickstart/write.html#动态头，实时生成头写入":{}}}],["x603b;&#x4f53;&#x4e0a;&#x5199;&#x6cd5;&#x6bd4;&#x8f83;&#x590d;&#x6742",{"_index":618,"title":{},"body":{"quickstart/fill.html#数据量大的复杂填充":{}}}],["x60f3;&#x529e;&#x6cd5;&#x624b;&#x52a8;&#x5199;&#x5165",{"_index":610,"title":{},"body":{"quickstart/fill.html#数据量大的复杂填充":{}}}],["x60f3;&#x81ea;&#x5b9a;&#x4e49;&#x8bbe;&#x7f6e;&#xff0c;&#x9996;&#x5148;&#x8981;&#x786e;&#x5b9a;&#x4f60;&#x5927;&#x6982;&#x613f;&#x610f;&#x82b1;&#x591a;&#x5c11;&#x5185;&#x5b58;&#x6765;&#x8bfb;&#x53d6;&#x4e00;&#x4e2a;&#x8d85;&#x7ea7;&#x5927;&#x7684;excel,&#x6bd4;&#x5982;&#x5e0c;&#x671b;&#x8bfb;&#x53d6;excel&#x6700;&#x591a;&#x5360;&#x7528;100m&#x5185;&#x5b58;&#xff08;&#x662f;&#x8bfb;&#x53d6;&#x8fc7;&#x7a0b;&#x4e2d;&#x6c38;&#x4e45;&#x5360;&#x7528;&#xff0c;&#x65b0;&#x751f;&#x4ee3;&#x9a6c;&#x4e0a;&#x56de;&#x6536;&#x7684;&#x4e0d;&#x7b97;&#xff09;&#xff0c;&#x90a3;&#x5c31;&#x8bbe;&#x7f6e;&#x4f7f;&#x7528;&#x6587;&#x4ef6;&#x6765;&#x5b58;&#x50a8;&#x5171;&#x4eab;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x5927;&#x5c0f;&#x5224;&#x65ad;&#x4e3a;20m(&#x5c0f;&#x4e8e;20m&#x5b58;&#x5185;&#x5b58;&#xff0c;&#x5927;&#x4e8e;&#x5b58;&#x4e34;&#x65f6;&#x6587;&#x4ef6;)&#xff0c;&#x7136;&#x540e;&#x8bbe;&#x7f6e;&#x6587;&#x4ef6;&#x5b58;&#x50a8;&#x65f6;&#x4e34;&#x65f6;&#x5171;&#x4eab;&#x5b57;&#x7b26;&#x4e32;&#x5360;&#x7528;&#x5185;&#x5b58;&#x5927;&#x5c0f;90m&#x5dee;&#x4e0d;&#x591a",{"_index":376,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x6211;&#x4eec;&#x4e5f;&#x53ef;&#x4ee5;registerconverter&#x6765;&#x6307;&#x5b9a;&#x81ea;&#x5b9a;&#x4e49;&#x8f6c;&#x6362;&#x5668;&#xff0c",{"_index":803,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x7406;&#x89e3;&#x4e3a;&#x7eaf;&#x6587;&#x672c;&#x6587;&#x4ef6;&#xff0c;&#x53ef;&#x4ee5;&#x88ab;excel&#x6253;&#x5f00;&#x3002;&#x4ed6;&#x7684;&#x683c;&#x5f0f;&#x975e;&#x5e38;&#x7b80;&#x5355;&#xff0c;&#x89e3;&#x6790;&#x8d77;&#x6765;&#x548c;&#x89e3;&#x6790;&#x6587;&#x672c;&#x6587;&#x4ef6;&#x4e00;&#x6837;&#x3002",{"_index":469,"title":{},"body":{"support/about.html#Excel格式分析格式分析":{}}}],["x6211;&#x60f3;&#x5199;&#x5230;excel",{"_index":1057,"title":{},"body":{"quickstart/write.html#日期、数字或者自定义格式转换":{}}}],["x6211;&#x60f3;&#x6240;&#x6709;&#x7684",{"_index":1055,"title":{},"body":{"quickstart/write.html#日期、数字或者自定义格式转换":{}}}],["x6211;&#x60f3;&#x63a5;&#x6536;&#x767e;&#x5206;&#x6bd4;&#x7684;&#x6570;&#x5b57",{"_index":792,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["x6211;&#x81ea;&#x5b9a;&#x4e49",{"_index":786,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["x6240;&#x4ee5;&#x6ce8;&#x518c;&#x4e86",{"_index":778,"title":{},"body":{"quickstart/read.html#读多个sheet":{}}}],["x6240;&#x4ee5;&#x7528;&#x7684;&#x540c;&#x4e00;&#x4e2a;class",{"_index":1053,"title":{},"body":{"quickstart/write.html#重复多次写入":{}}}],["x6240;&#x4ee5;&#x8bbe;&#x7f6e;&#x53c2;&#x6570;&#x4e3a;:20",{"_index":396,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x6240;&#x4ee5;&#x9700;&#x8981;&#x7cbe;&#x786e;&#x5230;&#x521a;&#x597d;&#x5217;&#x5bbd;&#x7684;&#x614e;&#x7528;&#x3002",{"_index":1126,"title":{},"body":{"quickstart/write.html#自动列宽-不太精确":{}}}],["x6240;&#x6709;&#x6570;&#x636e;&#x89e3;&#x6790;&#x5b8c;&#x6210;&#xff01",{"_index":752,"title":{},"body":{"quickstart/read.html#最简单的读":{}}}],["x6240;&#x6709;&#x8f83;&#x65b0;&#x7248;&#x672c",{"_index":353,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x6240;&#x6709;&#x914d;&#x7f6e;&#x90fd;&#x662f;&#x7ee7;&#x627f;&#x7684;&#xff0c;workbook&#x7684;&#x914d;&#x7f6e;&#x4f1a;&#x88ab;sheet&#x7ee7;&#x627f;&#xff0c;&#x6240;&#x4ee5;&#x5728;&#x7528;easyexcel&#x8bbe;&#x7f6e;&#x53c2;&#x6570;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x5728;easyexcel&#x2026;sheet()&#x65b9;&#x6cd5;&#x4e4b;&#x524d;&#x4f5c;&#x7528;&#x57df;&#x662f;&#x6574;&#x4e2a;sheet,&#x4e4b;&#x540e;&#x9488;&#x5bf9;&#x5355;&#x4e2a;sheet",{"_index":211,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x6240;&#x6709;java&#x4e3a;string,excel&#x4e3a;string&#x7684;&#x90fd;&#x4f1a;&#x7528;&#x8fd9;&#x4e2a;&#x8f6c;&#x6362;&#x5668;&#x3002",{"_index":805,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["x628a;eachcolumn",{"_index":1097,"title":{},"body":{"quickstart/write.html#合并单元格":{}}}],["x628a;sheet&#x8bbe;&#x7f6e;&#x4e3a;&#x4e0d;&#x9700;&#x8981;&#x5934",{"_index":1104,"title":{},"body":{"quickstart/write.html#使用table去写入":{}}}],["x62a5;&#x9519;&#x5730;&#x65b9;poi&#x6e90;&#x7801;&#x5982;&#x4e0b",{"_index":457,"title":{},"body":{"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["x6307;&#x5b9a;&#x5199;&#x5165;&#x7684;&#x5217",{"_index":1026,"title":{"quickstart/write.html#指定写入的列":{}},"body":{"quickstart/write.html#指定写入的列":{}}}],["x6307;&#x5b9a;&#x5199;&#x5165;&#x7684;&#x540d;&#x79f0;&#xff0c;&#x9ed8;&#x8ba4;&#x6210;&#x5458;&#x53d8;&#x91cf;&#x7684;&#x540d;&#x5b57;&#xff0c;&#x591a;&#x4e2a",{"_index":249,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x6307;&#x5b9a;&#x5199;&#x5230;&#x7b2c;&#x51e0;&#x5217;&#xff0c;&#x9ed8;&#x8ba4;&#x6839;&#x636e;&#x6210;&#x5458;&#x53d8;&#x91cf;&#x6392;&#x5e8f;&#x3002",{"_index":248,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x6307;&#x5b9a;&#x5217;&#x7684;&#x4e0b;&#x6807;&#x6216;&#x8005;&#x5217;&#x540d",{"_index":759,"title":{"quickstart/read.html#指定列的下标或者列名":{}},"body":{"quickstart/read.html#指定列的下标或者列名":{}}}],["x6307;&#x5b9a;&#x5f53;&#x524d;&#x5b57;&#x6bb5;&#x5bf9;&#x5e94;excel&#x4e2d;&#x7684;&#x90a3;&#x4e00;&#x5217;&#x3002;&#x53ef;&#x4ee5;&#x6839;&#x636e;&#x540d;&#x5b57;&#x6216;&#x8005;index&#x53bb;&#x5339;&#x914d;&#x3002;&#x5f53;&#x7136;&#x4e5f;&#x53ef;&#x4ee5;&#x4e0d;&#x5199;&#xff0c;&#x9ed8;&#x8ba4;&#x7b2c;&#x4e00;&#x4e2a;&#x5b57;&#x6bb5;&#x5c31;&#x662f;index=0&#xff0c;&#x4ee5;&#x6b64;&#x7c7b;&#x63a8;&#x3002;&#x5343;&#x4e07;&#x6ce8;&#x610f;&#xff0c;&#x8981;&#x4e48;&#x5168;&#x90e8;&#x4e0d;&#x5199;&#xff0c;&#x8981;&#x4e48;&#x5168;&#x90e8;&#x7528;index&#xff0c;&#x8981;&#x4e48;&#x5168;&#x90e8;&#x7528;&#x540d;&#x5b57;&#x53bb;&#x5339;&#x914d;&#x3002;&#x5343;&#x4e07;&#x522b;&#x4e09;&#x4e2a;&#x6df7;&#x7740;&#x7528;&#xff0c;&#x9664;&#x975e;&#x4f60;&#x975e;&#x5e38;&#x4e86;&#x89e3;&#x6e90;&#x4ee3;&#x7801;&#x4e2d;&#x4e09;&#x4e2a;&#x6df7;&#x7740;&#x7528;&#x600e;&#x4e48;&#x53bb;&#x6392;&#x5e8f;&#x7684;&#x3002",{"_index":214,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x6307;&#x5b9a;&#x6587;&#x4ef6",{"_index":1045,"title":{},"body":{"quickstart/write.html#重复多次写入":{}}}],["x6307;&#x5b9a;convert",{"_index":807,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["x641e;&#x9519;&#x4e86",{"_index":617,"title":{},"body":{"quickstart/fill.html#数据量大的复杂填充":{}}}],["x653e;&#x5165;&#x56db;&#x79cd;&#x7c7b;&#x578b;&#x7684;&#x56fe;&#x7247",{"_index":1066,"title":{},"body":{"quickstart/write.html#图片导出":{}}}],["x6570;&#x5b57",{"_index":1121,"title":{},"body":{"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{}}}],["x6570;&#x5b57;&#x6807;&#x9898",{"_index":1019,"title":{},"body":{"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#列宽、行高":{}}}],["x6570;&#x5b57;&#x8f6c;&#x6362;&#xff0c;&#x7528",{"_index":218,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x6570;&#x636e;&#x8f6c;&#x6362;&#x7b49;&#x5f02;&#x5e38;&#x5904;&#x7406",{"_index":829,"title":{"quickstart/read.html#数据转换等异常处理":{}},"body":{"quickstart/read.html#数据转换等异常处理":{}}}],["x6570;&#x636e;&#x91cf;&#x5927;&#x7684;&#x590d;&#x6742;&#x586b;&#x5145",{"_index":602,"title":{"quickstart/fill.html#数据量大的复杂填充":{}},"body":{"quickstart/fill.html#数据量大的复杂填充":{}}}],["x6587;&#x4ef6;&#x4e0a;&#x4f20",{"_index":139,"title":{},"body":{"index.html#EasyExcel":{},"quickstart/read.html#web中的读":{}}}],["x6587;&#x4ef6;&#x4e0b;&#x8f7d",{"_index":135,"title":{},"body":{"index.html#EasyExcel":{},"quickstart/write.html#web中的写":{}}}],["x6587;&#x4ef6;&#x5b58;&#x50a8;&#x65f6;&#xff0c;&#x5185;&#x5b58;&#x5b58;&#x653e;&#x591a;&#x5c11;m&#x7f13;&#x5b58;&#x6570;&#x636",{"_index":391,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x6587;&#x4ef6;&#x6d41;&#x4f1a;&#x81ea;&#x52a8;&#x5173;&#x95",{"_index":124,"title":{},"body":{"index.html#EasyExcel":{},"quickstart/read.html#最简单的读":{}}}],["x65b0;&#x5efa;&#x4e00;&#x4e2a",{"_index":622,"title":{},"body":{"quickstart/fill.html#数据量大的复杂填充":{}}}],["x65b9;&#x6848;1",{"_index":564,"title":{},"body":{"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{}}}],["x65b9;&#x6848;2",{"_index":568,"title":{},"body":{"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x4e0d;&#x77e5;&#x9053;&#x600e;&#x4e48;&#x5165;&#x53c2;&#x7684;&#x53ef;&#x4ee5;&#x81ea;&#x5df1;&#x7f51;&#x4e0a;&#x67e5;&#x8be2;&#x3002",{"_index":363,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x65b9;&#x6cd5;1",{"_index":1036,"title":{},"body":{"quickstart/write.html#重复多次写入":{}}}],["x65b9;&#x6cd5;2",{"_index":1042,"title":{},"body":{"quickstart/write.html#重复多次写入":{}}}],["x65b9;&#x6cd5;3",{"_index":1049,"title":{},"body":{"quickstart/write.html#重复多次写入":{}}}],["x65e5;&#x671f",{"_index":1122,"title":{},"body":{"quickstart/write.html#动态头，实时生成头写入":{}}}],["x65e5;&#x671f;&#x3001;&#x6570;&#x5b57;&#x6216;&#x8005;&#x81ea;&#x5b9a;&#x4e49;&#x683c;&#x5f0f;&#x8f6c;&#x6362",{"_index":785,"title":{"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#日期、数字或者自定义格式转换":{}},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#日期、数字或者自定义格式转换":{}}}],["x65e5;&#x671f;&#x6807;&#x9898",{"_index":765,"title":{},"body":{"quickstart/read.html#指定列的下标或者列名":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#列宽、行高":{}}}],["x65e5;&#x671f;&#x6807;&#x9898;&#x5f88;&#x957f;&#x65e5;&#x671f;&#x6807;&#x9898;&#x5f88;&#x957f;&#x65e5;&#x671f;&#x6807;&#x9898;&#x5f88;&#x957f;&#x5f88;&#x957f",{"_index":1124,"title":{},"body":{"quickstart/write.html#自动列宽-不太精确":{}}}],["x65e5;&#x671f;&#x8f6c;&#x6362;&#xff0c;&#x5c06",{"_index":252,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x65e5;&#x671f;&#x8f6c;&#x6362;&#xff0c;&#x7528",{"_index":216,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x662f;&#x5426;&#x5bfc;&#x51fa;&#x5934",{"_index":258,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x662f;false&#xff0c;&#x4f1a;&#x76f4;&#x63a5;&#x4f7f;&#x7528;&#x4e0b;&#x4e00;&#x884c;&#xff0c;&#x5982;&#x679c;&#x6ca1;&#x6709;&#x5219;&#x521b;&#x5efa;&#x3002",{"_index":590,"title":{},"body":{"quickstart/fill.html#复杂的填充":{}}}],["x6700;&#x540e;&#x4e00;&#x6b21;&#x8f93;&#x51fa;&#xff0c;&#x5927;&#x6982;&#x53ef;&#x4ee5;&#x5f97;&#x51fa;&#x503c;&#x4e3a;400w,&#x7136;&#x540e;&#x770b",{"_index":406,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x6700;&#x7b80;&#x5355;&#x7684;&#x5199",{"_index":126,"title":{"quickstart/write.html#最简单的写":{}},"body":{"index.html#EasyExcel":{},"quickstart/write.html#最简单的写":{}}}],["x6700;&#x7b80;&#x5355;&#x7684;&#x586b;&#x5145",{"_index":554,"title":{"quickstart/fill.html#最简单的填充":{}},"body":{"quickstart/fill.html#最简单的填充":{}}}],["x6700;&#x7b80;&#x5355;&#x7684;&#x8bfb",{"_index":117,"title":{"quickstart/read.html#最简单的读":{}},"body":{"index.html#EasyExcel":{},"quickstart/read.html#最简单的读":{}}}],["x6700;&#x7ec8;&#x6548;&#x679c",{"_index":555,"title":{},"body":{"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{}}}],["x6709;&#x4e2a;&#x5f88;&#x91cd;&#x8981;&#x7684;&#x70b9",{"_index":747,"title":{},"body":{"quickstart/read.html#最简单的读":{}}}],["x6709;&#x540c;&#x5b66;&#x53cd;&#x5e94;&#x4f7f;&#x7528;swagg",{"_index":1152,"title":{},"body":{"quickstart/write.html#web中的写":{}}}],["x6709;&#x7684;&#x8bdd;&#x53ef;&#x4ee5;&#x63a8;&#x8350;&#x4e0b;&#x3002",{"_index":1131,"title":{},"body":{"quickstart/write.html#自动列宽-不太精确":{}}}],["x6761;&#x6570;&#x636e;&#xff0c;&#x5f00;&#x59cb;&#x5b58;&#x50a8;&#x6570;&#x636e;&#x5e93;&#xff01",{"_index":754,"title":{},"body":{"quickstart/read.html#最简单的读":{}}}],["x6765;&#x8868;&#x793a;&#x4f60;&#x8981;&#x7528;&#x7684;&#x53d8;&#x91cf",{"_index":560,"title":{},"body":{"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{}}}],["x6765;&#x89e3;&#x6790;&#xff0c;&#x4ed6;&#x6ca1;&#x6709;&#x6307;&#x5b9a;&#x5934;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x9ed8;&#x8ba4;1&#x884c",{"_index":816,"title":{},"body":{"quickstart/read.html#多行头":{}}}],["x6781;&#x5927;&#x6982;&#x7387;&#x662f;jar&#x51b2;&#x7a81;&#xff0c;&#x5efa;&#x8ba",{"_index":349,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x6784;&#x5efa;&#x51fa;&#x4e00;&#x4e2a",{"_index":206,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x6838;&#x5fc3;&#x539f;&#x7406",{"_index":470,"title":{"support/about.html#核心原理":{}},"body":{}}],["x6839;&#x636e;&#x540d;&#x5b57;&#x53bb;&#x5339;&#x914d;sheet,excel",{"_index":245,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x6839;&#x636e;&#x5b9e;&#x9645;&#x9700;&#x6c42;&#x914d;&#x7f6e;&#x5185;&#x5b58",{"_index":375,"title":{},"body":{"quickstart/faq.html#不支持功能":{},"quickstart/faq.html#超大-10M以上-文件读取说明":{}}}],["x6839;&#x636e;&#x5bf9;&#x8c61;&#x586b;&#x5145",{"_index":565,"title":{},"body":{"quickstart/fill.html#最简单的填充":{}}}],["x6839;&#x636e;&#x6a21;&#x677f;&#x5199;&#x5165",{"_index":1068,"title":{"quickstart/write.html#根据模板写入":{}},"body":{"quickstart/write.html#根据模板写入":{}}}],["x6839;&#x636e;map&#x586b;&#x5145",{"_index":569,"title":{},"body":{"quickstart/fill.html#最简单的填充":{}}}],["x6a21;&#x677f",{"_index":133,"title":{},"body":{"index.html#EasyExcel":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["x6a21;&#x677f;&#x4e2d",{"_index":574,"title":{},"body":{"quickstart/fill.html#填充列表":{}}}],["x6a21;&#x677f;&#x6587;&#x4ef6",{"_index":266,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x6a21;&#x677f;&#x6ce8;&#x610f",{"_index":558,"title":{},"body":{"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{}}}],["x6a21;&#x677f;&#x7684;&#x6587;&#x4ef6;&#x6d41",{"_index":265,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x6a21;&#x677f;excel&#x793a;&#x4f8b",{"_index":1069,"title":{},"body":{"quickstart/write.html#根据模板写入":{}}}],["x6a2a;&#x5411;&#x7684;&#x586b;&#x5145",{"_index":624,"title":{"quickstart/fill.html#横向的填充":{}},"body":{"quickstart/fill.html#横向的填充":{}}}],["x6bcf;&#x6b21;&#x90fd;&#x8981;&#x521b;&#x5efa;writesheet",{"_index":1047,"title":{},"body":{"quickstart/write.html#重复多次写入":{}}}],["x6bcf;&#x9694;2&#x884c;&#x4f1a;&#x5408;&#x5e76",{"_index":1096,"title":{},"body":{"quickstart/write.html#合并单元格":{}}}],["x6bcf;&#x9694;5&#x6761;&#x5b58;&#x50a8;&#x6570;&#x636e;&#x5e93;&#xff0c;&#x5b9e;&#x9645;&#x4f7f;&#x7528;&#x4e2d;&#x53ef;&#x4ee5;3000&#x6761;&#xff0c;&#x7136;&#x540e;&#x6e05;&#x7406;list",{"_index":749,"title":{},"body":{"quickstart/read.html#最简单的读":{}}}],["x6bd4;&#x5982",{"_index":393,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x6ce8;&#x518c;&#x62e6;&#x622a;&#x5668",{"_index":1149,"title":{},"body":{"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["x6ce8;&#x518c;&#x7b56;&#x7565",{"_index":1132,"title":{},"body":{"quickstart/write.html#自动列宽-不太精确":{}}}],["x6ce8;&#x89e3",{"_index":213,"title":{},"body":{"quickstart/api.html#关于常见类解析":{},"quickstart/api.html#读":{},"quickstart/api.html#写":{}}}],["x6ce8;&#x89e3;&#xff0c;&#x91cc;&#x9762;&#x7684;&#x53c2;&#x6570;&#x5c31;&#x662f;&#x8c03;&#x7528;&#x4e86;java&#x81ea;&#x5e26;&#x7684",{"_index":362,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x6d4b;&#x8bd5",{"_index":1156,"title":{},"body":{"quickstart/write.html#web中的写":{}}}],["x6d4b;&#x8bd5;&#x5f88;&#x957f;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x6d4b;&#x8bd5;&#x5f88;&#x957f;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x6d4b;&#x8bd5;&#x5f88;&#x957f;&#x7684;&#x5b57;&#x7b26;&#x4e32",{"_index":1133,"title":{},"body":{"quickstart/write.html#自动列宽-不太精确":{}}}],["x6d4b;&#x8bd5;1",{"_index":1140,"title":{},"body":{"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["x6d4b;&#x8bd5;2",{"_index":1141,"title":{},"body":{"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["x70b9;&#x4e2a;&#x2605;star&#x3002",{"_index":108,"title":{},"body":{"index.html#EasyExcel":{}}}],["x7136;&#x540e;&#x4e00;&#x70b9;&#x70b9;&#x590d;&#x5236;&#x8fc7;&#x6765;&#x7684;&#x65b9;&#x6848;&#xff0c;&#x6700;&#x540e;&#x5bfc;&#x81f4;list&#x9700;&#x8981;&#x65b0;&#x589e;&#x884c;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x540e;&#x9762;&#x7684;&#x5217;&#x7684;&#x6570;&#x636e;&#x6ca1;&#x6cd5;&#x540e;&#x79fb;&#xff0c;&#x540e;&#x7eed;&#x4f1a;&#x7ee7;&#x7eed;&#x60f3;&#x60f3;&#x89e3;&#x51b3;&#x65b9;&#x6848",{"_index":623,"title":{},"body":{"quickstart/fill.html#数据量大的复杂填充":{}}}],["x7136;&#x540e;&#x5199;&#x5165;table&#x5373;&#x53ef",{"_index":1101,"title":{},"body":{"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{}}}],["x7136;&#x540e;&#x6587;&#x4ef6;&#x6d41;&#x4f1a;&#x81ea;&#x52a8;&#x5173;&#x95",{"_index":129,"title":{},"body":{"index.html#EasyExcel":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["x7279;&#x6b8a;&#x5b57;&#x7b26",{"_index":562,"title":{},"body":{"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{}}}],["x7528",{"_index":559,"title":{},"body":{"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{}}}],["x7528;&#x540d;&#x5b57;&#x53bb;&#x5339;&#x914d;&#xff0c;&#x8fd9;&#x91cc;&#x9700;&#x8981;&#x6ce8;&#x610f;&#xff0c;&#x5982;&#x679c;&#x540d;&#x5b57;&#x91cd;&#x590d;&#xff0c;&#x4f1a;&#x5bfc;&#x81f4;&#x53ea;&#x6709;&#x4e00;&#x4e2a;&#x5b57;&#x6bb5;&#x8bfb;&#x53d6;&#x5230;&#x6570;&#x636",{"_index":763,"title":{},"body":{"quickstart/read.html#指定列的下标或者列名":{}}}],["x7528;&#x5e74;&#x6708;&#x65e5;&#x7684;&#x683c;&#x5f0f",{"_index":1058,"title":{},"body":{"quickstart/write.html#日期、数字或者自定义格式转换":{}}}],["x7528;&#x65e5;&#x671f;&#x53bb;&#x63a5;&#x5b57;&#x7b26;&#x4e32",{"_index":830,"title":{},"body":{"quickstart/read.html#数据转换等异常处理":{}}}],["x7528;&#x767e;&#x5206;&#x6bd4;&#x8868;&#x793a",{"_index":1059,"title":{},"body":{"quickstart/write.html#日期、数字或者自定义格式转换":{}}}],["x7528;\\{,\\}&#x4ee3;&#x66ff",{"_index":563,"title":{},"body":{"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{}}}],["x7531;&#x4e8e;&#x6211;&#x4eec;&#x7684;&#x7cfb;&#x7edf;&#x5927;&#x591a;&#x6570;&#x90fd;&#x662f;&#x5927;&#x5e76;&#x53d1;&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#x8fd0;&#x884c;&#x7684;&#xff0c;&#x5728;&#x5927;&#x5e76;&#x53d1;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x6211;&#x4eec;&#x4f1a;&#x53d1;&#x73b0;poi&#x5b58;&#x5728;&#x4e00;&#x4e9b;bug,&#x5982;&#x679c;&#x8ba9;poi&#x56e2;&#x961f;&#x4fee;&#x590d;&#x4f30;&#x8ba1;&#x9065;&#x9065;&#x65e0;&#x671f;&#x4e86;&#x3002;&#x6240;&#x4ee5;&#x6211;&#x4eec;&#x5728;easyexcel&#x5bf9;&#x8fd9;&#x4e9b;bug&#x505a;&#x4e86;&#x89c4;&#x907f;&#x3002",{"_index":455,"title":{},"body":{"support/about.html#其他开源框架存在一些BUG修复不及时":{}}}],["x7531;&#x4e8e;&#x9ed8;&#x8ba4;&#x5f02;&#x6b65;&#x8bfb;&#x53d6;excel&#xff0c;&#x6240;&#x4ee5;&#x9700;&#x8981;&#x521b;&#x5efa;excel&#x4e00;&#x884c;&#x4e00;&#x884c;&#x7684;&#x56de;&#x8c03;&#x76d1;&#x542c;&#x5668;&#xff0c;&#x53c2;&#x7167",{"_index":120,"title":{},"body":{"index.html#EasyExcel":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{}}}],["x7684;&#x65f6;&#x5019;&#x8fd8;&#x8981;&#x6ce8;&#x610f",{"_index":573,"title":{},"body":{"quickstart/fill.html#填充列表":{}}}],["x7684;&#x6982;&#x5ff5;&#xff0c;&#x8fd9;&#x4e2a;&#x4f1a;&#x975e;&#x5e38;&#x5360;&#x7528;&#x5185;&#x5b58;&#xff0c;&#x5982;&#x679c;&#x5168;&#x90e8;&#x8bfb;&#x53d6;&#x5230;&#x5185;&#x5b58;&#x7684;&#x8bdd;&#xff0c;&#x5927;&#x6982;&#x662f;excel&#x6587;&#x4ef6;&#x7684;&#x5927;&#x5c0f;&#x7684;3",{"_index":368,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x7684;&#x6ce8;&#x89e3;&#x7684;&#x90fd;&#x4f1a;&#x53c2;&#x4e0e;&#x8bfb;&#x5199;&#xff0c;&#x52a0;&#x4e86;&#x4e0d;&#x4f1a;&#x53c2;&#x4e0",{"_index":221,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x7684;&#x7248;&#x672c;&#xff0c;&#x7406;&#x8bba;&#x4e0a;&#x6765;&#x8bf4",{"_index":351,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x76d1;&#x542c;&#x5668",{"_index":746,"title":{},"body":{"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{}}}],["x76d1;&#x542c;&#x5668;&#xff0c;&#x5728;&#x8bfb;&#x53d6;&#x6570;&#x636e;&#x7684;&#x8fc7;&#x7a0b;&#x4e2d;&#x4f1a;&#x4e0d;&#x65ad;&#x7684;&#x8c03;&#x7528;&#x76d1;&#x542c;&#x5668;&#x3002",{"_index":225,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x76f4;&#x63a5;&#x5199;&#x5165;&#x6570;&#x636",{"_index":607,"title":{},"body":{"quickstart/fill.html#数据量大的复杂填充":{}}}],["x76f4;&#x63a5;&#x5199;&#x5373;&#x53ef",{"_index":127,"title":{},"body":{"index.html#EasyExcel":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["x76f4;&#x63a5;&#x5199;&#xff0c;&#x8fd9;&#x91cc;&#x6ce8;&#x610f;&#xff0c;finish&#x7684;&#x65f6;&#x5019;&#x4f1a;&#x81ea;&#x52a8;&#x5173;&#x95ed;outputstream,&#x5f53;&#x7136;&#x4f60;&#x5916;&#x9762;&#x518d;&#x5173;&#x95ed;&#x6d41;&#x95ee;&#x9898;&#x4e0d;&#x5927",{"_index":138,"title":{},"body":{"index.html#EasyExcel":{},"quickstart/write.html#web中的写":{}}}],["x76f4;&#x63a5;&#x8bfb;&#x5373;&#x53ef",{"_index":121,"title":{},"body":{"index.html#EasyExcel":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#指定列的下标或者列名":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/read.html#web中的读":{}}}],["x76f4;&#x63a5;&#x8c03;&#x7528;&#x4e8c;&#x6b21;&#x5199;&#x5165;&#x5373;&#x53ef",{"_index":1035,"title":{},"body":{"quickstart/write.html#重复多次写入":{}}}],["x786e;&#x4fdd;&#x6a21;&#x677f;list&#x4e3a;&#x6700;&#x540e;&#x4e00;&#x884c;&#xff0c;&#x7136;&#x540e;&#x518d;&#x62fc;&#x63a5;table.&#x8fd8;&#x6709;03&#x7248;&#x6ca1;&#x6551;&#xff0c;&#x53ea;&#x80fd;&#x521a;&#x6b63;&#x9762;&#x52a0;&#x5185;&#x5b58;&#x3002",{"_index":604,"title":{},"body":{"quickstart/fill.html#数据量大的复杂填充":{}}}],["x793a;&#x4f8b;&#x4ee3;&#x7801",{"_index":843,"title":{},"body":{"quickstart/read.html#web中的读":{},"quickstart/write.html#web中的写":{}}}],["x7b2c;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x7684;&#x610f;&#x601d;&#x662f",{"_index":385,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x7b2c;&#x4e00;&#x5217;&#x7b2c;&#x4e00;&#x884c;&#x548c;&#x7b2c;&#x4e8c;&#x884c;&#x7684;&#x6570;&#x636e;&#x3002;&#x7531;&#x4e8e;&#x7b2c;&#x4e00;&#x884c;&#x662f;&#x5934;&#xff0c;&#x6240;&#x4ee5;&#x7b2c;&#x4e00;&#x3001;&#x4e8c;&#x884c;&#x7684;&#x6570;&#x636e;&#x5b9e;&#x9645;&#x4e0a;&#x662f;&#x7b2c;&#x4e8c;&#x4e09;&#x884c",{"_index":1144,"title":{},"body":{"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["x7b2c;&#x4e00;&#x6b21;&#x5199;&#x5165;&#x4f1a;&#x521b;&#x5efa;&#x5934",{"_index":1111,"title":{},"body":{"quickstart/write.html#使用table去写入":{}}}],["x7b2c;&#x4e8c;&#x4e2a;&#x53c2;&#x6570",{"_index":390,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x7b2c;&#x4e8c;&#x6b21;&#x5199;&#x5982;&#x4e5f;&#x4f1a;&#x521b;&#x5efa;&#x5934;&#xff0c;&#x7136;&#x540e;&#x5728;&#x7b2c;&#x4e00;&#x6b21;&#x7684;&#x540e;&#x9762;&#x5199;&#x5165;&#x6570;&#x636",{"_index":1112,"title":{},"body":{"quickstart/write.html#使用table去写入":{}}}],["x7b2c;&#x56db;&#x5217",{"_index":613,"title":{},"body":{"quickstart/fill.html#数据量大的复杂填充":{}}}],["x7b2c;{}&#x4e2a;sheet&#x5199;&#x5165;&#x6210;&#x529f;&#x3002",{"_index":1142,"title":{},"body":{"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["x7b2c;{}&#x884c;&#xff0c;&#x7b2c;{}&#x5217;&#x5199;&#x5165;&#x5b8c;&#x6210;&#x3002",{"_index":1138,"title":{},"body":{"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["x7b2c;{}&#x884c;&#xff0c;&#x7b2c;{}&#x5217;&#x89e3;&#x6790;&#x5f02;&#x5e38",{"_index":841,"title":{},"body":{"quickstart/read.html#数据转换等异常处理":{}}}],["x7b80;&#x5355;&#x7684;&#x8bf4",{"_index":593,"title":{},"body":{"quickstart/fill.html#复杂的填充":{}}}],["x7edf;&#x8ba1;:1000",{"_index":614,"title":{},"body":{"quickstart/fill.html#数据量大的复杂填充":{}}}],["x7ee7;&#x7eed;&#x8bfb;&#x53d6;&#x4e0b;&#x4e00;&#x884c;&#x3002",{"_index":835,"title":{},"body":{"quickstart/read.html#数据转换等异常处理":{}}}],["x8054;&#x7cfb;&#x65b9;&#x5f0f",{"_index":109,"title":{},"body":{"index.html#EasyExcel":{}}}],["x80af;&#x5b9a;&#x62a5;&#x9519",{"_index":831,"title":{},"body":{"quickstart/read.html#数据转换等异常处理":{}}}],["x80cc;&#x666f;&#x7eff;&#x8272",{"_index":1088,"title":{},"body":{"quickstart/write.html#自定义样式":{}}}],["x80cc;&#x666f;&#x8bbe;&#x7f6e;&#x4e3a;&#x7ea2;&#x8272",{"_index":1082,"title":{},"body":{"quickstart/write.html#自定义样式":{}}}],["x80fd;&#x83b7;&#x53d6;&#x5230;&#x5177;&#x4f53;&#x884c;&#x53f7",{"_index":838,"title":{},"body":{"quickstart/read.html#数据转换等异常处理":{}}}],["x81ea;&#x52a8;&#x5173;&#x95ed;&#x6d41;&#x3002",{"_index":239,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x81ea;&#x52a8;&#x5217;&#x5bbd;(&#x4e0d;&#x592a;&#x7cbe;&#x786",{"_index":1123,"title":{"quickstart/write.html#自动列宽-不太精确":{}},"body":{"quickstart/write.html#自动列宽-不太精确":{}}}],["x81ea;&#x5b9a;&#x4e49;&#x62e6;&#x622a;&#x5668;&#x3002;&#x5bf9;&#x7b2c;&#x4e00;&#x884c;&#x7b2c;&#x4e00;&#x5217;&#x7684;&#x5934;&#x8d85;&#x94fe;&#x63a5;&#x5230;:https://github.com/alibaba/easyexcel",{"_index":1136,"title":{},"body":{"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["x81ea;&#x5b9a;&#x4e49;&#x62e6;&#x622a;&#x5668;&#xff08;&#x4e0a;&#x9762;&#x51e0;&#x70b9;&#x90fd;&#x4e0d;&#x7b26;&#x5408;&#x4f46;&#x662f;&#x8981;&#x5bf9;&#x5355;&#x5143;&#x683c;&#x8fdb;&#x884c;&#x64cd;&#x4f5c;&#x7684;&#x53c2;&#x7167;&#x8fd9;&#x4e2a;&#xff09",{"_index":1134,"title":{"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}},"body":{}}],["x81ea;&#x5b9a;&#x4e49;&#x62e6;&#x622a;&#x5668;.&#x5bf9;&#x7b2c;&#x4e00;&#x5217;&#x7b2c;&#x4e00;&#x884c;&#x548c;&#x7b2c;&#x4e8c;&#x884c;&#x7684;&#x6570;&#x636e;&#x65b0;&#x589e;&#x4e0b;&#x62c9;&#x6846;&#xff0c;&#x663e;&#x793a",{"_index":1139,"title":{},"body":{"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["x81ea;&#x5b9a;&#x4e49;&#x6837;&#x5f0f",{"_index":1078,"title":{"quickstart/write.html#自定义样式":{}},"body":{"quickstart/write.html#自定义样式":{}}}],["x81ea;&#x5b9a;&#x4e49;&#x8f6c;&#x6362;&#x5668",{"_index":794,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["x81ea;&#x5b9a;&#x4e49;&#xff1a",{"_index":796,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["x81ea;&#x5df1;&#x4f7f;&#x7528;&#x529f;&#x80fd;&#x5fc5;&#x987b;&#x4e0d;&#x540c;&#x7684;listen",{"_index":781,"title":{},"body":{"quickstart/read.html#读多个sheet":{}}}],["x81ea;&#x5e26",{"_index":1129,"title":{},"body":{"quickstart/write.html#自动列宽-不太精确":{}}}],["x83b7;&#x53d6;&#x5176;&#x4ed6;&#x5f02;&#x5e38;&#x4e0b;&#x4f1a;&#x8c03;&#x7528;&#x672c;&#x63a5;&#x53e3;&#x3002;&#x629b;&#x51fa;&#x5f02;&#x5e38;&#x5219;&#x505c;&#x6b62;&#x8bfb;&#x53d6;&#x3002;&#x5982;&#x679c;&#x8fd9;&#x91cc;&#x4e0d;&#x629b;&#x51fa;&#x5f02;&#x5e38;&#x5219",{"_index":834,"title":{},"body":{"quickstart/read.html#数据转换等异常处理":{}}}],["x867d;&#x7136;poi&#x662f;&#x76ee;&#x524d;&#x4f7f;&#x7528;&#x6700;&#x591a;&#x7684;&#x7528;&#x6765;&#x505a;excel&#x89e3;&#x6790;&#x7684;&#x6846;&#x67b6;&#xff0c;&#x4f46;&#x8fd9;&#x4e2a;&#x6846;&#x67b6;&#x5e76;&#x4e0d;&#x90a3;&#x4e48;&#x5b8c;&#x7f8e;&#x3002;&#x5927;&#x90e8;&#x5206;&#x4f7f;&#x7528;poi&#x90fd;&#x662f;&#x4f7f;&#x7528;&#x4ed6;&#x7684;usermodel&#x6a21;&#x5f0f;&#x3002;usermodel&#x7684;&#x597d;&#x5904;&#x662f;&#x4e0a;&#x624b;&#x5bb9;&#x6613;&#x4f7f;&#x7528;&#x7b80;&#x5355;&#xff0c;&#x968f;&#x4fbf;&#x62f7;&#x8d1d;&#x4e2a;&#x4ee3;&#x7801;&#x8dd1;&#x4e00;&#x4e0b;&#xff0c;&#x5269;&#x4e0b;&#x5c31;&#x662f;&#x5199;&#x4e1a;&#x52a1;&#x8f6c;&#x6362;&#x4e86;&#xff0c;&#x867d;&#x7136;&#x8f6c;&#x6362;&#x4e5f;&#x8981;&#x5199;&#x4e0a;&#x767e;&#x884c;&#x4ee3;&#x7801;&#xff0c;&#x76f8;&#x5bf9;&#x6bd4;&#x8f83;&#x597d;&#x7406;&#x89e3;&#x3002;&#x7136;&#x800c;usermodel&#x6a21;&#x5f0f;&#x6700;&#x5927;&#x7684;&#x95ee;&#x9898;&#x662f;&#x5728;&#x4e8e;&#x975e;&#x5e38;&#x5927;&#x7684;&#x5185;&#x5b58;&#x6d88;&#x8017;&#xff0c;&#x4e00;&#x4e2a;&#x51e0;&#x5146;&#x7684;&#x6587;&#x4ef6;&#x89e3;&#x6790;&#x8981;&#x7528;&#x6389;&#x4e0a;&#x767e;&#x5146;&#x7684;&#x5185;&#x5b58;&#x3002;&#x73b0;&#x5728;&#x5f88;&#x591a;&#x5e94;&#x7528;&#x91c7;&#x7528;&#x8fd9;&#x79cd;&#x6a21;&#x5f0f;&#xff0c;&#x4e4b;&#x6240;&#x4ee5;&#x8fd8;&#x6b63;&#x5e38;&#x5728;&#x8dd1;&#x4e00;&#x5b9a;&#x662f;&#x5e76;&#x53d1;&#x4e0d;&#x5927;&#xff0c;&#x5e76;&#x53d1;&#x4e0a;&#x6765;&#x540e;&#x4e00;&#x5b9a;&#x4f1a;oom&#x6216;&#x8005;&#x9891;&#x7e41;&#x7684;ful",{"_index":450,"title":{},"body":{"support/about.html#Excel读写时候内存溢出":{}}}],["x8868;&#x793a;&#x6240;&#x5728;&#x7684;&#x5217",{"_index":823,"title":{},"body":{"quickstart/read.html#同步的返回":{}}}],["x8868;&#x793a;list",{"_index":576,"title":{},"body":{"quickstart/fill.html#填充列表":{}}}],["x89e3;&#x6790;&#x5230;&#x4e00;&#x6761;&#x5934;&#x6570;&#x636",{"_index":828,"title":{},"body":{"quickstart/read.html#读取表头数据":{}}}],["x89e3;&#x6790;&#x5230;&#x4e00;&#x6761;&#x6570;&#x636",{"_index":751,"title":{},"body":{"quickstart/read.html#最简单的读":{}}}],["x89e3;&#x6790;&#x5931;&#x8d25;&#xff0c;&#x4f46;&#x662f;&#x7ee7;&#x7eed;&#x89e3;&#x6790;&#x4e0b;&#x4e00;&#x884c",{"_index":836,"title":{},"body":{"quickstart/read.html#数据转换等异常处理":{}}}],["x8bb0;&#x5f97;&#x5173;&#x95ed",{"_index":1065,"title":{},"body":{"quickstart/write.html#图片导出":{}}}],["x8bbe;&#x7f6e;&#x6210",{"_index":1098,"title":{},"body":{"quickstart/write.html#合并单元格":{}}}],["x8bbe;&#x7f6e;&#x8fd4;&#x56de;&#x7684",{"_index":136,"title":{},"body":{"index.html#EasyExcel":{},"quickstart/write.html#web中的写":{}}}],["x8bbe;&#x7f6e;headrownumber&#x53c2;&#x6570;&#xff0c;&#x7136;&#x540e;&#x8bfb;&#x3002",{"_index":810,"title":{},"body":{"quickstart/read.html#多行头":{}}}],["x8be6;&#x7ec6;&#x53c2;&#x6570;&#x4ecb;&#x7ecd",{"_index":203,"title":{"quickstart/api.html#详细参数介绍":{}},"body":{}}],["x8bfb",{"_index":212,"title":{"quickstart/api.html#读":{}},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x8bfb;&#x53d6;&#x5168;&#x90e8;sheet",{"_index":772,"title":{},"body":{"quickstart/read.html#读多个sheet":{}}}],["x8bfb;&#x53d6;&#x5230;&#x6570;&#x636e",{"_index":820,"title":{},"body":{"quickstart/read.html#同步的返回":{}}}],["x8bfb;&#x53d6;&#x56fe;&#x7247",{"_index":340,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x8bfb;&#x53d6;&#x6587;&#x4ef6;&#x52a1;&#x5fc5;&#x4f7f;&#x7528;2.0.3",{"_index":336,"title":{"quickstart/faq.html#读取文件务必使用2-0-3":{}},"body":{}}],["x8bfb;&#x53d6;&#x6a21;&#x677f",{"_index":1071,"title":{},"body":{"quickstart/write.html#根据模板写入":{}}}],["x8bfb;&#x53d6;&#x8868;&#x5934;&#x6570;&#x636e",{"_index":825,"title":{"quickstart/read.html#读取表头数据":{}},"body":{"quickstart/read.html#读取表头数据":{}}}],["x8bfb;&#x53d6;&#x90e8;&#x5206;sheet",{"_index":776,"title":{},"body":{"quickstart/read.html#读多个sheet":{}}}],["x8bfb;&#x53d6;sheet",{"_index":808,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["x8bfb;&#x591a;&#x4e2a;&#x6216;&#x8005;&#x5168;&#x90e8;sheet,&#x8fd9;&#x91cc;&#x6ce8;&#x610f;&#x4e00;&#x4e2a;sheet&#x4e0d;&#x80fd;&#x8bfb;&#x53d6;&#x591a;&#x6b21;&#xff0c;&#x591a;&#x6b21;&#x8bfb;&#x53d6;&#x9700;&#x8981;&#x91cd;&#x65b0;&#x8bfb;&#x53d6;&#x6587;&#x4ef6",{"_index":771,"title":{},"body":{"quickstart/read.html#读多个sheet":{}}}],["x8bfb;&#x591a;&#x4e2a;sheet",{"_index":770,"title":{"quickstart/read.html#读多个sheet":{}},"body":{}}],["x8bfb;&#x6709;&#x5927;&#x91cf;&#x6570;&#x636e;&#x7684;&#x6587;&#x4ef6;&#x65f6;&#xff0c;&#x4f7f;&#x7528;workbook&#x5904;&#x7406;&#x5c31;&#x4e0d;&#x884c;&#x4e86;&#xff0c;&#x56e0;&#x4e3a;poi&#x5bf9;&#x6587;&#x4ef6;&#x662f;&#x5148;&#x5c06;&#x6587;&#x4ef6;&#x4e2d;&#x7684;cell&#x8bfb;&#x5165;&#x5185;&#x5b58;&#xff0c;&#x751f;&#x6210;&#x4e00;&#x4e2a;&#x6811;&#x7684;&#x7ed3;&#x6784;&#xff08;&#x9488;&#x5bf9;excel&#x4e2d;&#x7684;&#x6bcf;&#x4e2a;sheet&#xff0c;&#x4f7f;&#x7528;treemap&#x5b58;&#x50a8;sheet&#x4e2d;&#x7684;&#x884c;&#xff09;&#x3002;&#x5982;&#x679c;&#x6570;&#x636e;&#x91cf;&#x6bd4;&#x8f83;&#x5927;&#xff0c;&#x5219;&#x540c;&#x6837;&#x4f1a;&#x4ea7;&#x751f;java.lang.outofmemoryerror",{"_index":472,"title":{},"body":{"support/about.html#核心原理":{}}}],["x8bfb;&#x7684;&#x65f6;&#x5019;&#x662f;&#x5426;&#x9700;&#x8981;&#x4f7f;&#x7528;&#x5bc6;&#x7801",{"_index":231,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x8bfb;excel",{"_index":115,"title":{},"body":{"index.html#EasyExcel":{}}}],["x8d85;&#x5927;(10m&#x4ee5;&#x4e0a;)&#x6587;&#x4ef6;&#x8bfb;&#x53d6;&#x8bf4;&#x660",{"_index":364,"title":{"quickstart/faq.html#超大-10M以上-文件读取说明":{}},"body":{"quickstart/faq.html#不支持功能":{}}}],["x8ddd;&#x79bb;&#x591a;&#x5c11;&#x884c;&#x540e;&#x5f00;&#x59cb;&#x3002;&#x4e5f;&#x5c31;&#x662f;&#x5f00;&#x5934;&#x7a7a;&#x51e0;&#x884c",{"_index":257,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x8f6c;&#x6362;&#x5668;&#xff0c;&#x4e0d;&#x7ba1;&#x6570;&#x636e;&#x5e93;&#x4f20;&#x8fc7;&#x6765;&#x4ec0;&#x4e48",{"_index":787,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["x8f6c;&#x6362;&#x5668;&#xff0c;&#x9ed8;&#x8ba4;&#x52a0;&#x8f7d;&#x4e86;&#x5f88;&#x591a;&#x8f6c;&#x6362;&#x5668;&#x3002;&#x4e5f;&#x53ef;&#x4ee5;&#x81ea;&#x5b9a;&#x4e49;&#x3002",{"_index":224,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x8fd4;&#x56de;&#x6bcf;&#x6761;&#x6570;&#x636e;&#x7684;&#x952e;&#x503c;&#x5bf9",{"_index":822,"title":{},"body":{"quickstart/read.html#同步的返回":{}}}],["x8fd9;&#x4e2a;&#x76ee;&#x524d;&#x4e0d;&#x662f;&#x5f88;&#x597d;&#x7528;&#xff0c;&#x6bd4;&#x5982;&#x6709;&#x6570;&#x5b57;&#x5c31;&#x4f1a;&#x5bfc;&#x81f4;&#x6362;&#x884c;&#x3002;&#x800c;&#x4e14;&#x957f;&#x5ea6;&#x4e5f;&#x4e0d;&#x662f;&#x521a;&#x597d;&#x548c;&#x5b9e;&#x9645;&#x957f;&#x5ea6;&#x4e00;&#x81f4;&#x3002",{"_index":1125,"title":{},"body":{"quickstart/write.html#自动列宽-不太精确":{}}}],["x8fd9;&#x4e2a;&#x7b56;&#x7565;&#x662f",{"_index":1090,"title":{},"body":{"quickstart/write.html#自定义样式":{}}}],["x8fd9;&#x4ee3;&#x8868;&#x5df2;&#x7ecf",{"_index":408,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x8fd9;&#x6837;&#x6548;&#x7387;&#x4f1a;&#x6bd4;&#x4e0a;&#x9762;&#x7684;&#x590d;&#x6742;&#x7684;&#x7b56;&#x7565;&#x9ad8;&#x5f88;&#x591a",{"_index":379,"title":{},"body":{"quickstart/faq.html#不支持功能":{},"quickstart/faq.html#超大-10M以上-文件读取说明":{}}}],["x8fd9;&#x6837;&#x770b;&#x8d77;&#x6765;&#x7b2c;&#x4e00;&#x4e2a;t",{"_index":1106,"title":{},"body":{"quickstart/write.html#使用table去写入":{}}}],["x8fd9;&#x91cc",{"_index":122,"title":{},"body":{"index.html#EasyExcel":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["x8fd9;&#x91cc;&#x4e0d;&#x5efa;&#x8ba",{"_index":761,"title":{},"body":{"quickstart/read.html#指定列的下标或者列名":{}}}],["x8fd9;&#x91cc;&#x4e0d;&#x5efa;&#x8bae;&#x4f7f;&#x7528;&#x8fd9;&#x4e2a;&#x53c2;&#x6570;&#x3002",{"_index":242,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x8fd9;&#x91cc;&#x4e3a;&#x4e86;&#x7b80;&#x5355",{"_index":777,"title":{},"body":{"quickstart/read.html#读多个sheet":{}}}],["x8fd9;&#x91cc;&#x4f1a;&#x4e00;&#x884c;&#x884c;&#x7684;&#x8fd4;&#x56de;&#x5934",{"_index":827,"title":{},"body":{"quickstart/read.html#读取表头数据":{}}}],["x8fd9;&#x91cc;&#x5077;&#x61d2;&#x76f4;&#x63a5;&#x7528;list",{"_index":611,"title":{},"body":{"quickstart/fill.html#数据量大的复杂填充":{}}}],["x8fd9;&#x91cc;&#x518d;&#x8bf4;&#x660e;&#x4e0b",{"_index":380,"title":{},"body":{"quickstart/faq.html#不支持功能":{},"quickstart/faq.html#超大-10M以上-文件读取说明":{}}}],["x8fd9;&#x91cc;&#x5343;&#x4e07;&#x522b;&#x5fd8;&#x8bb0;&#x5173;&#x95ed;&#xff0c;&#x8bfb;&#x7684;&#x65f6;&#x5019;&#x4f1a;&#x521b;&#x5efa;&#x4e34;&#x65f6;&#x6587;&#x4ef6;&#xff0c;&#x5230;&#x65f6;&#x78c1;&#x76d8;&#x4f1a;&#x5d29;&#x7684",{"_index":758,"title":{},"body":{"quickstart/read.html#最简单的读":{},"quickstart/read.html#读多个sheet":{}}}],["x8fd9;&#x91cc;&#x53ef;&#x4ee5;&#x53bb;&#x6570;&#x636e;&#x5e93;&#x67e5;&#x8be2;&#x6bcf;&#x4e00;&#x9875;&#x7684;&#x6570;&#x636",{"_index":1041,"title":{},"body":{"quickstart/write.html#重复多次写入":{}}}],["x8fd9;&#x91cc;&#x53ef;&#x4ee5;&#x5bf9;cell&#x8fdb;&#x884c;&#x4efb;&#x4f55;&#x64cd;&#x4f5c",{"_index":1137,"title":{},"body":{"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["x8fd9;&#x91cc;&#x53ef;&#x4ee5;&#x8bbe;&#x7f6e;1&#xff0c;&#x56e0;&#x4e3a;&#x5934;&#x5c31;&#x662f;&#x4e00;&#x884c;&#x3002;&#x5982;&#x679c;&#x591a;&#x884c;&#x5934;&#xff0c;&#x53ef;&#x4ee5;&#x8bbe;&#x7f6e;&#x5176;&#x4ed6;&#x503c;&#x3002;&#x4e0d;&#x4f20;&#x5165;&#x4e5f;&#x53ef;&#x4ee5;&#xff0c;&#x56e0;&#x4e3a;&#x9ed8;&#x8ba4;&#x4f1a;&#x6839;&#x636e;demodata",{"_index":815,"title":{},"body":{"quickstart/read.html#多行头":{}}}],["x8fd9;&#x91cc;&#x5fc5;&#x987b;&#x6307;&#x5b9a;&#x9700;&#x8981;&#x5934;&#xff0c;tabl",{"_index":1108,"title":{},"body":{"quickstart/write.html#使用table去写入":{}}}],["x8fd9;&#x91cc;&#x653e;&#x5165;&#x52a8;&#x6001;&#x5934",{"_index":1117,"title":{},"body":{"quickstart/write.html#动态头，实时生成头写入":{}}}],["x8fd9;&#x91cc;&#x662f;&#x5199;&#x7684;&#x65f6;&#x5019;&#x4f1a;&#x8c03;&#x7528",{"_index":797,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["x8fd9;&#x91cc;&#x662f;write",{"_index":615,"title":{},"body":{"quickstart/fill.html#数据量大的复杂填充":{}}}],["x8fd9;&#x91cc;&#x6a21;&#x677f",{"_index":605,"title":{},"body":{"quickstart/fill.html#数据量大的复杂填充":{}}}],["x8fd9;&#x91cc;&#x6ca1;&#x6709;&#x5199;&#x5168",{"_index":383,"title":{},"body":{"quickstart/faq.html#不支持功能":{},"quickstart/faq.html#超大-10M以上-文件读取说明":{}}}],["x8fd9;&#x91cc;&#x6ce8;&#x610f",{"_index":586,"title":{},"body":{"quickstart/fill.html#复杂的填充":{},"quickstart/read.html#读多个sheet":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#web中的写":{}}}],["x8fd9;&#x91cc;&#x6ce8;&#x610f;&#x5fc5;&#x987b;&#x6307;&#x5b9a;sheetno",{"_index":1048,"title":{},"body":{"quickstart/write.html#重复多次写入":{}}}],["x8fd9;&#x91cc;&#x6ce8;&#x610f;&#x5fc5;&#x987b;&#x6307;&#x5b9a;sheetno&#x3002;&#x8fd9;&#x91cc;&#x6ce8;&#x610f;demodata.class",{"_index":1051,"title":{},"body":{"quickstart/write.html#重复多次写入":{}}}],["x8fd9;&#x91cc;&#x7528;string",{"_index":789,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["x8fd9;&#x91cc;&#x7684;&#x89e3;&#x51b3;&#x65b9;&#x6848;&#x662f",{"_index":603,"title":{},"body":{"quickstart/fill.html#数据量大的复杂填充":{}}}],["x8fd9;&#x91cc;&#x76f4;&#x63a5;&#x5199;&#x591a;&#x4e2a;table&#x7684;&#x6848;&#x4f8b;&#x4e86;&#xff0c;&#x5982;&#x679c;&#x53ea;&#x6709;&#x4e00;&#x4e2a",{"_index":1102,"title":{},"body":{"quickstart/write.html#使用table去写入":{}}}],["x8fd9;&#x91cc;&#x8981;&#x6ce8;&#x610f;headrownumber&#x5982;&#x679c;&#x4e0d;&#x6307;&#x5b9a;&#xff0c",{"_index":811,"title":{},"body":{"quickstart/read.html#多行头":{}}}],["x8fd9;&#x91cc;&#x8bbe;&#x7f6e;3",{"_index":1027,"title":{},"body":{"quickstart/write.html#指定写入的列":{}}}],["x8fd9;&#x91cc;&#x8bfb;&#x7684;&#x65f6;&#x5019;&#x4f1a;&#x8c03;&#x7528",{"_index":795,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["x8fd9;&#x91cc;&#x9700;&#x8981;&#x6307;&#x5b9a",{"_index":1084,"title":{},"body":{"quickstart/write.html#自定义样式":{}}}],["x8fd9;&#x91cc;&#x9700;&#x8981;&#x6ce8;&#x610f",{"_index":773,"title":{},"body":{"quickstart/read.html#读多个sheet":{}}}],["x8fd9;&#x91cc;&#x9ed8;&#x8ba4;&#x8bfb;&#x53d6;&#x7b2c;&#x4e00;&#x4e2a;sheet",{"_index":769,"title":{},"body":{"quickstart/read.html#指定列的下标或者列名":{}}}],["x8fd9;&#x91cc;urlencoder.encode&#x53ef;&#x4ee5;&#x9632;&#x6b62;&#x4e2d;&#x6587;&#x4e71;&#x7801",{"_index":1154,"title":{},"body":{"quickstart/write.html#web中的写":{}}}],["x901a;&#x7528;&#x53c2;&#x6570",{"_index":222,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x90fd;&#x4f1a;&#x521b;&#x5efa;&#x4e00;&#x884c;&#xff0c;&#x7136;&#x540e;&#x4e0b;&#x9762;&#x7684;&#x6570;&#x636e;&#x5f80;&#x540e;&#x79fb;&#x52a8;&#x3002;&#x9ed8;&#x8ba4",{"_index":589,"title":{},"body":{"quickstart/fill.html#复杂的填充":{}}}],["x90fd;&#x4f1a;&#x6709;&#x7684;&#x53c2;&#x6570;&#xff0c;&#x5982;&#x679c;&#x4e3a;&#x7a7a;&#xff0c;&#x9ed8;&#x8ba4;&#x4f7f;&#x7528;&#x4e0a;&#x7ea7;&#x3002",{"_index":223,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x914d;&#x5408;invokeheadmap&#x4f7f;&#x7528",{"_index":840,"title":{},"body":{"quickstart/read.html#数据转换等异常处理":{}}}],["x91c7;&#x7528;&#x6587;&#x4ef6;&#x5b58;&#x50a8",{"_index":387,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x91c7;&#x7528;sax&#x6a21;&#x5f0f;&#x4e00;&#x884c;&#x4e00;&#x884c;&#x89e3;&#x6790;&#xff0c;&#x5e76;&#x5c06;&#x4e00;&#x884c;&#x7684;&#x89e3;&#x6790;&#x7ed3;&#x679c;&#x4ee5;&#x89c2;&#x5bdf;&#x8005;&#x7684;&#x6a21;&#x5f0f;&#x901a;&#x77e5;&#x5904;&#x7406;&#x3002",{"_index":479,"title":{},"body":{"support/about.html#核心原理":{}}}],["x91cc;&#x9762;&#x591a;&#x4e86;&#x4e00;&#x4e2a;&#x65b9;&#x6cd5;,&#x53ea;&#x8981;&#x91cd;&#x5199;invokeheadmap&#x65b9;&#x6cd5;&#x5373;&#x53ef",{"_index":826,"title":{},"body":{"quickstart/read.html#读取表头数据":{}}}],["x91cc;&#x9762;&#x591a;&#x4e86;&#x4e00;&#x4e2a;&#x65b9;&#x6cd5;,&#x53ea;&#x8981;&#x91cd;&#x5199;onexception&#x65b9;&#x6cd5;&#x5373;&#x53ef",{"_index":832,"title":{},"body":{"quickstart/read.html#数据转换等异常处理":{}}}],["x91cc;&#x9762;&#x9700;&#x8981;&#x4f7f;&#x7528;spring&#x7684",{"_index":355,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x91cd;&#x590d;&#x591a;&#x6b21;&#x5199;&#x5165",{"_index":1034,"title":{"quickstart/write.html#重复多次写入":{}},"body":{"quickstart/write.html#重复多次写入":{}}}],["x9489;&#x9489;&#x7fa4",{"_index":111,"title":{},"body":{"index.html#EasyExcel":{}}}],["x95ee;&#x9898;&#x5c31;&#x975e;&#x5e38;&#x5927;&#x4e86;&#xff0c;500&#x5230;1000",{"_index":410,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x9700;&#x8981;&#x4e9b;&#x7684;sheet&#x540d;&#x79f0;&#xff0c;&#x9ed8;&#x8ba4;&#x540c",{"_index":271,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x9700;&#x8981;&#x5199;&#x5165;&#x7684;&#x7f16;&#x7801;&#x3002;&#x9ed8;&#x8ba4;0",{"_index":270,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x9700;&#x8981;&#x6307;&#x5b9a;&#x5199;&#x7528;&#x54ea;&#x4e2a;class&#x53bb;&#x8bfb",{"_index":1023,"title":{},"body":{"quickstart/write.html#最简单的写":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#使用table去写入":{}}}],["x9700;&#x8981;&#x6307;&#x5b9a;&#x5199;&#x7528;&#x54ea;&#x4e2a;class&#x53bb;&#x8bfb;&#xff0c;&#x7136;&#x540e;&#x5199;&#x5230;&#x7b2c;&#x4e00;&#x4e2a;sheet&#xff0c;&#x540d;&#x5b57;&#x4e3a;&#x6a21;&#x677f",{"_index":128,"title":{},"body":{"index.html#EasyExcel":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}],["x9700;&#x8981;&#x6307;&#x5b9a;&#x8bfb;&#x7528;&#x54ea;&#x4e2a;class&#x53bb;&#x8bfb;&#xff0c;&#x7136;&#x540e;&#x8bfb;&#x53d6;&#x7b2c;&#x4e00;&#x4e2a;sheet",{"_index":123,"title":{},"body":{"index.html#EasyExcel":{},"quickstart/read.html#最简单的读":{},"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/read.html#多行头":{},"quickstart/read.html#同步的返回":{},"quickstart/read.html#读取表头数据":{},"quickstart/read.html#数据转换等异常处理":{}}}],["x9700;&#x8981;&#x8bfb;&#x53d6;sheet&#x7684;&#x7f16;&#x7801;&#xff0c;&#x5efa;&#x8bae;&#x4f7f;&#x7528;&#x8fd9;&#x4e2a;&#x6765;&#x6307;&#x5b9a;&#x8bfb;&#x53d6;&#x54ea;&#x4e2a;sheet",{"_index":244,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x9700;&#x8981;&#x8bfb;&#x7684;&#x8868;&#x683c;&#x6709;&#x51e0;&#x884c;&#x5934;&#x6570;&#x636e;&#x3002;&#x9ed8;&#x8ba4;&#x6709;&#x4e00;&#x884c;&#x5934;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8ba4;&#x4e3a;&#x7b2c;&#x4e8c;&#x884c;&#x5f00;&#x59cb;&#x8d77;&#x4e3a;&#x6570;&#x636e;&#x3002",{"_index":226,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x9879;&#x76ee;&#xff0c;&#x6216;&#x8005;&#x7edf;&#x4e00",{"_index":350,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x9ed8;&#x8ba4",{"_index":262,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x9ed8;&#x8ba4;&#x4e0d;&#x52a0",{"_index":220,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x9ed8;&#x8ba4;&#x4e5f;&#x662f;&#x4e0d;&#x9700;&#x8981",{"_index":1110,"title":{},"body":{"quickstart/write.html#使用table去写入":{}}}],["x9ed8;&#x8ba4;&#x4f1a;&#x81ea;&#x52a8;&#x5224;&#x65ad",{"_index":234,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x9ed8;&#x8ba4;&#x5927;&#x6587;&#x4ef6;&#x5904;&#x7406",{"_index":372,"title":{},"body":{"quickstart/faq.html#不支持功能":{},"quickstart/faq.html#超大-10M以上-文件读取说明":{}}}],["x9ed8;&#x8ba4;&#x5927;&#x6587;&#x4ef6;&#x5904;&#x7406;&#x4f1a;&#x81ea;&#x52a8;&#x5224;&#x65ad;&#xff0c;&#x5171;&#x4eab;&#x5b57;&#x7b26;&#x4e32;5m&#x4ee5;&#x4e0b;&#x4f1a;&#x4f7f;&#x7528;&#x5185;&#x5b58;&#x5b58;&#x50a8;&#xff0c;&#x5927;&#x6982;&#x5360;&#x7528;15",{"_index":373,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x9ed8;&#x8ba4;&#x5c0f;&#x4e8e;5m&#x7528",{"_index":240,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x9ed8;&#x8ba4;&#x6240;&#x6709;&#x5b57;&#x6bb5;&#x90fd;&#x4f1a;&#x5199;&#x5165;excel&#xff0c;&#x8fd9;&#x4e2a;&#x6ce8;&#x89e3;&#x4f1a;&#x5ffd;&#x7565;&#x8fd9;&#x4e2a;&#x5b57;&#x6bb5",{"_index":251,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x9ed8;&#x8ba4;&#x6240;&#x6709;&#x5b57;&#x6bb5;&#x90fd;&#x4f1a;&#x548c;excel&#x53bb;&#x5339;&#x914d;&#xff0c;&#x52a0;&#x4e86;&#x8fd9;&#x4e2a;&#x6ce8;&#x89e3;&#x4f1a;&#x5ffd;&#x7565;&#x8be5;&#x5b57;&#x6bb5",{"_index":215,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["x9ed8;&#x8ba4;&#x8bfb;&#x7684;&#x8f6c;&#x6362;&#x5668",{"_index":799,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{}}}],["x9ed8;&#x8ba4;20m",{"_index":392,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["x9ed8;&#x8ba4;5m",{"_index":389,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["xff0c",{"_index":348,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["xff0c;&#x5728;&#x5199;&#x5165;excel&#x7684;&#x4e0d;&#x540c;&#x9636;&#x6bb5;&#x4f1a;&#x8c03;&#x7528",{"_index":256,"title":{},"body":{"quickstart/api.html#关于常见类解析":{}}}],["xff0c;&#x5982;&#x679c;&#x4e0d;&#x9700;&#x8981;&#x7684;&#x8bdd;&#xff0c;&#x81ea;&#x5df1;&#x521b;&#x5efa;&#x5bf9;&#x8c61;&#x5e76;&#x751f;&#x6210",{"_index":345,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["xff0c;&#x65b9;&#x4fbf;&#x5185;&#x5b58;&#x56de;&#x6536",{"_index":750,"title":{},"body":{"quickstart/read.html#最简单的读":{}}}],["xff0c;&#x6bcf;&#x6b21;&#x8bfb;&#x53d6;&#x90fd;&#x8981",{"_index":358,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["xff0c;&#x7ed9",{"_index":356,"title":{},"body":{"quickstart/faq.html#不支持功能":{}}}],["xls&#x662f;microsoft",{"_index":464,"title":{},"body":{"support/about.html#Excel格式分析格式分析":{}}}],["xlsx",{"_index":52,"title":{},"body":{"index.html":{},"index.html#EasyExcel":{},"quickstart/api.html":{},"quickstart/api.html#关于常见类解析":{},"quickstart/fill.html":{},"quickstart/fill.html#最简单的填充":{},"quickstart/fill.html#填充列表":{},"quickstart/fill.html#复杂的填充":{},"quickstart/fill.html#数据量大的复杂填充":{},"quickstart/fill.html#横向的填充":{},"quickstart/write.html":{},"quickstart/write.html#最简单的写":{},"quickstart/write.html#指定写入的列":{},"quickstart/write.html#复杂头写入":{},"quickstart/write.html#重复多次写入":{},"quickstart/write.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#图片导出":{},"quickstart/write.html#根据模板写入":{},"quickstart/write.html#列宽、行高":{},"quickstart/write.html#自定义样式":{},"quickstart/write.html#合并单元格":{},"quickstart/write.html#使用table去写入":{},"quickstart/write.html#动态头，实时生成头写入":{},"quickstart/write.html#自动列宽-不太精确":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{},"quickstart/write.html#web中的写":{}}}],["xlsx&#x662f;microsoft",{"_index":467,"title":{},"body":{"support/about.html#Excel格式分析格式分析":{}}}],["xlsx文件时，poi为我们提供了sxssfworkbook类来处理，这个类的处理机制是当内存中的数据条数达到一个极限数量的时候就flush",{"_index":441,"title":{},"body":{"support/about.html":{}}}],["xlsx是microsoft",{"_index":439,"title":{},"body":{"support/about.html":{}}}],["xls是microsoft",{"_index":436,"title":{},"body":{"support/about.html":{}}}],["yyyy&#x5e74;mm&#x6708;dd&#x65e5;hh&#x65f6;mm&#x5206;ss&#x79d2",{"_index":791,"title":{},"body":{"quickstart/read.html#日期、数字或者自定义格式转换":{},"quickstart/write.html#日期、数字或者自定义格式转换":{}}}],["yyyy年mm月dd日hh时mm分ss",{"_index":677,"title":{},"body":{"quickstart/read.html":{},"quickstart/write.html":{}}}],["zhuang",{"_index":968,"title":{},"body":{"quickstart/write.html":{},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{}}}]],"pipeline":["stemmer"]},"store":{"index.html":{"title":"首页","path":"/index.html","body":"EasyExcel EasyExcel是一个基于Java的简单、省内存的读取Excel的开源项目。 github地址: https://github.com/alibaba/easyexcel 开源项目不容易，如果觉得本项目对您的工作还是有帮助的话，请在帮忙在 点个★Star。 联系方式 QQ群: 662022184 钉钉群: 21960511 64M内存1分钟内读取75M(46W行25列)的Excel 当然还有急速模式能更快，但是内存占用会在100M多一点 快速开始 读Excel DEMO代码地址： https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/demo/read/ReadTest.java 1 2 3 4 5 6 7 8 9 10 11 12 /** * 最简单的读 * p1. 创建excel对应的实体对象 参照 @link DemoData * p2. 由于默认异步读取excel，所以需要创建excel一行一行的回调监听器，参照 @link DemoDataListener * p3. 直接读即可 */ @Test public void simpleRead ()  String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\" ; // 这里 需要指定读用哪个class去读，然后读取第一个sheet 文件流会自动关闭 EasyExcel.read(fileName, DemoData.class, new DemoDataListener()).sheet().doRead();  写Excel DEMO代码地址： https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/write/WriteTest.java 1 2 3 4 5 6 7 8 9 10 11 12 /** * 最简单的写 * p1. 创建excel对应的实体对象 参照 @link com.alibaba.easyexcel.test.demo.write.DemoData * p2. 直接写即可 */ @Test public void simpleWrite ()  String fileName = TestFileUtil.getPath() + \"write\" + System.currentTimeMillis() + \".xlsx\" ; // 这里 需要指定写用哪个class去读，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 // 如果这里想使用03 则 传入excelType参数即可 EasyExcel.write(fileName, DemoData.class).sheet( \"模板\" ).doWrite(data());  web上传、下载 DEMO代码地址： https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/web/WebTest.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 /** * 文件下载 * p1. 创建excel对应的实体对象 参照 @link DownloadData * p2. 设置返回的 参数 * p3. 直接写，这里注意，finish的时候会自动关闭OutputStream,当然你外面再关闭流问题不大 */ @GetMapping ( \"download\" ) public void download (HttpServletResponse response) throws IOException  response.setContentType( \"application/vnd.ms-excel\" ); response.setCharacterEncoding( \"utf-8\" ); response.setHeader( \"Content-disposition\" , \"attachment;filename=demo.xlsx\" ); EasyExcel.write(response.getOutputStream(), DownloadData.class).sheet( \"模板\" ).doWrite(data());  /** * 文件上传 * p1. 创建excel对应的实体对象 参照 @link UploadData * p2. 由于默认异步读取excel，所以需要创建excel一行一行的回调监听器，参照 @link UploadDataListener * p3. 直接读即可 */ @PostMapping ( \"upload\" ) @ResponseBody public String upload (MultipartFile file) throws IOException  EasyExcel.read(file.getInputStream(), UploadData.class, new UploadDataListener()).sheet().doRead(); return \"success\" ; "},"index.html#EasyExcel":{"title":"EasyExcel","path":"/index.html#EasyExcel","body":"EasyExcel&#x662F;&#x4E00;&#x4E2A;&#x57FA;&#x4E8E;Java&#x7684;&#x7B80;&#x5355;&#x3001;&#x7701;&#x5185;&#x5B58;&#x7684;&#x8BFB;&#x53D6;Excel&#x7684;&#x5F00;&#x6E90;&#x9879;&#x76EE;&#x3002; github&#x5730;&#x5740;: https://github.com/alibaba/easyexcel &#x5F00;&#x6E90;&#x9879;&#x76EE;&#x4E0D;&#x5BB9;&#x6613;&#xFF0C;&#x5982;&#x679C;&#x89C9;&#x5F97;&#x672C;&#x9879;&#x76EE;&#x5BF9;&#x60A8;&#x7684;&#x5DE5;&#x4F5C;&#x8FD8;&#x662F;&#x6709;&#x5E2E;&#x52A9;&#x7684;&#x8BDD;&#xFF0C;&#x8BF7;&#x5728;&#x5E2E;&#x5FD9;&#x5728; &#x70B9;&#x4E2A;&#x2605;Star&#x3002; &#x8054;&#x7CFB;&#x65B9;&#x5F0F; QQ&#x7FA4;: 662022184 &#x9489;&#x9489;&#x7FA4;: 21960511 64M&#x5185;&#x5B58;1&#x5206;&#x949F;&#x5185;&#x8BFB;&#x53D6;75M(46W&#x884C;25&#x5217;)&#x7684;Excel &#x5F53;&#x7136;&#x8FD8;&#x6709;&#x6025;&#x901F;&#x6A21;&#x5F0F;&#x80FD;&#x66F4;&#x5FEB;&#xFF0C;&#x4F46;&#x662F;&#x5185;&#x5B58;&#x5360;&#x7528;&#x4F1A;&#x5728;100M&#x591A;&#x4E00;&#x70B9; &#x5FEB;&#x901F;&#x5F00;&#x59CB; &#x8BFB;Excel DEMO&#x4EE3;&#x7801;&#x5730;&#x5740;&#xFF1A; https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/demo/read/ReadTest.java 1 2 3 4 5 6 7 8 9 10 11 12 /** * &#x6700;&#x7B80;&#x5355;&#x7684;&#x8BFB; * p1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link DemoData} * p2. &#x7531;&#x4E8E;&#x9ED8;&#x8BA4;&#x5F02;&#x6B65;&#x8BFB;&#x53D6;excel&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x521B;&#x5EFA;excel&#x4E00;&#x884C;&#x4E00;&#x884C;&#x7684;&#x56DE;&#x8C03;&#x76D1;&#x542C;&#x5668;&#xFF0C;&#x53C2;&#x7167;{ @link DemoDataListener} * p3. &#x76F4;&#x63A5;&#x8BFB;&#x5373;&#x53EF; */ @Test public void simpleRead () { String fileName = TestFileUtil.getPath() + demo + File.separator + demo.xlsx ; // &#x8FD9;&#x91CC; &#x9700;&#x8981;&#x6307;&#x5B9A;&#x8BFB;&#x7528;&#x54EA;&#x4E2A;class&#x53BB;&#x8BFB;&#xFF0C;&#x7136;&#x540E;&#x8BFB;&#x53D6;&#x7B2C;&#x4E00;&#x4E2A;sheet &#x6587;&#x4EF6;&#x6D41;&#x4F1A;&#x81EA;&#x52A8;&#x5173;&#x95ED; EasyExcel.read(fileName, DemoData.class, new DemoDataListener()).sheet().doRead(); } &#x5199;Excel DEMO&#x4EE3;&#x7801;&#x5730;&#x5740;&#xFF1A; https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/write/WriteTest.java 1 2 3 4 5 6 7 8 9 10 11 12 /** * &#x6700;&#x7B80;&#x5355;&#x7684;&#x5199; * p1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link com.alibaba.easyexcel.test.demo.write.DemoData} * p2. &#x76F4;&#x63A5;&#x5199;&#x5373;&#x53EF; */ @Test public void simpleWrite () { String fileName = TestFileUtil.getPath() + write + System.currentTimeMillis() + .xlsx ; // &#x8FD9;&#x91CC; &#x9700;&#x8981;&#x6307;&#x5B9A;&#x5199;&#x7528;&#x54EA;&#x4E2A;class&#x53BB;&#x8BFB;&#xFF0C;&#x7136;&#x540E;&#x5199;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;sheet&#xFF0C;&#x540D;&#x5B57;&#x4E3A;&#x6A21;&#x677F; &#x7136;&#x540E;&#x6587;&#x4EF6;&#x6D41;&#x4F1A;&#x81EA;&#x52A8;&#x5173;&#x95ED; // &#x5982;&#x679C;&#x8FD9;&#x91CC;&#x60F3;&#x4F7F;&#x7528;03 &#x5219; &#x4F20;&#x5165;excelType&#x53C2;&#x6570;&#x5373;&#x53EF; EasyExcel.write(fileName, DemoData.class).sheet( &#x6A21;&#x677F; ).doWrite(data()); } web&#x4E0A;&#x4F20;&#x3001;&#x4E0B;&#x8F7D; DEMO&#x4EE3;&#x7801;&#x5730;&#x5740;&#xFF1A; https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/web/WebTest.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 /** * &#x6587;&#x4EF6;&#x4E0B;&#x8F7D; * p1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link DownloadData} * p2. &#x8BBE;&#x7F6E;&#x8FD4;&#x56DE;&#x7684; &#x53C2;&#x6570; * p3. &#x76F4;&#x63A5;&#x5199;&#xFF0C;&#x8FD9;&#x91CC;&#x6CE8;&#x610F;&#xFF0C;finish&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x81EA;&#x52A8;&#x5173;&#x95ED;OutputStream,&#x5F53;&#x7136;&#x4F60;&#x5916;&#x9762;&#x518D;&#x5173;&#x95ED;&#x6D41;&#x95EE;&#x9898;&#x4E0D;&#x5927; */ @GetMapping ( download ) public void download (HttpServletResponse response) throws IOException { response.setContentType( application/vnd.ms-excel ); response.setCharacterEncoding( utf-8 ); response.setHeader( Content-disposition , attachment;filename=demo.xlsx ); EasyExcel.write(response.getOutputStream(), DownloadData.class).sheet( &#x6A21;&#x677F; ).doWrite(data()); } /** * &#x6587;&#x4EF6;&#x4E0A;&#x4F20; * p1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link UploadData} * p2. &#x7531;&#x4E8E;&#x9ED8;&#x8BA4;&#x5F02;&#x6B65;&#x8BFB;&#x53D6;excel&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x521B;&#x5EFA;excel&#x4E00;&#x884C;&#x4E00;&#x884C;&#x7684;&#x56DE;&#x8C03;&#x76D1;&#x542C;&#x5668;&#xFF0C;&#x53C2;&#x7167;{ @link UploadDataListener} * p3. &#x76F4;&#x63A5;&#x8BFB;&#x5373;&#x53EF; */ @PostMapping ( upload ) @ResponseBody public String upload (MultipartFile file) throws IOException { EasyExcel.read(file.getInputStream(), UploadData.class, new UploadDataListener()).sheet().doRead(); return success ; }"},"quickstart/api.html":{"title":"API","path":"/quickstart/api.html","body":"详细参数介绍 关于常见类解析 EasyExcel 入口类，用于构建开始各种操作 ExcelReaderBuilder ExcelWriterBuilder 构建出一个 ReadWorkbook WriteWorkbook，可以理解成一个excel对象，一个excel只要构建一个 ExcelReaderSheetBuilder ExcelWriterSheetBuilder 构建出一个 ReadSheet WriteSheet对象，可以理解成excel里面的一页,每一页都要构建一个 ReadListener 在每一行读取完毕后都会调用ReadListener来处理数据 WriteHandler 在每一个操作包括创建单元格、创建表格等都会调用WriteHandler来处理数据 所有配置都是继承的，Workbook的配置会被Sheet继承，所以在用EasyExcel设置参数的时候，在EasyExcel…sheet()方法之前作用域是整个sheet,之后针对单个sheet 读 注解 ExcelProperty 指定当前字段对应excel中的那一列。可以根据名字或者Index去匹配。当然也可以不写，默认第一个字段就是index=0，以此类推。千万注意，要么全部不写，要么全部用index，要么全部用名字去匹配。千万别三个混着用，除非你非常了解源代码中三个混着用怎么去排序的。 ExcelIgnore 默认所有字段都会和excel去匹配，加了这个注解会忽略该字段 DateTimeFormat 日期转换，用 String 去接收excel日期格式的数据会调用这个注解。里面的 value 参照 java.text.SimpleDateFormat NumberFormat 数字转换，用 String 去接收excel数字格式的数据会调用这个注解。里面的 value 参照 java.text.DecimalFormat ExcelIgnoreUnannotated 默认不加 ExcelProperty 的注解的都会参与读写，加了不会参与 参数 通用参数 ReadWorkbook , ReadSheet 都会有的参数，如果为空，默认使用上级。 converter 转换器，默认加载了很多转换器。也可以自定义。 readListener 监听器，在读取数据的过程中会不断的调用监听器。 headRowNumber 需要读的表格有几行头数据。默认有一行头，也就是认为第二行开始起为数据。 head 与 clazz 二选一。读取文件头对应的列表，会根据列表匹配数据，建议使用class。 clazz 与 head 二选一。读取文件的头对应的class，也可以使用注解。如果两个都不指定，则会读取全部数据。 autoTrim 字符串、表头等数据自动trim password 读的时候是否需要使用密码 ReadWorkbook（理解成excel对象）参数 excelType 当前excel的类型 默认会自动判断 inputStream 与 file 二选一。读取文件的流，如果接收到的是流就只用，不用流建议使用 file 参数。因为使用了 inputStream easyexcel会帮忙创建临时文件，最终还是 file file 与 inputStream 二选一。读取文件的文件。 autoCloseStream 自动关闭流。 readCache 默认小于5M用 内存，超过5M会使用 EhCache ,这里不建议使用这个参数。 ReadSheet（就是excel的一个Sheet）参数 sheetNo 需要读取Sheet的编码，建议使用这个来指定读取哪个Sheet sheetName 根据名字去匹配Sheet,excel 2003不支持根据名字去匹配 写 注解 ExcelProperty index 指定写到第几列，默认根据成员变量排序。 value 指定写入的名称，默认成员变量的名字，多个 value 可以参照快速开始中的复杂头 ExcelIgnore 默认所有字段都会写入excel，这个注解会忽略这个字段 DateTimeFormat 日期转换，将 Date 写到excel会调用这个注解。里面的 value 参照 java.text.SimpleDateFormat NumberFormat 数字转换，用 Number 写excel会调用这个注解。里面的 value 参照 java.text.DecimalFormat ExcelIgnoreUnannotated 默认不加 ExcelProperty 的注解的都会参与读写，加了不会参与 参数 通用参数 WriteWorkbook , WriteSheet , WriteTable 都会有的参数，如果为空，默认使用上级。 converter 转换器，默认加载了很多转换器。也可以自定义。 writeHandler 写的处理器。可以实现 WorkbookWriteHandler , SheetWriteHandler , RowWriteHandler , CellWriteHandler ，在写入excel的不同阶段会调用 relativeHeadRowIndex 距离多少行后开始。也就是开头空几行 needHead 是否导出头 head 与 clazz 二选一。写入文件的头列表，建议使用class。 clazz 与 head 二选一。写入文件的头对应的class，也可以使用注解。 autoTrim 字符串、表头等数据自动trim WriteWorkbook（理解成excel对象）参数 excelType 当前excel的类型 默认 xlsx outputStream 与 file 二选一。写入文件的流 file 与 outputStream 二选一。写入的文件 templateInputStream 模板的文件流 templateFile 模板文件 autoCloseStream 自动关闭流。 password 写的时候是否需要使用密码 useDefaultStyle 写的时候是否是使用默认头 WriteSheet（就是excel的一个Sheet）参数 sheetNo 需要写入的编码。默认0 sheetName 需要些的Sheet名称，默认同 sheetNo WriteTable（就把excel的一个Sheet,一块区域看一个table）参数 tableNo 需要写入的编码。默认0"},"quickstart/api.html#详细参数介绍":{"title":"&#x8BE6;&#x7EC6;&#x53C2;&#x6570;&#x4ECB;&#x7ECD;","path":"/quickstart/api.html#详细参数介绍","body":""},"quickstart/api.html#关于常见类解析":{"title":"&#x5173;&#x4E8E;&#x5E38;&#x89C1;&#x7C7B;&#x89E3;&#x6790;","path":"/quickstart/api.html#关于常见类解析","body":"EasyExcel &#x5165;&#x53E3;&#x7C7B;&#xFF0C;&#x7528;&#x4E8E;&#x6784;&#x5EFA;&#x5F00;&#x59CB;&#x5404;&#x79CD;&#x64CD;&#x4F5C; ExcelReaderBuilder ExcelWriterBuilder &#x6784;&#x5EFA;&#x51FA;&#x4E00;&#x4E2A; ReadWorkbook WriteWorkbook&#xFF0C;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x6210;&#x4E00;&#x4E2A;excel&#x5BF9;&#x8C61;&#xFF0C;&#x4E00;&#x4E2A;excel&#x53EA;&#x8981;&#x6784;&#x5EFA;&#x4E00;&#x4E2A; ExcelReaderSheetBuilder ExcelWriterSheetBuilder &#x6784;&#x5EFA;&#x51FA;&#x4E00;&#x4E2A; ReadSheet WriteSheet&#x5BF9;&#x8C61;&#xFF0C;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x6210;excel&#x91CC;&#x9762;&#x7684;&#x4E00;&#x9875;,&#x6BCF;&#x4E00;&#x9875;&#x90FD;&#x8981;&#x6784;&#x5EFA;&#x4E00;&#x4E2A; ReadListener &#x5728;&#x6BCF;&#x4E00;&#x884C;&#x8BFB;&#x53D6;&#x5B8C;&#x6BD5;&#x540E;&#x90FD;&#x4F1A;&#x8C03;&#x7528;ReadListener&#x6765;&#x5904;&#x7406;&#x6570;&#x636E; WriteHandler &#x5728;&#x6BCF;&#x4E00;&#x4E2A;&#x64CD;&#x4F5C;&#x5305;&#x62EC;&#x521B;&#x5EFA;&#x5355;&#x5143;&#x683C;&#x3001;&#x521B;&#x5EFA;&#x8868;&#x683C;&#x7B49;&#x90FD;&#x4F1A;&#x8C03;&#x7528;WriteHandler&#x6765;&#x5904;&#x7406;&#x6570;&#x636E; &#x6240;&#x6709;&#x914D;&#x7F6E;&#x90FD;&#x662F;&#x7EE7;&#x627F;&#x7684;&#xFF0C;Workbook&#x7684;&#x914D;&#x7F6E;&#x4F1A;&#x88AB;Sheet&#x7EE7;&#x627F;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x7528;EasyExcel&#x8BBE;&#x7F6E;&#x53C2;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5728;EasyExcel&#x2026;sheet()&#x65B9;&#x6CD5;&#x4E4B;&#x524D;&#x4F5C;&#x7528;&#x57DF;&#x662F;&#x6574;&#x4E2A;sheet,&#x4E4B;&#x540E;&#x9488;&#x5BF9;&#x5355;&#x4E2A;sheet &#x8BFB; &#x6CE8;&#x89E3; ExcelProperty &#x6307;&#x5B9A;&#x5F53;&#x524D;&#x5B57;&#x6BB5;&#x5BF9;&#x5E94;excel&#x4E2D;&#x7684;&#x90A3;&#x4E00;&#x5217;&#x3002;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x540D;&#x5B57;&#x6216;&#x8005;Index&#x53BB;&#x5339;&#x914D;&#x3002;&#x5F53;&#x7136;&#x4E5F;&#x53EF;&#x4EE5;&#x4E0D;&#x5199;&#xFF0C;&#x9ED8;&#x8BA4;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x6BB5;&#x5C31;&#x662F;index=0&#xFF0C;&#x4EE5;&#x6B64;&#x7C7B;&#x63A8;&#x3002;&#x5343;&#x4E07;&#x6CE8;&#x610F;&#xFF0C;&#x8981;&#x4E48;&#x5168;&#x90E8;&#x4E0D;&#x5199;&#xFF0C;&#x8981;&#x4E48;&#x5168;&#x90E8;&#x7528;index&#xFF0C;&#x8981;&#x4E48;&#x5168;&#x90E8;&#x7528;&#x540D;&#x5B57;&#x53BB;&#x5339;&#x914D;&#x3002;&#x5343;&#x4E07;&#x522B;&#x4E09;&#x4E2A;&#x6DF7;&#x7740;&#x7528;&#xFF0C;&#x9664;&#x975E;&#x4F60;&#x975E;&#x5E38;&#x4E86;&#x89E3;&#x6E90;&#x4EE3;&#x7801;&#x4E2D;&#x4E09;&#x4E2A;&#x6DF7;&#x7740;&#x7528;&#x600E;&#x4E48;&#x53BB;&#x6392;&#x5E8F;&#x7684;&#x3002; ExcelIgnore &#x9ED8;&#x8BA4;&#x6240;&#x6709;&#x5B57;&#x6BB5;&#x90FD;&#x4F1A;&#x548C;excel&#x53BB;&#x5339;&#x914D;&#xFF0C;&#x52A0;&#x4E86;&#x8FD9;&#x4E2A;&#x6CE8;&#x89E3;&#x4F1A;&#x5FFD;&#x7565;&#x8BE5;&#x5B57;&#x6BB5; DateTimeFormat &#x65E5;&#x671F;&#x8F6C;&#x6362;&#xFF0C;&#x7528; String &#x53BB;&#x63A5;&#x6536;excel&#x65E5;&#x671F;&#x683C;&#x5F0F;&#x7684;&#x6570;&#x636E;&#x4F1A;&#x8C03;&#x7528;&#x8FD9;&#x4E2A;&#x6CE8;&#x89E3;&#x3002;&#x91CC;&#x9762;&#x7684; value &#x53C2;&#x7167; java.text.SimpleDateFormat NumberFormat &#x6570;&#x5B57;&#x8F6C;&#x6362;&#xFF0C;&#x7528; String &#x53BB;&#x63A5;&#x6536;excel&#x6570;&#x5B57;&#x683C;&#x5F0F;&#x7684;&#x6570;&#x636E;&#x4F1A;&#x8C03;&#x7528;&#x8FD9;&#x4E2A;&#x6CE8;&#x89E3;&#x3002;&#x91CC;&#x9762;&#x7684; value &#x53C2;&#x7167; java.text.DecimalFormat ExcelIgnoreUnannotated &#x9ED8;&#x8BA4;&#x4E0D;&#x52A0; ExcelProperty &#x7684;&#x6CE8;&#x89E3;&#x7684;&#x90FD;&#x4F1A;&#x53C2;&#x4E0E;&#x8BFB;&#x5199;&#xFF0C;&#x52A0;&#x4E86;&#x4E0D;&#x4F1A;&#x53C2;&#x4E0E; &#x53C2;&#x6570; &#x901A;&#x7528;&#x53C2;&#x6570; ReadWorkbook , ReadSheet &#x90FD;&#x4F1A;&#x6709;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x4E3A;&#x7A7A;&#xFF0C;&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;&#x4E0A;&#x7EA7;&#x3002; converter &#x8F6C;&#x6362;&#x5668;&#xFF0C;&#x9ED8;&#x8BA4;&#x52A0;&#x8F7D;&#x4E86;&#x5F88;&#x591A;&#x8F6C;&#x6362;&#x5668;&#x3002;&#x4E5F;&#x53EF;&#x4EE5;&#x81EA;&#x5B9A;&#x4E49;&#x3002; readListener &#x76D1;&#x542C;&#x5668;&#xFF0C;&#x5728;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x4F1A;&#x4E0D;&#x65AD;&#x7684;&#x8C03;&#x7528;&#x76D1;&#x542C;&#x5668;&#x3002; headRowNumber &#x9700;&#x8981;&#x8BFB;&#x7684;&#x8868;&#x683C;&#x6709;&#x51E0;&#x884C;&#x5934;&#x6570;&#x636E;&#x3002;&#x9ED8;&#x8BA4;&#x6709;&#x4E00;&#x884C;&#x5934;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BA4;&#x4E3A;&#x7B2C;&#x4E8C;&#x884C;&#x5F00;&#x59CB;&#x8D77;&#x4E3A;&#x6570;&#x636E;&#x3002; head &#x4E0E; clazz &#x4E8C;&#x9009;&#x4E00;&#x3002;&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x5934;&#x5BF9;&#x5E94;&#x7684;&#x5217;&#x8868;&#xFF0C;&#x4F1A;&#x6839;&#x636E;&#x5217;&#x8868;&#x5339;&#x914D;&#x6570;&#x636E;&#xFF0C;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;class&#x3002; clazz &#x4E0E; head &#x4E8C;&#x9009;&#x4E00;&#x3002;&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x7684;&#x5934;&#x5BF9;&#x5E94;&#x7684;class&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x6CE8;&#x89E3;&#x3002;&#x5982;&#x679C;&#x4E24;&#x4E2A;&#x90FD;&#x4E0D;&#x6307;&#x5B9A;&#xFF0C;&#x5219;&#x4F1A;&#x8BFB;&#x53D6;&#x5168;&#x90E8;&#x6570;&#x636E;&#x3002; autoTrim &#x5B57;&#x7B26;&#x4E32;&#x3001;&#x8868;&#x5934;&#x7B49;&#x6570;&#x636E;&#x81EA;&#x52A8;trim password &#x8BFB;&#x7684;&#x65F6;&#x5019;&#x662F;&#x5426;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x5BC6;&#x7801; ReadWorkbook&#xFF08;&#x7406;&#x89E3;&#x6210;excel&#x5BF9;&#x8C61;&#xFF09;&#x53C2;&#x6570; excelType &#x5F53;&#x524D;excel&#x7684;&#x7C7B;&#x578B; &#x9ED8;&#x8BA4;&#x4F1A;&#x81EA;&#x52A8;&#x5224;&#x65AD; inputStream &#x4E0E; file &#x4E8C;&#x9009;&#x4E00;&#x3002;&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x7684;&#x6D41;&#xFF0C;&#x5982;&#x679C;&#x63A5;&#x6536;&#x5230;&#x7684;&#x662F;&#x6D41;&#x5C31;&#x53EA;&#x7528;&#xFF0C;&#x4E0D;&#x7528;&#x6D41;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528; file &#x53C2;&#x6570;&#x3002;&#x56E0;&#x4E3A;&#x4F7F;&#x7528;&#x4E86; inputStream easyexcel&#x4F1A;&#x5E2E;&#x5FD9;&#x521B;&#x5EFA;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#xFF0C;&#x6700;&#x7EC8;&#x8FD8;&#x662F; file file &#x4E0E; inputStream &#x4E8C;&#x9009;&#x4E00;&#x3002;&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x7684;&#x6587;&#x4EF6;&#x3002; autoCloseStream &#x81EA;&#x52A8;&#x5173;&#x95ED;&#x6D41;&#x3002; readCache &#x9ED8;&#x8BA4;&#x5C0F;&#x4E8E;5M&#x7528; &#x5185;&#x5B58;&#xFF0C;&#x8D85;&#x8FC7;5M&#x4F1A;&#x4F7F;&#x7528; EhCache ,&#x8FD9;&#x91CC;&#x4E0D;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x3002; ReadSheet&#xFF08;&#x5C31;&#x662F;excel&#x7684;&#x4E00;&#x4E2A;Sheet&#xFF09;&#x53C2;&#x6570; sheetNo &#x9700;&#x8981;&#x8BFB;&#x53D6;Sheet&#x7684;&#x7F16;&#x7801;&#xFF0C;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x6765;&#x6307;&#x5B9A;&#x8BFB;&#x53D6;&#x54EA;&#x4E2A;Sheet sheetName &#x6839;&#x636E;&#x540D;&#x5B57;&#x53BB;&#x5339;&#x914D;Sheet,excel 2003&#x4E0D;&#x652F;&#x6301;&#x6839;&#x636E;&#x540D;&#x5B57;&#x53BB;&#x5339;&#x914D; &#x5199; &#x6CE8;&#x89E3; ExcelProperty index &#x6307;&#x5B9A;&#x5199;&#x5230;&#x7B2C;&#x51E0;&#x5217;&#xFF0C;&#x9ED8;&#x8BA4;&#x6839;&#x636E;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x6392;&#x5E8F;&#x3002; value &#x6307;&#x5B9A;&#x5199;&#x5165;&#x7684;&#x540D;&#x79F0;&#xFF0C;&#x9ED8;&#x8BA4;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x7684;&#x540D;&#x5B57;&#xFF0C;&#x591A;&#x4E2A; value &#x53EF;&#x4EE5;&#x53C2;&#x7167;&#x5FEB;&#x901F;&#x5F00;&#x59CB;&#x4E2D;&#x7684;&#x590D;&#x6742;&#x5934; ExcelIgnore &#x9ED8;&#x8BA4;&#x6240;&#x6709;&#x5B57;&#x6BB5;&#x90FD;&#x4F1A;&#x5199;&#x5165;excel&#xFF0C;&#x8FD9;&#x4E2A;&#x6CE8;&#x89E3;&#x4F1A;&#x5FFD;&#x7565;&#x8FD9;&#x4E2A;&#x5B57;&#x6BB5; DateTimeFormat &#x65E5;&#x671F;&#x8F6C;&#x6362;&#xFF0C;&#x5C06; Date &#x5199;&#x5230;excel&#x4F1A;&#x8C03;&#x7528;&#x8FD9;&#x4E2A;&#x6CE8;&#x89E3;&#x3002;&#x91CC;&#x9762;&#x7684; value &#x53C2;&#x7167; java.text.SimpleDateFormat NumberFormat &#x6570;&#x5B57;&#x8F6C;&#x6362;&#xFF0C;&#x7528; Number &#x5199;excel&#x4F1A;&#x8C03;&#x7528;&#x8FD9;&#x4E2A;&#x6CE8;&#x89E3;&#x3002;&#x91CC;&#x9762;&#x7684; value &#x53C2;&#x7167; java.text.DecimalFormat ExcelIgnoreUnannotated &#x9ED8;&#x8BA4;&#x4E0D;&#x52A0; ExcelProperty &#x7684;&#x6CE8;&#x89E3;&#x7684;&#x90FD;&#x4F1A;&#x53C2;&#x4E0E;&#x8BFB;&#x5199;&#xFF0C;&#x52A0;&#x4E86;&#x4E0D;&#x4F1A;&#x53C2;&#x4E0E; &#x53C2;&#x6570; &#x901A;&#x7528;&#x53C2;&#x6570; WriteWorkbook , WriteSheet , WriteTable &#x90FD;&#x4F1A;&#x6709;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x4E3A;&#x7A7A;&#xFF0C;&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;&#x4E0A;&#x7EA7;&#x3002; converter &#x8F6C;&#x6362;&#x5668;&#xFF0C;&#x9ED8;&#x8BA4;&#x52A0;&#x8F7D;&#x4E86;&#x5F88;&#x591A;&#x8F6C;&#x6362;&#x5668;&#x3002;&#x4E5F;&#x53EF;&#x4EE5;&#x81EA;&#x5B9A;&#x4E49;&#x3002; writeHandler &#x5199;&#x7684;&#x5904;&#x7406;&#x5668;&#x3002;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0; WorkbookWriteHandler , SheetWriteHandler , RowWriteHandler , CellWriteHandler &#xFF0C;&#x5728;&#x5199;&#x5165;excel&#x7684;&#x4E0D;&#x540C;&#x9636;&#x6BB5;&#x4F1A;&#x8C03;&#x7528; relativeHeadRowIndex &#x8DDD;&#x79BB;&#x591A;&#x5C11;&#x884C;&#x540E;&#x5F00;&#x59CB;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x5F00;&#x5934;&#x7A7A;&#x51E0;&#x884C; needHead &#x662F;&#x5426;&#x5BFC;&#x51FA;&#x5934; head &#x4E0E; clazz &#x4E8C;&#x9009;&#x4E00;&#x3002;&#x5199;&#x5165;&#x6587;&#x4EF6;&#x7684;&#x5934;&#x5217;&#x8868;&#xFF0C;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;class&#x3002; clazz &#x4E0E; head &#x4E8C;&#x9009;&#x4E00;&#x3002;&#x5199;&#x5165;&#x6587;&#x4EF6;&#x7684;&#x5934;&#x5BF9;&#x5E94;&#x7684;class&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x6CE8;&#x89E3;&#x3002; autoTrim &#x5B57;&#x7B26;&#x4E32;&#x3001;&#x8868;&#x5934;&#x7B49;&#x6570;&#x636E;&#x81EA;&#x52A8;trim WriteWorkbook&#xFF08;&#x7406;&#x89E3;&#x6210;excel&#x5BF9;&#x8C61;&#xFF09;&#x53C2;&#x6570; excelType &#x5F53;&#x524D;excel&#x7684;&#x7C7B;&#x578B; &#x9ED8;&#x8BA4; xlsx outputStream &#x4E0E; file &#x4E8C;&#x9009;&#x4E00;&#x3002;&#x5199;&#x5165;&#x6587;&#x4EF6;&#x7684;&#x6D41; file &#x4E0E; outputStream &#x4E8C;&#x9009;&#x4E00;&#x3002;&#x5199;&#x5165;&#x7684;&#x6587;&#x4EF6; templateInputStream &#x6A21;&#x677F;&#x7684;&#x6587;&#x4EF6;&#x6D41; templateFile &#x6A21;&#x677F;&#x6587;&#x4EF6; autoCloseStream &#x81EA;&#x52A8;&#x5173;&#x95ED;&#x6D41;&#x3002; password &#x5199;&#x7684;&#x65F6;&#x5019;&#x662F;&#x5426;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x5BC6;&#x7801; useDefaultStyle &#x5199;&#x7684;&#x65F6;&#x5019;&#x662F;&#x5426;&#x662F;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x5934; WriteSheet&#xFF08;&#x5C31;&#x662F;excel&#x7684;&#x4E00;&#x4E2A;Sheet&#xFF09;&#x53C2;&#x6570; sheetNo &#x9700;&#x8981;&#x5199;&#x5165;&#x7684;&#x7F16;&#x7801;&#x3002;&#x9ED8;&#x8BA4;0 sheetName &#x9700;&#x8981;&#x4E9B;&#x7684;Sheet&#x540D;&#x79F0;&#xFF0C;&#x9ED8;&#x8BA4;&#x540C; sheetNo WriteTable&#xFF08;&#x5C31;&#x628A;excel&#x7684;&#x4E00;&#x4E2A;Sheet,&#x4E00;&#x5757;&#x533A;&#x57DF;&#x770B;&#x4E00;&#x4E2A;table&#xFF09;&#x53C2;&#x6570; tableNo &#x9700;&#x8981;&#x5199;&#x5165;&#x7684;&#x7F16;&#x7801;&#x3002;&#x9ED8;&#x8BA4;0"},"quickstart/api.html#读":{"title":"&#x8BFB;","path":"/quickstart/api.html#读","body":"&#x6CE8;&#x89E3;"},"quickstart/api.html#写":{"title":"&#x5199;","path":"/quickstart/api.html#写","body":"&#x6CE8;&#x89E3;"},"quickstart/faq.html":{"title":"FAQ","path":"/quickstart/faq.html","body":"常见问题 读取文件务必使用2.0.3+ 2.0.0-beta1到2.0.2有小概率会丢失数字。 不支持功能 单个文件的并发写入、读取 读取图片 宏 csv读取（这个后续可能会考虑） 常见问题 关于@Data，读写的对象都用到了 Lombok ,他会自动生成 get , set ，如果不需要的话，自己创建对象并生成 get , set 。 出现 NoSuchMethodException ， ClassNotFoundException , NoClassDefFoundError 极大概率是jar冲突，建议 clean 项目，或者统一 poi 的版本，理论上来说 easyexcel 兼容poi的 3.17 , 4.0.1 , 4.1.0 所有较新版本 如果在读的时候 Listener 里面需要使用spring的 @Autowired ，给 Listener 创建成员变量，然后在构造方法里面传进去。而别必须不让spring管理 Listener ，每次读取都要 new 一个。 如果用 String 去接收数字，出现小数点等情况，这个是BUG，但是很难修复，后续版本会修复这个问题。目前请使用 @NumberFormat 注解，里面的参数就是调用了java自带的 NumberFormat.format 方法，不知道怎么入参的可以自己网上查询。 超大(10M以上)文件读取说明 03版没有办法处理，相对内存占用大很多。excel 07版本有个共享字符串 共享字符串 的概念，这个会非常占用内存，如果全部读取到内存的话，大概是excel文件的大小的3-10倍，所以easyexcel用存储文件的，然后再反序列化去读取的策略来节约内存。当然需要通过文件反序列化以后，效率会降低，大概降低30-50%（不一定，也看命中率，可能会超过100%） 如果对读取效率感觉还能接受，就用默认的，永久占用（单个excel读取整个过程）一般不会超过50M(大概率就30M)，剩下临时的GC会很快回收 默认大文件处理 默认大文件处理会自动判断，共享字符串5M以下会使用内存存储，大概占用15-50M的内存,超过5M则使用文件存储，然后文件存储也要设置多内存M用来存放临时的共享字符串，默认20M。除了共享字符串占用内存外，其他占用较少，所以可以预估10M，所以默认大概30M就能读取一个超级大的文件。 根据实际需求配置内存 想自定义设置，首先要确定你大概愿意花多少内存来读取一个超级大的excel,比如希望读取excel最多占用100M内存（是读取过程中永久占用，新生代马上回收的不算），那就设置使用文件来存储共享字符串的大小判断为20M(小于20M存内存，大于存临时文件)，然后设置文件存储时临时共享字符串占用内存大小90M差不多 如果最大文件条数也就十几二十万，然后excel也就是十几二十M，而且不会有很高的并发，并且内存也较大 1 2 3 4 // 强制使用内存存储，这样大概一个20M的excel使用150M（很多临时对象，所以100M会一直GC）的内存 // 这样效率会比上面的复杂的策略高很多 // 这里再说明下 就是加了个readCache(new MapCache()) 参数而已，其他的参照其他demo写 这里没有写全 EasyExcel.read().readCache( new MapCache()); 对并发要求较高，而且都是经常有超级大文件 1 2 3 4 5 // 第一个参数的意思是 多少M共享字符串以后 采用文件存储 单位MB 默认5M // 第二个参数 文件存储时，内存存放多少M缓存数据 默认20M // 比如 你希望用100M内存(这里说的是解析过程中的永久占用,临时对象不算)来解析excel，前面算过了 大概是 20M+90M 所以设置参数为:20 和 90 // 这里再说明下 就是加了个readCacheSelector(new SimpleReadCacheSelector(5, 20))参数而已，其他的参照其他demo写 这里没有写全 EasyExcel.read().readCacheSelector( new SimpleReadCacheSelector( 5 , 20 )); 关于maxCacheActivateSize 也就是前面第二个参数的详细说明 easyexcel在使用文件存储的时候，会把共享字符串拆分成1000条一批，然后放到文件存储。然后excel来读取共享字符串大概率是按照顺序的，所以默认20M的1000条的数据放在内存，命中后直接返回，没命中去读文件。所以不能设置太小，太小了，很难命中，一直去读取文件，太大了的话会占用过多的内存。 如何判断 maxCacheActivateSize是否需要调整 开启debug日志会输出 Already put :4000000 最后一次输出，大概可以得出值为400W,然后看 Cache misses count:4001 得到值为4K，400W/4K=1000 这代表已经 maxCacheActivateSize 已经非常合理了。如果小于500 问题就非常大了，500到1000 应该都还行。"},"quickstart/faq.html#常见问题":{"title":"&#x5E38;&#x89C1;&#x95EE;&#x9898;","path":"/quickstart/faq.html#常见问题","body":""},"quickstart/faq.html#读取文件务必使用2-0-3":{"title":"&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x52A1;&#x5FC5;&#x4F7F;&#x7528;2.0.3+","path":"/quickstart/faq.html#读取文件务必使用2-0-3","body":"2.0.0-beta1&#x5230;2.0.2&#x6709;&#x5C0F;&#x6982;&#x7387;&#x4F1A;&#x4E22;&#x5931;&#x6570;&#x5B57;&#x3002;"},"quickstart/faq.html#不支持功能":{"title":"&#x4E0D;&#x652F;&#x6301;&#x529F;&#x80FD;","path":"/quickstart/faq.html#不支持功能","body":"&#x5355;&#x4E2A;&#x6587;&#x4EF6;&#x7684;&#x5E76;&#x53D1;&#x5199;&#x5165;&#x3001;&#x8BFB;&#x53D6; &#x8BFB;&#x53D6;&#x56FE;&#x7247; &#x5B8F; csv&#x8BFB;&#x53D6;&#xFF08;&#x8FD9;&#x4E2A;&#x540E;&#x7EED;&#x53EF;&#x80FD;&#x4F1A;&#x8003;&#x8651;&#xFF09; &#x5E38;&#x89C1;&#x95EE;&#x9898; &#x5173;&#x4E8E;@Data&#xFF0C;&#x8BFB;&#x5199;&#x7684;&#x5BF9;&#x8C61;&#x90FD;&#x7528;&#x5230;&#x4E86; Lombok ,&#x4ED6;&#x4F1A;&#x81EA;&#x52A8;&#x751F;&#x6210; get , set &#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x9700;&#x8981;&#x7684;&#x8BDD;&#xFF0C;&#x81EA;&#x5DF1;&#x521B;&#x5EFA;&#x5BF9;&#x8C61;&#x5E76;&#x751F;&#x6210; get , set &#x3002; &#x51FA;&#x73B0; NoSuchMethodException &#xFF0C; ClassNotFoundException , NoClassDefFoundError &#x6781;&#x5927;&#x6982;&#x7387;&#x662F;jar&#x51B2;&#x7A81;&#xFF0C;&#x5EFA;&#x8BAE; clean &#x9879;&#x76EE;&#xFF0C;&#x6216;&#x8005;&#x7EDF;&#x4E00; poi &#x7684;&#x7248;&#x672C;&#xFF0C;&#x7406;&#x8BBA;&#x4E0A;&#x6765;&#x8BF4; easyexcel &#x517C;&#x5BB9;poi&#x7684; 3.17 , 4.0.1 , 4.1.0 &#x6240;&#x6709;&#x8F83;&#x65B0;&#x7248;&#x672C; &#x5982;&#x679C;&#x5728;&#x8BFB;&#x7684;&#x65F6;&#x5019; Listener &#x91CC;&#x9762;&#x9700;&#x8981;&#x4F7F;&#x7528;spring&#x7684; @Autowired &#xFF0C;&#x7ED9; Listener &#x521B;&#x5EFA;&#x6210;&#x5458;&#x53D8;&#x91CF;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x91CC;&#x9762;&#x4F20;&#x8FDB;&#x53BB;&#x3002;&#x800C;&#x522B;&#x5FC5;&#x987B;&#x4E0D;&#x8BA9;spring&#x7BA1;&#x7406; Listener &#xFF0C;&#x6BCF;&#x6B21;&#x8BFB;&#x53D6;&#x90FD;&#x8981; new &#x4E00;&#x4E2A;&#x3002; &#x5982;&#x679C;&#x7528; String &#x53BB;&#x63A5;&#x6536;&#x6570;&#x5B57;&#xFF0C;&#x51FA;&#x73B0;&#x5C0F;&#x6570;&#x70B9;&#x7B49;&#x60C5;&#x51B5;&#xFF0C;&#x8FD9;&#x4E2A;&#x662F;BUG&#xFF0C;&#x4F46;&#x662F;&#x5F88;&#x96BE;&#x4FEE;&#x590D;&#xFF0C;&#x540E;&#x7EED;&#x7248;&#x672C;&#x4F1A;&#x4FEE;&#x590D;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002;&#x76EE;&#x524D;&#x8BF7;&#x4F7F;&#x7528; @NumberFormat &#x6CE8;&#x89E3;&#xFF0C;&#x91CC;&#x9762;&#x7684;&#x53C2;&#x6570;&#x5C31;&#x662F;&#x8C03;&#x7528;&#x4E86;java&#x81EA;&#x5E26;&#x7684; NumberFormat.format &#x65B9;&#x6CD5;&#xFF0C;&#x4E0D;&#x77E5;&#x9053;&#x600E;&#x4E48;&#x5165;&#x53C2;&#x7684;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x7F51;&#x4E0A;&#x67E5;&#x8BE2;&#x3002; &#x8D85;&#x5927;(10M&#x4EE5;&#x4E0A;)&#x6587;&#x4EF6;&#x8BFB;&#x53D6;&#x8BF4;&#x660E; 03&#x7248;&#x6CA1;&#x6709;&#x529E;&#x6CD5;&#x5904;&#x7406;&#xFF0C;&#x76F8;&#x5BF9;&#x5185;&#x5B58;&#x5360;&#x7528;&#x5927;&#x5F88;&#x591A;&#x3002;excel 07&#x7248;&#x672C;&#x6709;&#x4E2A;&#x5171;&#x4EAB;&#x5B57;&#x7B26;&#x4E32; &#x5171;&#x4EAB;&#x5B57;&#x7B26;&#x4E32; &#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x8FD9;&#x4E2A;&#x4F1A;&#x975E;&#x5E38;&#x5360;&#x7528;&#x5185;&#x5B58;&#xFF0C;&#x5982;&#x679C;&#x5168;&#x90E8;&#x8BFB;&#x53D6;&#x5230;&#x5185;&#x5B58;&#x7684;&#x8BDD;&#xFF0C;&#x5927;&#x6982;&#x662F;excel&#x6587;&#x4EF6;&#x7684;&#x5927;&#x5C0F;&#x7684;3-10&#x500D;&#xFF0C;&#x6240;&#x4EE5;easyexcel&#x7528;&#x5B58;&#x50A8;&#x6587;&#x4EF6;&#x7684;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x53BB;&#x8BFB;&#x53D6;&#x7684;&#x7B56;&#x7565;&#x6765;&#x8282;&#x7EA6;&#x5185;&#x5B58;&#x3002;&#x5F53;&#x7136;&#x9700;&#x8981;&#x901A;&#x8FC7;&#x6587;&#x4EF6;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x4EE5;&#x540E;&#xFF0C;&#x6548;&#x7387;&#x4F1A;&#x964D;&#x4F4E;&#xFF0C;&#x5927;&#x6982;&#x964D;&#x4F4E;30-50%&#xFF08;&#x4E0D;&#x4E00;&#x5B9A;&#xFF0C;&#x4E5F;&#x770B;&#x547D;&#x4E2D;&#x7387;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x8D85;&#x8FC7;100%&#xFF09; &#x5982;&#x679C;&#x5BF9;&#x8BFB;&#x53D6;&#x6548;&#x7387;&#x611F;&#x89C9;&#x8FD8;&#x80FD;&#x63A5;&#x53D7;&#xFF0C;&#x5C31;&#x7528;&#x9ED8;&#x8BA4;&#x7684;&#xFF0C;&#x6C38;&#x4E45;&#x5360;&#x7528;&#xFF08;&#x5355;&#x4E2A;excel&#x8BFB;&#x53D6;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#xFF09;&#x4E00;&#x822C;&#x4E0D;&#x4F1A;&#x8D85;&#x8FC7;50M(&#x5927;&#x6982;&#x7387;&#x5C31;30M)&#xFF0C;&#x5269;&#x4E0B;&#x4E34;&#x65F6;&#x7684;GC&#x4F1A;&#x5F88;&#x5FEB;&#x56DE;&#x6536; &#x9ED8;&#x8BA4;&#x5927;&#x6587;&#x4EF6;&#x5904;&#x7406; &#x9ED8;&#x8BA4;&#x5927;&#x6587;&#x4EF6;&#x5904;&#x7406;&#x4F1A;&#x81EA;&#x52A8;&#x5224;&#x65AD;&#xFF0C;&#x5171;&#x4EAB;&#x5B57;&#x7B26;&#x4E32;5M&#x4EE5;&#x4E0B;&#x4F1A;&#x4F7F;&#x7528;&#x5185;&#x5B58;&#x5B58;&#x50A8;&#xFF0C;&#x5927;&#x6982;&#x5360;&#x7528;15-50M&#x7684;&#x5185;&#x5B58;,&#x8D85;&#x8FC7;5M&#x5219;&#x4F7F;&#x7528;&#x6587;&#x4EF6;&#x5B58;&#x50A8;&#xFF0C;&#x7136;&#x540E;&#x6587;&#x4EF6;&#x5B58;&#x50A8;&#x4E5F;&#x8981;&#x8BBE;&#x7F6E;&#x591A;&#x5185;&#x5B58;M&#x7528;&#x6765;&#x5B58;&#x653E;&#x4E34;&#x65F6;&#x7684;&#x5171;&#x4EAB;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x9ED8;&#x8BA4;20M&#x3002;&#x9664;&#x4E86;&#x5171;&#x4EAB;&#x5B57;&#x7B26;&#x4E32;&#x5360;&#x7528;&#x5185;&#x5B58;&#x5916;&#xFF0C;&#x5176;&#x4ED6;&#x5360;&#x7528;&#x8F83;&#x5C11;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x9884;&#x4F30;10M&#xFF0C;&#x6240;&#x4EE5;&#x9ED8;&#x8BA4;&#x5927;&#x6982;30M&#x5C31;&#x80FD;&#x8BFB;&#x53D6;&#x4E00;&#x4E2A;&#x8D85;&#x7EA7;&#x5927;&#x7684;&#x6587;&#x4EF6;&#x3002; &#x6839;&#x636E;&#x5B9E;&#x9645;&#x9700;&#x6C42;&#x914D;&#x7F6E;&#x5185;&#x5B58; &#x60F3;&#x81EA;&#x5B9A;&#x4E49;&#x8BBE;&#x7F6E;&#xFF0C;&#x9996;&#x5148;&#x8981;&#x786E;&#x5B9A;&#x4F60;&#x5927;&#x6982;&#x613F;&#x610F;&#x82B1;&#x591A;&#x5C11;&#x5185;&#x5B58;&#x6765;&#x8BFB;&#x53D6;&#x4E00;&#x4E2A;&#x8D85;&#x7EA7;&#x5927;&#x7684;excel,&#x6BD4;&#x5982;&#x5E0C;&#x671B;&#x8BFB;&#x53D6;excel&#x6700;&#x591A;&#x5360;&#x7528;100M&#x5185;&#x5B58;&#xFF08;&#x662F;&#x8BFB;&#x53D6;&#x8FC7;&#x7A0B;&#x4E2D;&#x6C38;&#x4E45;&#x5360;&#x7528;&#xFF0C;&#x65B0;&#x751F;&#x4EE3;&#x9A6C;&#x4E0A;&#x56DE;&#x6536;&#x7684;&#x4E0D;&#x7B97;&#xFF09;&#xFF0C;&#x90A3;&#x5C31;&#x8BBE;&#x7F6E;&#x4F7F;&#x7528;&#x6587;&#x4EF6;&#x6765;&#x5B58;&#x50A8;&#x5171;&#x4EAB;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x5927;&#x5C0F;&#x5224;&#x65AD;&#x4E3A;20M(&#x5C0F;&#x4E8E;20M&#x5B58;&#x5185;&#x5B58;&#xFF0C;&#x5927;&#x4E8E;&#x5B58;&#x4E34;&#x65F6;&#x6587;&#x4EF6;)&#xFF0C;&#x7136;&#x540E;&#x8BBE;&#x7F6E;&#x6587;&#x4EF6;&#x5B58;&#x50A8;&#x65F6;&#x4E34;&#x65F6;&#x5171;&#x4EAB;&#x5B57;&#x7B26;&#x4E32;&#x5360;&#x7528;&#x5185;&#x5B58;&#x5927;&#x5C0F;90M&#x5DEE;&#x4E0D;&#x591A; &#x5982;&#x679C;&#x6700;&#x5927;&#x6587;&#x4EF6;&#x6761;&#x6570;&#x4E5F;&#x5C31;&#x5341;&#x51E0;&#x4E8C;&#x5341;&#x4E07;&#xFF0C;&#x7136;&#x540E;excel&#x4E5F;&#x5C31;&#x662F;&#x5341;&#x51E0;&#x4E8C;&#x5341;M&#xFF0C;&#x800C;&#x4E14;&#x4E0D;&#x4F1A;&#x6709;&#x5F88;&#x9AD8;&#x7684;&#x5E76;&#x53D1;&#xFF0C;&#x5E76;&#x4E14;&#x5185;&#x5B58;&#x4E5F;&#x8F83;&#x5927; 1 2 3 4 // &#x5F3A;&#x5236;&#x4F7F;&#x7528;&#x5185;&#x5B58;&#x5B58;&#x50A8;&#xFF0C;&#x8FD9;&#x6837;&#x5927;&#x6982;&#x4E00;&#x4E2A;20M&#x7684;excel&#x4F7F;&#x7528;150M&#xFF08;&#x5F88;&#x591A;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#xFF0C;&#x6240;&#x4EE5;100M&#x4F1A;&#x4E00;&#x76F4;GC&#xFF09;&#x7684;&#x5185;&#x5B58; // &#x8FD9;&#x6837;&#x6548;&#x7387;&#x4F1A;&#x6BD4;&#x4E0A;&#x9762;&#x7684;&#x590D;&#x6742;&#x7684;&#x7B56;&#x7565;&#x9AD8;&#x5F88;&#x591A; // &#x8FD9;&#x91CC;&#x518D;&#x8BF4;&#x660E;&#x4E0B; &#x5C31;&#x662F;&#x52A0;&#x4E86;&#x4E2A;readCache(new MapCache()) &#x53C2;&#x6570;&#x800C;&#x5DF2;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x53C2;&#x7167;&#x5176;&#x4ED6;demo&#x5199; &#x8FD9;&#x91CC;&#x6CA1;&#x6709;&#x5199;&#x5168; EasyExcel.read().readCache( new MapCache()); &#x5BF9;&#x5E76;&#x53D1;&#x8981;&#x6C42;&#x8F83;&#x9AD8;&#xFF0C;&#x800C;&#x4E14;&#x90FD;&#x662F;&#x7ECF;&#x5E38;&#x6709;&#x8D85;&#x7EA7;&#x5927;&#x6587;&#x4EF6; 1 2 3 4 5 // &#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x610F;&#x601D;&#x662F; &#x591A;&#x5C11;M&#x5171;&#x4EAB;&#x5B57;&#x7B26;&#x4E32;&#x4EE5;&#x540E; &#x91C7;&#x7528;&#x6587;&#x4EF6;&#x5B58;&#x50A8; &#x5355;&#x4F4D;MB &#x9ED8;&#x8BA4;5M // &#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570; &#x6587;&#x4EF6;&#x5B58;&#x50A8;&#x65F6;&#xFF0C;&#x5185;&#x5B58;&#x5B58;&#x653E;&#x591A;&#x5C11;M&#x7F13;&#x5B58;&#x6570;&#x636E; &#x9ED8;&#x8BA4;20M // &#x6BD4;&#x5982; &#x4F60;&#x5E0C;&#x671B;&#x7528;100M&#x5185;&#x5B58;(&#x8FD9;&#x91CC;&#x8BF4;&#x7684;&#x662F;&#x89E3;&#x6790;&#x8FC7;&#x7A0B;&#x4E2D;&#x7684;&#x6C38;&#x4E45;&#x5360;&#x7528;,&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x4E0D;&#x7B97;)&#x6765;&#x89E3;&#x6790;excel&#xFF0C;&#x524D;&#x9762;&#x7B97;&#x8FC7;&#x4E86; &#x5927;&#x6982;&#x662F; 20M+90M &#x6240;&#x4EE5;&#x8BBE;&#x7F6E;&#x53C2;&#x6570;&#x4E3A;:20 &#x548C; 90 // &#x8FD9;&#x91CC;&#x518D;&#x8BF4;&#x660E;&#x4E0B; &#x5C31;&#x662F;&#x52A0;&#x4E86;&#x4E2A;readCacheSelector(new SimpleReadCacheSelector(5, 20))&#x53C2;&#x6570;&#x800C;&#x5DF2;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x53C2;&#x7167;&#x5176;&#x4ED6;demo&#x5199; &#x8FD9;&#x91CC;&#x6CA1;&#x6709;&#x5199;&#x5168; EasyExcel.read().readCacheSelector( new SimpleReadCacheSelector( 5 , 20 )); &#x5173;&#x4E8E;maxCacheActivateSize &#x4E5F;&#x5C31;&#x662F;&#x524D;&#x9762;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x8BE6;&#x7EC6;&#x8BF4;&#x660E; easyexcel&#x5728;&#x4F7F;&#x7528;&#x6587;&#x4EF6;&#x5B58;&#x50A8;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x628A;&#x5171;&#x4EAB;&#x5B57;&#x7B26;&#x4E32;&#x62C6;&#x5206;&#x6210;1000&#x6761;&#x4E00;&#x6279;&#xFF0C;&#x7136;&#x540E;&#x653E;&#x5230;&#x6587;&#x4EF6;&#x5B58;&#x50A8;&#x3002;&#x7136;&#x540E;excel&#x6765;&#x8BFB;&#x53D6;&#x5171;&#x4EAB;&#x5B57;&#x7B26;&#x4E32;&#x5927;&#x6982;&#x7387;&#x662F;&#x6309;&#x7167;&#x987A;&#x5E8F;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x9ED8;&#x8BA4;20M&#x7684;1000&#x6761;&#x7684;&#x6570;&#x636E;&#x653E;&#x5728;&#x5185;&#x5B58;&#xFF0C;&#x547D;&#x4E2D;&#x540E;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#xFF0C;&#x6CA1;&#x547D;&#x4E2D;&#x53BB;&#x8BFB;&#x6587;&#x4EF6;&#x3002;&#x6240;&#x4EE5;&#x4E0D;&#x80FD;&#x8BBE;&#x7F6E;&#x592A;&#x5C0F;&#xFF0C;&#x592A;&#x5C0F;&#x4E86;&#xFF0C;&#x5F88;&#x96BE;&#x547D;&#x4E2D;&#xFF0C;&#x4E00;&#x76F4;&#x53BB;&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#xFF0C;&#x592A;&#x5927;&#x4E86;&#x7684;&#x8BDD;&#x4F1A;&#x5360;&#x7528;&#x8FC7;&#x591A;&#x7684;&#x5185;&#x5B58;&#x3002; &#x5982;&#x4F55;&#x5224;&#x65AD; maxCacheActivateSize&#x662F;&#x5426;&#x9700;&#x8981;&#x8C03;&#x6574; &#x5F00;&#x542F;debug&#x65E5;&#x5FD7;&#x4F1A;&#x8F93;&#x51FA; Already put :4000000 &#x6700;&#x540E;&#x4E00;&#x6B21;&#x8F93;&#x51FA;&#xFF0C;&#x5927;&#x6982;&#x53EF;&#x4EE5;&#x5F97;&#x51FA;&#x503C;&#x4E3A;400W,&#x7136;&#x540E;&#x770B; Cache misses count:4001 &#x5F97;&#x5230;&#x503C;&#x4E3A;4K&#xFF0C;400W/4K=1000 &#x8FD9;&#x4EE3;&#x8868;&#x5DF2;&#x7ECF; maxCacheActivateSize &#x5DF2;&#x7ECF;&#x975E;&#x5E38;&#x5408;&#x7406;&#x4E86;&#x3002;&#x5982;&#x679C;&#x5C0F;&#x4E8E;500 &#x95EE;&#x9898;&#x5C31;&#x975E;&#x5E38;&#x5927;&#x4E86;&#xFF0C;500&#x5230;1000 &#x5E94;&#x8BE5;&#x90FD;&#x8FD8;&#x884C;&#x3002;"},"quickstart/faq.html#常见问题-1":{"title":"&#x5E38;&#x89C1;&#x95EE;&#x9898;","path":"/quickstart/faq.html#常见问题-1","body":""},"quickstart/faq.html#超大-10M以上-文件读取说明":{"title":"&#x8D85;&#x5927;(10M&#x4EE5;&#x4E0A;)&#x6587;&#x4EF6;&#x8BFB;&#x53D6;&#x8BF4;&#x660E;","path":"/quickstart/faq.html#超大-10M以上-文件读取说明","body":"&#x5171;&#x4EAB;&#x5B57;&#x7B26;&#x4E32; &#x5982;&#x679C;&#x5BF9;&#x8BFB;&#x53D6;&#x6548;&#x7387;&#x611F;&#x89C9;&#x8FD8;&#x80FD;&#x63A5;&#x53D7;&#xFF0C;&#x5C31;&#x7528;&#x9ED8;&#x8BA4;&#x7684;&#xFF0C;&#x6C38;&#x4E45;&#x5360;&#x7528;&#xFF08;&#x5355;&#x4E2A;excel&#x8BFB;&#x53D6;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#xFF09;&#x4E00;&#x822C;&#x4E0D;&#x4F1A;&#x8D85;&#x8FC7;50M(&#x5927;&#x6982;&#x7387;&#x5C31;30M)&#xFF0C;&#x5269;&#x4E0B;&#x4E34;&#x65F6;&#x7684;GC&#x4F1A;&#x5F88;&#x5FEB;&#x56DE;&#x6536; &#x9ED8;&#x8BA4;&#x5927;&#x6587;&#x4EF6;&#x5904;&#x7406; &#x6839;&#x636E;&#x5B9E;&#x9645;&#x9700;&#x6C42;&#x914D;&#x7F6E;&#x5185;&#x5B58; &#x5982;&#x679C;&#x6700;&#x5927;&#x6587;&#x4EF6;&#x6761;&#x6570;&#x4E5F;&#x5C31;&#x5341;&#x51E0;&#x4E8C;&#x5341;&#x4E07;&#xFF0C;&#x7136;&#x540E;excel&#x4E5F;&#x5C31;&#x662F;&#x5341;&#x51E0;&#x4E8C;&#x5341;M&#xFF0C;&#x800C;&#x4E14;&#x4E0D;&#x4F1A;&#x6709;&#x5F88;&#x9AD8;&#x7684;&#x5E76;&#x53D1;&#xFF0C;&#x5E76;&#x4E14;&#x5185;&#x5B58;&#x4E5F;&#x8F83;&#x5927; 1 2 3 4 // &#x5F3A;&#x5236;&#x4F7F;&#x7528;&#x5185;&#x5B58;&#x5B58;&#x50A8;&#xFF0C;&#x8FD9;&#x6837;&#x5927;&#x6982;&#x4E00;&#x4E2A;20M&#x7684;excel&#x4F7F;&#x7528;150M&#xFF08;&#x5F88;&#x591A;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#xFF0C;&#x6240;&#x4EE5;100M&#x4F1A;&#x4E00;&#x76F4;GC&#xFF09;&#x7684;&#x5185;&#x5B58; // &#x8FD9;&#x6837;&#x6548;&#x7387;&#x4F1A;&#x6BD4;&#x4E0A;&#x9762;&#x7684;&#x590D;&#x6742;&#x7684;&#x7B56;&#x7565;&#x9AD8;&#x5F88;&#x591A; // &#x8FD9;&#x91CC;&#x518D;&#x8BF4;&#x660E;&#x4E0B; &#x5C31;&#x662F;&#x52A0;&#x4E86;&#x4E2A;readCache(new MapCache()) &#x53C2;&#x6570;&#x800C;&#x5DF2;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x53C2;&#x7167;&#x5176;&#x4ED6;demo&#x5199; &#x8FD9;&#x91CC;&#x6CA1;&#x6709;&#x5199;&#x5168; EasyExcel.read().readCache( new MapCache());"},"support/about.html":{"title":"关于","path":"/support/about.html","body":"Excel读写时候内存溢出 虽然POI是目前使用最多的用来做excel解析的框架，但这个框架并不那么完美。大部分使用POI都是使用他的userModel模式。userModel的好处是上手容易使用简单，随便拷贝个代码跑一下，剩下就是写业务转换了，虽然转换也要写上百行代码，相对比较好理解。然而userModel模式最大的问题是在于非常大的内存消耗，一个几兆的文件解析要用掉上百兆的内存。现在很多应用采用这种模式，之所以还正常在跑一定是并发不大，并发上来后一定会OOM或者频繁的full gc。 其他开源框架使用复杂 对POI有过深入了解的估计才知道原来POI还有SAX模式。但SAX模式相对比较复杂，excel有03和07两种版本，两个版本数据存储方式截然不同，sax解析方式也各不一样。想要了解清楚这两种解析方式，才去写代码测试，估计两天时间是需要的。再加上即使解析完，要转换到自己业务模型还要很多繁琐的代码。总体下来感觉至少需要三天，由于代码复杂，后续维护成本巨大。 其他开源框架存在一些BUG修复不及时 由于我们的系统大多数都是大并发的情况下运行的，在大并发情况下，我们会发现poi存在一些bug,如果让POI团队修复估计遥遥无期了。所以我们在easyexcel对这些bug做了规避。 如下一段报错就是在大并发情况下poi抛的一个异常。 1 2 3 Caused by: java.io.IOException: Could not create temporary directory &apos;/home/admin/dio2o/.default/temp/poifiles&apos; at org.apache.poi.util.DefaultTempFileCreationStrategy.createTempDirectory(DefaultTempFileCreationStrategy.java:93) ~[poi-3.15.jar:3.15] at org.apache.poi.util.DefaultTempFileCreationStrategy.createPOIFilesDirectory(DefaultTempFileCreationStrategy.java:82) ~[poi-3.15.jar:3.15] 报错地方poi源码如下 1 2 3 4 5 private void createTempDirectory(File directory) throws IOException  if (!(directory.exists() || directory.mkdirs()) || !directory.isDirectory())  throw new IOException(Could not create temporary directory &apos; + directory + &apos;);   仔细看代码容易明白如果在并发情况下，如果2个线程同时判断directory.exists()都 为false,但执行directory.mkdirs()如果一些线程优先执行完，另外一个线程就会返回false。最终 throw new IOException(“Could not create temporary directory ‘“ + directory + “‘“)。针对这个问题easyexcel在写文件时候首先创建了该临时目录，避免poi在并发创建时候引起不该有的报错。 Excel格式分析格式分析 xls是Microsoft Excel2007前excel的文件存储格式，实现原理是基于微软的ole db是微软com组件的一种实现，本质上也是一个微型数据库，由于微软的东西很多不开源，另外也已经被淘汰，了解它的细节意义不大，底层的编程都是基于微软的com组件去开发的。 xlsx是Microsoft Excel2007后excel的文件存储格式，实现是基于openXml和zip技术。这种存储简单，安全传输方便，同时处理数据也变的简单。 csv 我们可以理解为纯文本文件，可以被excel打开。他的格式非常简单，解析起来和解析文本文件一样。 核心原理 写有大量数据的xlsx文件时，POI为我们提供了SXSSFWorkBook类来处理，这个类的处理机制是当内存中的数据条数达到一个极限数量的时候就flush这部分数据，再依次处理余下的数据，这个在大多数场景能够满足需求。 读有大量数据的文件时，使用WorkBook处理就不行了，因为POI对文件是先将文件中的cell读入内存，生成一个树的结构（针对Excel中的每个sheet，使用TreeMap存储sheet中的行）。如果数据量比较大，则同样会产生java.lang.OutOfMemoryError: Java heap space错误。POI官方推荐使用“XSSF and SAX（event API）”方式来解决。 分析清楚POI后要解决OOM有3个关键。 1、文件解压文件读取通过文件形式 2、避免将全部全部数据一次加载到内存 采用sax模式一行一行解析，并将一行的解析结果以观察者的模式通知处理。 3、抛弃不重要的数据 Excel解析时候会包含样式，字体，宽度等数据，但这些数据是我们不关心的，如果将这部分数据抛弃可以大大降低内存使用。Excel中数据如下Style占了相当大的空间。"},"support/about.html#Excel读写时候内存溢出":{"title":"Excel&#x8BFB;&#x5199;&#x65F6;&#x5019;&#x5185;&#x5B58;&#x6EA2;&#x51FA;","path":"/support/about.html#Excel读写时候内存溢出","body":"&#x867D;&#x7136;POI&#x662F;&#x76EE;&#x524D;&#x4F7F;&#x7528;&#x6700;&#x591A;&#x7684;&#x7528;&#x6765;&#x505A;excel&#x89E3;&#x6790;&#x7684;&#x6846;&#x67B6;&#xFF0C;&#x4F46;&#x8FD9;&#x4E2A;&#x6846;&#x67B6;&#x5E76;&#x4E0D;&#x90A3;&#x4E48;&#x5B8C;&#x7F8E;&#x3002;&#x5927;&#x90E8;&#x5206;&#x4F7F;&#x7528;POI&#x90FD;&#x662F;&#x4F7F;&#x7528;&#x4ED6;&#x7684;userModel&#x6A21;&#x5F0F;&#x3002;userModel&#x7684;&#x597D;&#x5904;&#x662F;&#x4E0A;&#x624B;&#x5BB9;&#x6613;&#x4F7F;&#x7528;&#x7B80;&#x5355;&#xFF0C;&#x968F;&#x4FBF;&#x62F7;&#x8D1D;&#x4E2A;&#x4EE3;&#x7801;&#x8DD1;&#x4E00;&#x4E0B;&#xFF0C;&#x5269;&#x4E0B;&#x5C31;&#x662F;&#x5199;&#x4E1A;&#x52A1;&#x8F6C;&#x6362;&#x4E86;&#xFF0C;&#x867D;&#x7136;&#x8F6C;&#x6362;&#x4E5F;&#x8981;&#x5199;&#x4E0A;&#x767E;&#x884C;&#x4EE3;&#x7801;&#xFF0C;&#x76F8;&#x5BF9;&#x6BD4;&#x8F83;&#x597D;&#x7406;&#x89E3;&#x3002;&#x7136;&#x800C;userModel&#x6A21;&#x5F0F;&#x6700;&#x5927;&#x7684;&#x95EE;&#x9898;&#x662F;&#x5728;&#x4E8E;&#x975E;&#x5E38;&#x5927;&#x7684;&#x5185;&#x5B58;&#x6D88;&#x8017;&#xFF0C;&#x4E00;&#x4E2A;&#x51E0;&#x5146;&#x7684;&#x6587;&#x4EF6;&#x89E3;&#x6790;&#x8981;&#x7528;&#x6389;&#x4E0A;&#x767E;&#x5146;&#x7684;&#x5185;&#x5B58;&#x3002;&#x73B0;&#x5728;&#x5F88;&#x591A;&#x5E94;&#x7528;&#x91C7;&#x7528;&#x8FD9;&#x79CD;&#x6A21;&#x5F0F;&#xFF0C;&#x4E4B;&#x6240;&#x4EE5;&#x8FD8;&#x6B63;&#x5E38;&#x5728;&#x8DD1;&#x4E00;&#x5B9A;&#x662F;&#x5E76;&#x53D1;&#x4E0D;&#x5927;&#xFF0C;&#x5E76;&#x53D1;&#x4E0A;&#x6765;&#x540E;&#x4E00;&#x5B9A;&#x4F1A;OOM&#x6216;&#x8005;&#x9891;&#x7E41;&#x7684;full gc&#x3002;"},"support/about.html#其他开源框架使用复杂":{"title":"&#x5176;&#x4ED6;&#x5F00;&#x6E90;&#x6846;&#x67B6;&#x4F7F;&#x7528;&#x590D;&#x6742;","path":"/support/about.html#其他开源框架使用复杂","body":"&#x5BF9;POI&#x6709;&#x8FC7;&#x6DF1;&#x5165;&#x4E86;&#x89E3;&#x7684;&#x4F30;&#x8BA1;&#x624D;&#x77E5;&#x9053;&#x539F;&#x6765;POI&#x8FD8;&#x6709;SAX&#x6A21;&#x5F0F;&#x3002;&#x4F46;SAX&#x6A21;&#x5F0F;&#x76F8;&#x5BF9;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#xFF0C;excel&#x6709;03&#x548C;07&#x4E24;&#x79CD;&#x7248;&#x672C;&#xFF0C;&#x4E24;&#x4E2A;&#x7248;&#x672C;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x65B9;&#x5F0F;&#x622A;&#x7136;&#x4E0D;&#x540C;&#xFF0C;sax&#x89E3;&#x6790;&#x65B9;&#x5F0F;&#x4E5F;&#x5404;&#x4E0D;&#x4E00;&#x6837;&#x3002;&#x60F3;&#x8981;&#x4E86;&#x89E3;&#x6E05;&#x695A;&#x8FD9;&#x4E24;&#x79CD;&#x89E3;&#x6790;&#x65B9;&#x5F0F;&#xFF0C;&#x624D;&#x53BB;&#x5199;&#x4EE3;&#x7801;&#x6D4B;&#x8BD5;&#xFF0C;&#x4F30;&#x8BA1;&#x4E24;&#x5929;&#x65F6;&#x95F4;&#x662F;&#x9700;&#x8981;&#x7684;&#x3002;&#x518D;&#x52A0;&#x4E0A;&#x5373;&#x4F7F;&#x89E3;&#x6790;&#x5B8C;&#xFF0C;&#x8981;&#x8F6C;&#x6362;&#x5230;&#x81EA;&#x5DF1;&#x4E1A;&#x52A1;&#x6A21;&#x578B;&#x8FD8;&#x8981;&#x5F88;&#x591A;&#x7E41;&#x7410;&#x7684;&#x4EE3;&#x7801;&#x3002;&#x603B;&#x4F53;&#x4E0B;&#x6765;&#x611F;&#x89C9;&#x81F3;&#x5C11;&#x9700;&#x8981;&#x4E09;&#x5929;&#xFF0C;&#x7531;&#x4E8E;&#x4EE3;&#x7801;&#x590D;&#x6742;&#xFF0C;&#x540E;&#x7EED;&#x7EF4;&#x62A4;&#x6210;&#x672C;&#x5DE8;&#x5927;&#x3002;"},"support/about.html#其他开源框架存在一些BUG修复不及时":{"title":"&#x5176;&#x4ED6;&#x5F00;&#x6E90;&#x6846;&#x67B6;&#x5B58;&#x5728;&#x4E00;&#x4E9B;BUG&#x4FEE;&#x590D;&#x4E0D;&#x53CA;&#x65F6;","path":"/support/about.html#其他开源框架存在一些BUG修复不及时","body":"&#x7531;&#x4E8E;&#x6211;&#x4EEC;&#x7684;&#x7CFB;&#x7EDF;&#x5927;&#x591A;&#x6570;&#x90FD;&#x662F;&#x5927;&#x5E76;&#x53D1;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x8FD0;&#x884C;&#x7684;&#xFF0C;&#x5728;&#x5927;&#x5E76;&#x53D1;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x4F1A;&#x53D1;&#x73B0;poi&#x5B58;&#x5728;&#x4E00;&#x4E9B;bug,&#x5982;&#x679C;&#x8BA9;POI&#x56E2;&#x961F;&#x4FEE;&#x590D;&#x4F30;&#x8BA1;&#x9065;&#x9065;&#x65E0;&#x671F;&#x4E86;&#x3002;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5728;easyexcel&#x5BF9;&#x8FD9;&#x4E9B;bug&#x505A;&#x4E86;&#x89C4;&#x907F;&#x3002; &#x5982;&#x4E0B;&#x4E00;&#x6BB5;&#x62A5;&#x9519;&#x5C31;&#x662F;&#x5728;&#x5927;&#x5E76;&#x53D1;&#x60C5;&#x51B5;&#x4E0B;poi&#x629B;&#x7684;&#x4E00;&#x4E2A;&#x5F02;&#x5E38;&#x3002; 1 2 3 Caused by: java.io.IOException: Could not create temporary directory &apos;/home/admin/dio2o/.default/temp/poifiles&apos; at org.apache.poi.util.DefaultTempFileCreationStrategy.createTempDirectory(DefaultTempFileCreationStrategy.java:93) ~[poi-3.15.jar:3.15] at org.apache.poi.util.DefaultTempFileCreationStrategy.createPOIFilesDirectory(DefaultTempFileCreationStrategy.java:82) ~[poi-3.15.jar:3.15] &#x62A5;&#x9519;&#x5730;&#x65B9;poi&#x6E90;&#x7801;&#x5982;&#x4E0B; 1 2 3 4 5 private void createTempDirectory(File directory) throws IOException { if (!(directory.exists() || directory.mkdirs()) || !directory.isDirectory()) { throw new IOException(Could not create temporary directory &apos; + directory + &apos;); } } &#x4ED4;&#x7EC6;&#x770B;&#x4EE3;&#x7801;&#x5BB9;&#x6613;&#x660E;&#x767D;&#x5982;&#x679C;&#x5728;&#x5E76;&#x53D1;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5982;&#x679C;2&#x4E2A;&#x7EBF;&#x7A0B;&#x540C;&#x65F6;&#x5224;&#x65AD;directory.exists()&#x90FD; &#x4E3A;false,&#x4F46;&#x6267;&#x884C;directory.mkdirs()&#x5982;&#x679C;&#x4E00;&#x4E9B;&#x7EBF;&#x7A0B;&#x4F18;&#x5148;&#x6267;&#x884C;&#x5B8C;&#xFF0C;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x5C31;&#x4F1A;&#x8FD4;&#x56DE;false&#x3002;&#x6700;&#x7EC8; throw new IOException(&#x201C;Could not create temporary directory &#x2018;&#x201C; + directory + &#x201C;&#x2018;&#x201C;)&#x3002;&#x9488;&#x5BF9;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;easyexcel&#x5728;&#x5199;&#x6587;&#x4EF6;&#x65F6;&#x5019;&#x9996;&#x5148;&#x521B;&#x5EFA;&#x4E86;&#x8BE5;&#x4E34;&#x65F6;&#x76EE;&#x5F55;&#xFF0C;&#x907F;&#x514D;poi&#x5728;&#x5E76;&#x53D1;&#x521B;&#x5EFA;&#x65F6;&#x5019;&#x5F15;&#x8D77;&#x4E0D;&#x8BE5;&#x6709;&#x7684;&#x62A5;&#x9519;&#x3002;"},"support/about.html#Excel格式分析格式分析":{"title":"Excel&#x683C;&#x5F0F;&#x5206;&#x6790;&#x683C;&#x5F0F;&#x5206;&#x6790;","path":"/support/about.html#Excel格式分析格式分析","body":"xls&#x662F;Microsoft Excel2007&#x524D;excel&#x7684;&#x6587;&#x4EF6;&#x5B58;&#x50A8;&#x683C;&#x5F0F;&#xFF0C;&#x5B9E;&#x73B0;&#x539F;&#x7406;&#x662F;&#x57FA;&#x4E8E;&#x5FAE;&#x8F6F;&#x7684;ole db&#x662F;&#x5FAE;&#x8F6F;com&#x7EC4;&#x4EF6;&#x7684;&#x4E00;&#x79CD;&#x5B9E;&#x73B0;&#xFF0C;&#x672C;&#x8D28;&#x4E0A;&#x4E5F;&#x662F;&#x4E00;&#x4E2A;&#x5FAE;&#x578B;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x7531;&#x4E8E;&#x5FAE;&#x8F6F;&#x7684;&#x4E1C;&#x897F;&#x5F88;&#x591A;&#x4E0D;&#x5F00;&#x6E90;&#xFF0C;&#x53E6;&#x5916;&#x4E5F;&#x5DF2;&#x7ECF;&#x88AB;&#x6DD8;&#x6C70;&#xFF0C;&#x4E86;&#x89E3;&#x5B83;&#x7684;&#x7EC6;&#x8282;&#x610F;&#x4E49;&#x4E0D;&#x5927;&#xFF0C;&#x5E95;&#x5C42;&#x7684;&#x7F16;&#x7A0B;&#x90FD;&#x662F;&#x57FA;&#x4E8E;&#x5FAE;&#x8F6F;&#x7684;com&#x7EC4;&#x4EF6;&#x53BB;&#x5F00;&#x53D1;&#x7684;&#x3002; xlsx&#x662F;Microsoft Excel2007&#x540E;excel&#x7684;&#x6587;&#x4EF6;&#x5B58;&#x50A8;&#x683C;&#x5F0F;&#xFF0C;&#x5B9E;&#x73B0;&#x662F;&#x57FA;&#x4E8E;openXml&#x548C;zip&#x6280;&#x672F;&#x3002;&#x8FD9;&#x79CD;&#x5B58;&#x50A8;&#x7B80;&#x5355;&#xFF0C;&#x5B89;&#x5168;&#x4F20;&#x8F93;&#x65B9;&#x4FBF;&#xFF0C;&#x540C;&#x65F6;&#x5904;&#x7406;&#x6570;&#x636E;&#x4E5F;&#x53D8;&#x7684;&#x7B80;&#x5355;&#x3002; csv &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x7EAF;&#x6587;&#x672C;&#x6587;&#x4EF6;&#xFF0C;&#x53EF;&#x4EE5;&#x88AB;excel&#x6253;&#x5F00;&#x3002;&#x4ED6;&#x7684;&#x683C;&#x5F0F;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x89E3;&#x6790;&#x8D77;&#x6765;&#x548C;&#x89E3;&#x6790;&#x6587;&#x672C;&#x6587;&#x4EF6;&#x4E00;&#x6837;&#x3002;"},"support/about.html#核心原理":{"title":"&#x6838;&#x5FC3;&#x539F;&#x7406;","path":"/support/about.html#核心原理","body":"&#x5199;&#x6709;&#x5927;&#x91CF;&#x6570;&#x636E;&#x7684;xlsx&#x6587;&#x4EF6;&#x65F6;&#xFF0C;POI&#x4E3A;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#x4E86;SXSSFWorkBook&#x7C7B;&#x6765;&#x5904;&#x7406;&#xFF0C;&#x8FD9;&#x4E2A;&#x7C7B;&#x7684;&#x5904;&#x7406;&#x673A;&#x5236;&#x662F;&#x5F53;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x6761;&#x6570;&#x8FBE;&#x5230;&#x4E00;&#x4E2A;&#x6781;&#x9650;&#x6570;&#x91CF;&#x7684;&#x65F6;&#x5019;&#x5C31;flush&#x8FD9;&#x90E8;&#x5206;&#x6570;&#x636E;&#xFF0C;&#x518D;&#x4F9D;&#x6B21;&#x5904;&#x7406;&#x4F59;&#x4E0B;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x8FD9;&#x4E2A;&#x5728;&#x5927;&#x591A;&#x6570;&#x573A;&#x666F;&#x80FD;&#x591F;&#x6EE1;&#x8DB3;&#x9700;&#x6C42;&#x3002; &#x8BFB;&#x6709;&#x5927;&#x91CF;&#x6570;&#x636E;&#x7684;&#x6587;&#x4EF6;&#x65F6;&#xFF0C;&#x4F7F;&#x7528;WorkBook&#x5904;&#x7406;&#x5C31;&#x4E0D;&#x884C;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;POI&#x5BF9;&#x6587;&#x4EF6;&#x662F;&#x5148;&#x5C06;&#x6587;&#x4EF6;&#x4E2D;&#x7684;cell&#x8BFB;&#x5165;&#x5185;&#x5B58;&#xFF0C;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x6811;&#x7684;&#x7ED3;&#x6784;&#xFF08;&#x9488;&#x5BF9;Excel&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;sheet&#xFF0C;&#x4F7F;&#x7528;TreeMap&#x5B58;&#x50A8;sheet&#x4E2D;&#x7684;&#x884C;&#xFF09;&#x3002;&#x5982;&#x679C;&#x6570;&#x636E;&#x91CF;&#x6BD4;&#x8F83;&#x5927;&#xFF0C;&#x5219;&#x540C;&#x6837;&#x4F1A;&#x4EA7;&#x751F;java.lang.OutOfMemoryError: Java heap space&#x9519;&#x8BEF;&#x3002;POI&#x5B98;&#x65B9;&#x63A8;&#x8350;&#x4F7F;&#x7528;&#x201C;XSSF and SAX&#xFF08;event API&#xFF09;&#x201D;&#x65B9;&#x5F0F;&#x6765;&#x89E3;&#x51B3;&#x3002; &#x5206;&#x6790;&#x6E05;&#x695A;POI&#x540E;&#x8981;&#x89E3;&#x51B3;OOM&#x6709;3&#x4E2A;&#x5173;&#x952E;&#x3002; 1&#x3001;&#x6587;&#x4EF6;&#x89E3;&#x538B;&#x6587;&#x4EF6;&#x8BFB;&#x53D6;&#x901A;&#x8FC7;&#x6587;&#x4EF6;&#x5F62;&#x5F0F; 2&#x3001;&#x907F;&#x514D;&#x5C06;&#x5168;&#x90E8;&#x5168;&#x90E8;&#x6570;&#x636E;&#x4E00;&#x6B21;&#x52A0;&#x8F7D;&#x5230;&#x5185;&#x5B58; &#x91C7;&#x7528;sax&#x6A21;&#x5F0F;&#x4E00;&#x884C;&#x4E00;&#x884C;&#x89E3;&#x6790;&#xFF0C;&#x5E76;&#x5C06;&#x4E00;&#x884C;&#x7684;&#x89E3;&#x6790;&#x7ED3;&#x679C;&#x4EE5;&#x89C2;&#x5BDF;&#x8005;&#x7684;&#x6A21;&#x5F0F;&#x901A;&#x77E5;&#x5904;&#x7406;&#x3002; 3&#x3001;&#x629B;&#x5F03;&#x4E0D;&#x91CD;&#x8981;&#x7684;&#x6570;&#x636E; Excel&#x89E3;&#x6790;&#x65F6;&#x5019;&#x4F1A;&#x5305;&#x542B;&#x6837;&#x5F0F;&#xFF0C;&#x5B57;&#x4F53;&#xFF0C;&#x5BBD;&#x5EA6;&#x7B49;&#x6570;&#x636E;&#xFF0C;&#x4F46;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x662F;&#x6211;&#x4EEC;&#x4E0D;&#x5173;&#x5FC3;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x5C06;&#x8FD9;&#x90E8;&#x5206;&#x6570;&#x636E;&#x629B;&#x5F03;&#x53EF;&#x4EE5;&#x5927;&#x5927;&#x964D;&#x4F4E;&#x5185;&#x5B58;&#x4F7F;&#x7528;&#x3002;Excel&#x4E2D;&#x6570;&#x636E;&#x5982;&#x4E0B;Style&#x5360;&#x4E86;&#x76F8;&#x5F53;&#x5927;&#x7684;&#x7A7A;&#x95F4;&#x3002;"},"quickstart/fill.html":{"title":"填充Excel","path":"/quickstart/fill.html","body":"最简单的填充 模板 最终效果 对象 1 2 3 4 5 @Data public class FillData  private String name; private double number;  代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 /** * 最简单的填充 */ @Test public void simpleFill ()  // 模板注意 用 来表示你要用的变量 如果本来就有\"\",\"\" 特殊字符 用\"\\\",\"\\\"代替 String templateFileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"fill\" + File.separator + \"simple.xlsx\" ; // 方案1 根据对象填充 String fileName = TestFileUtil.getPath() + \"simpleFill\" + System.currentTimeMillis() + \".xlsx\" ; // 这里 会填充到第一个sheet， 然后文件流会自动关闭 FillData fillData = new FillData(); fillData.setName( \"张三\" ); fillData.setNumber( 5.2 ); EasyExcel.write(fileName).withTemplate(templateFileName).sheet().doFill(fillData); // 方案2 根据Map填充 fileName = TestFileUtil.getPath() + \"simpleFill\" + System.currentTimeMillis() + \".xlsx\" ; // 这里 会填充到第一个sheet， 然后文件流会自动关闭 MapString, Object map = new HashMapString, Object(); map.put( \"name\" , \"张三\" ); map.put( \"number\" , 5.2 ); EasyExcel.write(fileName).withTemplate(templateFileName).sheet().doFill(map);  填充列表 模板 最终效果 对象 参照： 对象 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 /** * 填充列表 */ @Test public void listFill ()  // 模板注意 用 来表示你要用的变量 如果本来就有\"\",\"\" 特殊字符 用\"\\\",\"\\\"代替 // 填充list 的时候还要注意 模板中. 多了个点 表示list String templateFileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"fill\" + File.separator + \"list.xlsx\" ; // 方案1 一下子全部放到内存里面 并填充 String fileName = TestFileUtil.getPath() + \"listFill\" + System.currentTimeMillis() + \".xlsx\" ; // 这里 会填充到第一个sheet， 然后文件流会自动关闭 EasyExcel.write(fileName).withTemplate(templateFileName).sheet().doFill(data()); // 方案2 分多次 填充 会使用文件缓存（省内存） fileName = TestFileUtil.getPath() + \"listFill\" + System.currentTimeMillis() + \".xlsx\" ; ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(templateFileName).build(); WriteSheet writeSheet = EasyExcel.writerSheet().build(); excelWriter.fill(data(), writeSheet); excelWriter.fill(data(), writeSheet); // 千万别忘记关闭流 excelWriter.finish();  复杂的填充 模板 最终效果 对象 参照： 对象 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 /** * 复杂的填充 */ @Test public void complexFill ()  // 模板注意 用 来表示你要用的变量 如果本来就有\"\",\"\" 特殊字符 用\"\\\",\"\\\"代替 //  代表普通变量 . 代表是list的变量 String templateFileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"fill\" + File.separator + \"complex.xlsx\" ; String fileName = TestFileUtil.getPath() + \"complexFill\" + System.currentTimeMillis() + \".xlsx\" ; ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(templateFileName).build(); WriteSheet writeSheet = EasyExcel.writerSheet().build(); // 这里注意 入参用了forceNewRow 代表在写入list的时候不管list下面有没有空行 都会创建一行，然后下面的数据往后移动。默认 是false，会直接使用下一行，如果没有则创建。 // forceNewRow 如果设置了true,有个缺点 就是他会把所有的数据都放到内存了，所以慎用 // 简单的说 如果你的模板有list,且list不是最后一行，下面还有数据需要填充 就必须设置 forceNewRow=true 但是这个就会把所有数据放到内存 会很耗内存 // 如果数据量大 list不是最后一行 参照下一个 FillConfig fillConfig = FillConfig.builder().forceNewRow(Boolean.TRUE).build(); excelWriter.fill(data(), fillConfig, writeSheet); excelWriter.fill(data(), fillConfig, writeSheet); MapString, Object map = new HashMapString, Object(); map.put( \"date\" , \"2019年10月9日13:28:28\" ); map.put( \"total\" , 1000 ); excelWriter.fill(map, writeSheet); excelWriter.finish();  数据量大的复杂填充 模板 最终效果 对象 参照： 对象 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 /** * 数据量大的复杂填充 * p * 这里的解决方案是 确保模板list为最后一行，然后再拼接table.还有03版没救，只能刚正面加内存。 */ @Test public void complexFillWithTable ()  // 模板注意 用 来表示你要用的变量 如果本来就有\"\",\"\" 特殊字符 用\"\\\",\"\\\"代替 //  代表普通变量 . 代表是list的变量 // 这里模板 删除了list以后的数据，也就是统计的这一行 String templateFileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"fill\" + File.separator + \"complexFillWithTable.xlsx\" ; String fileName = TestFileUtil.getPath() + \"complexFillWithTable\" + System.currentTimeMillis() + \".xlsx\" ; ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(templateFileName).build(); WriteSheet writeSheet = EasyExcel.writerSheet().build(); // 直接写入数据 excelWriter.fill(data(), writeSheet); excelWriter.fill(data(), writeSheet); // 写入list之前的数据 MapString, Object map = new HashMapString, Object(); map.put( \"date\" , \"2019年10月9日13:28:28\" ); excelWriter.fill(map, writeSheet); // list 后面还有个统计 想办法手动写入 // 这里偷懒直接用list 也可以用对象 ListListString totalListList = new ArrayListListString(); ListString totalList = new ArrayListString(); totalListList.add(totalList); totalList.add( null ); totalList.add( null ); totalList.add( null ); // 第四列 totalList.add( \"统计:1000\" ); // 这里是write 别和fill 搞错了 excelWriter.write(totalListList, writeSheet); excelWriter.finish(); // 总体上写法比较复杂 但是也没有想到好的版本 异步的去写入excel 不支持行的删除和移动，也不支持备注这种的写入，所以也排除了可以 // 新建一个 然后一点点复制过来的方案，最后导致list需要新增行的时候，后面的列的数据没法后移，后续会继续想想解决方案  横向的填充 模板 最终效果 对象 参照： 对象 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 /** * 横向的填充 */ @Test public void horizontalFill ()  // 模板注意 用 来表示你要用的变量 如果本来就有\"\",\"\" 特殊字符 用\"\\\",\"\\\"代替 //  代表普通变量 . 代表是list的变量 String templateFileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"fill\" + File.separator + \"horizontal.xlsx\" ; String fileName = TestFileUtil.getPath() + \"horizontalFill\" + System.currentTimeMillis() + \".xlsx\" ; ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(templateFileName).build(); WriteSheet writeSheet = EasyExcel.writerSheet().build(); FillConfig fillConfig = FillConfig.builder().direction(WriteDirectionEnum.HORIZONTAL).build(); excelWriter.fill(data(), fillConfig, writeSheet); excelWriter.fill(data(), fillConfig, writeSheet); MapString, Object map = new HashMapString, Object(); map.put( \"date\" , \"2019年10月9日13:28:28\" ); excelWriter.fill(map, writeSheet); // 别忘记关闭流 excelWriter.finish(); "},"quickstart/fill.html#最简单的填充":{"title":"&#x6700;&#x7B80;&#x5355;&#x7684;&#x586B;&#x5145;","path":"/quickstart/fill.html#最简单的填充","body":"&#x6A21;&#x677F; &#x6700;&#x7EC8;&#x6548;&#x679C; &#x5BF9;&#x8C61; 1 2 3 4 5 @Data public class FillData { private String name; private double number; } &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 /** * &#x6700;&#x7B80;&#x5355;&#x7684;&#x586B;&#x5145; */ @Test public void simpleFill () { // &#x6A21;&#x677F;&#x6CE8;&#x610F; &#x7528;{} &#x6765;&#x8868;&#x793A;&#x4F60;&#x8981;&#x7528;&#x7684;&#x53D8;&#x91CF; &#x5982;&#x679C;&#x672C;&#x6765;&#x5C31;&#x6709;{,} &#x7279;&#x6B8A;&#x5B57;&#x7B26; &#x7528;\\{,\\}&#x4EE3;&#x66FF; String templateFileName = TestFileUtil.getPath() + demo + File.separator + fill + File.separator + simple.xlsx ; // &#x65B9;&#x6848;1 &#x6839;&#x636E;&#x5BF9;&#x8C61;&#x586B;&#x5145; String fileName = TestFileUtil.getPath() + simpleFill + System.currentTimeMillis() + .xlsx ; // &#x8FD9;&#x91CC; &#x4F1A;&#x586B;&#x5145;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;sheet&#xFF0C; &#x7136;&#x540E;&#x6587;&#x4EF6;&#x6D41;&#x4F1A;&#x81EA;&#x52A8;&#x5173;&#x95ED; FillData fillData = new FillData(); fillData.setName( &#x5F20;&#x4E09; ); fillData.setNumber( 5.2 ); EasyExcel.write(fileName).withTemplate(templateFileName).sheet().doFill(fillData); // &#x65B9;&#x6848;2 &#x6839;&#x636E;Map&#x586B;&#x5145; fileName = TestFileUtil.getPath() + simpleFill + System.currentTimeMillis() + .xlsx ; // &#x8FD9;&#x91CC; &#x4F1A;&#x586B;&#x5145;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;sheet&#xFF0C; &#x7136;&#x540E;&#x6587;&#x4EF6;&#x6D41;&#x4F1A;&#x81EA;&#x52A8;&#x5173;&#x95ED; MapString, Object map = new HashMapString, Object(); map.put( name , &#x5F20;&#x4E09; ); map.put( number , 5.2 ); EasyExcel.write(fileName).withTemplate(templateFileName).sheet().doFill(map); }"},"quickstart/fill.html#填充列表":{"title":"&#x586B;&#x5145;&#x5217;&#x8868;","path":"/quickstart/fill.html#填充列表","body":"&#x6A21;&#x677F; &#x6700;&#x7EC8;&#x6548;&#x679C; &#x5BF9;&#x8C61; &#x53C2;&#x7167;&#xFF1A; &#x5BF9;&#x8C61; &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 /** * &#x586B;&#x5145;&#x5217;&#x8868; */ @Test public void listFill () { // &#x6A21;&#x677F;&#x6CE8;&#x610F; &#x7528;{} &#x6765;&#x8868;&#x793A;&#x4F60;&#x8981;&#x7528;&#x7684;&#x53D8;&#x91CF; &#x5982;&#x679C;&#x672C;&#x6765;&#x5C31;&#x6709;{,} &#x7279;&#x6B8A;&#x5B57;&#x7B26; &#x7528;\\{,\\}&#x4EE3;&#x66FF; // &#x586B;&#x5145;list &#x7684;&#x65F6;&#x5019;&#x8FD8;&#x8981;&#x6CE8;&#x610F; &#x6A21;&#x677F;&#x4E2D;{.} &#x591A;&#x4E86;&#x4E2A;&#x70B9; &#x8868;&#x793A;list String templateFileName = TestFileUtil.getPath() + demo + File.separator + fill + File.separator + list.xlsx ; // &#x65B9;&#x6848;1 &#x4E00;&#x4E0B;&#x5B50;&#x5168;&#x90E8;&#x653E;&#x5230;&#x5185;&#x5B58;&#x91CC;&#x9762; &#x5E76;&#x586B;&#x5145; String fileName = TestFileUtil.getPath() + listFill + System.currentTimeMillis() + .xlsx ; // &#x8FD9;&#x91CC; &#x4F1A;&#x586B;&#x5145;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;sheet&#xFF0C; &#x7136;&#x540E;&#x6587;&#x4EF6;&#x6D41;&#x4F1A;&#x81EA;&#x52A8;&#x5173;&#x95ED; EasyExcel.write(fileName).withTemplate(templateFileName).sheet().doFill(data()); // &#x65B9;&#x6848;2 &#x5206;&#x591A;&#x6B21; &#x586B;&#x5145; &#x4F1A;&#x4F7F;&#x7528;&#x6587;&#x4EF6;&#x7F13;&#x5B58;&#xFF08;&#x7701;&#x5185;&#x5B58;&#xFF09; fileName = TestFileUtil.getPath() + listFill + System.currentTimeMillis() + .xlsx ; ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(templateFileName).build(); WriteSheet writeSheet = EasyExcel.writerSheet().build(); excelWriter.fill(data(), writeSheet); excelWriter.fill(data(), writeSheet); // &#x5343;&#x4E07;&#x522B;&#x5FD8;&#x8BB0;&#x5173;&#x95ED;&#x6D41; excelWriter.finish(); }"},"quickstart/fill.html#复杂的填充":{"title":"&#x590D;&#x6742;&#x7684;&#x586B;&#x5145;","path":"/quickstart/fill.html#复杂的填充","body":"&#x6A21;&#x677F; &#x6700;&#x7EC8;&#x6548;&#x679C; &#x5BF9;&#x8C61; &#x53C2;&#x7167;&#xFF1A; &#x5BF9;&#x8C61; &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 /** * &#x590D;&#x6742;&#x7684;&#x586B;&#x5145; */ @Test public void complexFill () { // &#x6A21;&#x677F;&#x6CE8;&#x610F; &#x7528;{} &#x6765;&#x8868;&#x793A;&#x4F60;&#x8981;&#x7528;&#x7684;&#x53D8;&#x91CF; &#x5982;&#x679C;&#x672C;&#x6765;&#x5C31;&#x6709;{,} &#x7279;&#x6B8A;&#x5B57;&#x7B26; &#x7528;\\{,\\}&#x4EE3;&#x66FF; // {} &#x4EE3;&#x8868;&#x666E;&#x901A;&#x53D8;&#x91CF; {.} &#x4EE3;&#x8868;&#x662F;list&#x7684;&#x53D8;&#x91CF; String templateFileName = TestFileUtil.getPath() + demo + File.separator + fill + File.separator + complex.xlsx ; String fileName = TestFileUtil.getPath() + complexFill + System.currentTimeMillis() + .xlsx ; ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(templateFileName).build(); WriteSheet writeSheet = EasyExcel.writerSheet().build(); // &#x8FD9;&#x91CC;&#x6CE8;&#x610F; &#x5165;&#x53C2;&#x7528;&#x4E86;forceNewRow &#x4EE3;&#x8868;&#x5728;&#x5199;&#x5165;list&#x7684;&#x65F6;&#x5019;&#x4E0D;&#x7BA1;list&#x4E0B;&#x9762;&#x6709;&#x6CA1;&#x6709;&#x7A7A;&#x884C; &#x90FD;&#x4F1A;&#x521B;&#x5EFA;&#x4E00;&#x884C;&#xFF0C;&#x7136;&#x540E;&#x4E0B;&#x9762;&#x7684;&#x6570;&#x636E;&#x5F80;&#x540E;&#x79FB;&#x52A8;&#x3002;&#x9ED8;&#x8BA4; &#x662F;false&#xFF0C;&#x4F1A;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x4E0B;&#x4E00;&#x884C;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5219;&#x521B;&#x5EFA;&#x3002; // forceNewRow &#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x4E86;true,&#x6709;&#x4E2A;&#x7F3A;&#x70B9; &#x5C31;&#x662F;&#x4ED6;&#x4F1A;&#x628A;&#x6240;&#x6709;&#x7684;&#x6570;&#x636E;&#x90FD;&#x653E;&#x5230;&#x5185;&#x5B58;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x614E;&#x7528; // &#x7B80;&#x5355;&#x7684;&#x8BF4; &#x5982;&#x679C;&#x4F60;&#x7684;&#x6A21;&#x677F;&#x6709;list,&#x4E14;list&#x4E0D;&#x662F;&#x6700;&#x540E;&#x4E00;&#x884C;&#xFF0C;&#x4E0B;&#x9762;&#x8FD8;&#x6709;&#x6570;&#x636E;&#x9700;&#x8981;&#x586B;&#x5145; &#x5C31;&#x5FC5;&#x987B;&#x8BBE;&#x7F6E; forceNewRow=true &#x4F46;&#x662F;&#x8FD9;&#x4E2A;&#x5C31;&#x4F1A;&#x628A;&#x6240;&#x6709;&#x6570;&#x636E;&#x653E;&#x5230;&#x5185;&#x5B58; &#x4F1A;&#x5F88;&#x8017;&#x5185;&#x5B58; // &#x5982;&#x679C;&#x6570;&#x636E;&#x91CF;&#x5927; list&#x4E0D;&#x662F;&#x6700;&#x540E;&#x4E00;&#x884C; &#x53C2;&#x7167;&#x4E0B;&#x4E00;&#x4E2A; FillConfig fillConfig = FillConfig.builder().forceNewRow(Boolean.TRUE).build(); excelWriter.fill(data(), fillConfig, writeSheet); excelWriter.fill(data(), fillConfig, writeSheet); MapString, Object map = new HashMapString, Object(); map.put( date , 2019&#x5E74;10&#x6708;9&#x65E5;13:28:28 ); map.put( total , 1000 ); excelWriter.fill(map, writeSheet); excelWriter.finish(); }"},"quickstart/fill.html#数据量大的复杂填充":{"title":"&#x6570;&#x636E;&#x91CF;&#x5927;&#x7684;&#x590D;&#x6742;&#x586B;&#x5145;","path":"/quickstart/fill.html#数据量大的复杂填充","body":"&#x6A21;&#x677F; &#x6700;&#x7EC8;&#x6548;&#x679C; &#x5BF9;&#x8C61; &#x53C2;&#x7167;&#xFF1A; &#x5BF9;&#x8C61; &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 /** * &#x6570;&#x636E;&#x91CF;&#x5927;&#x7684;&#x590D;&#x6742;&#x586B;&#x5145; * p * &#x8FD9;&#x91CC;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x662F; &#x786E;&#x4FDD;&#x6A21;&#x677F;list&#x4E3A;&#x6700;&#x540E;&#x4E00;&#x884C;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x62FC;&#x63A5;table.&#x8FD8;&#x6709;03&#x7248;&#x6CA1;&#x6551;&#xFF0C;&#x53EA;&#x80FD;&#x521A;&#x6B63;&#x9762;&#x52A0;&#x5185;&#x5B58;&#x3002; */ @Test public void complexFillWithTable () { // &#x6A21;&#x677F;&#x6CE8;&#x610F; &#x7528;{} &#x6765;&#x8868;&#x793A;&#x4F60;&#x8981;&#x7528;&#x7684;&#x53D8;&#x91CF; &#x5982;&#x679C;&#x672C;&#x6765;&#x5C31;&#x6709;{,} &#x7279;&#x6B8A;&#x5B57;&#x7B26; &#x7528;\\{,\\}&#x4EE3;&#x66FF; // {} &#x4EE3;&#x8868;&#x666E;&#x901A;&#x53D8;&#x91CF; {.} &#x4EE3;&#x8868;&#x662F;list&#x7684;&#x53D8;&#x91CF; // &#x8FD9;&#x91CC;&#x6A21;&#x677F; &#x5220;&#x9664;&#x4E86;list&#x4EE5;&#x540E;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x7EDF;&#x8BA1;&#x7684;&#x8FD9;&#x4E00;&#x884C; String templateFileName = TestFileUtil.getPath() + demo + File.separator + fill + File.separator + complexFillWithTable.xlsx ; String fileName = TestFileUtil.getPath() + complexFillWithTable + System.currentTimeMillis() + .xlsx ; ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(templateFileName).build(); WriteSheet writeSheet = EasyExcel.writerSheet().build(); // &#x76F4;&#x63A5;&#x5199;&#x5165;&#x6570;&#x636E; excelWriter.fill(data(), writeSheet); excelWriter.fill(data(), writeSheet); // &#x5199;&#x5165;list&#x4E4B;&#x524D;&#x7684;&#x6570;&#x636E; MapString, Object map = new HashMapString, Object(); map.put( date , 2019&#x5E74;10&#x6708;9&#x65E5;13:28:28 ); excelWriter.fill(map, writeSheet); // list &#x540E;&#x9762;&#x8FD8;&#x6709;&#x4E2A;&#x7EDF;&#x8BA1; &#x60F3;&#x529E;&#x6CD5;&#x624B;&#x52A8;&#x5199;&#x5165; // &#x8FD9;&#x91CC;&#x5077;&#x61D2;&#x76F4;&#x63A5;&#x7528;list &#x4E5F;&#x53EF;&#x4EE5;&#x7528;&#x5BF9;&#x8C61; ListListString totalListList = new ArrayListListString(); ListString totalList = new ArrayListString(); totalListList.add(totalList); totalList.add( null ); totalList.add( null ); totalList.add( null ); // &#x7B2C;&#x56DB;&#x5217; totalList.add( &#x7EDF;&#x8BA1;:1000 ); // &#x8FD9;&#x91CC;&#x662F;write &#x522B;&#x548C;fill &#x641E;&#x9519;&#x4E86; excelWriter.write(totalListList, writeSheet); excelWriter.finish(); // &#x603B;&#x4F53;&#x4E0A;&#x5199;&#x6CD5;&#x6BD4;&#x8F83;&#x590D;&#x6742; &#x4F46;&#x662F;&#x4E5F;&#x6CA1;&#x6709;&#x60F3;&#x5230;&#x597D;&#x7684;&#x7248;&#x672C; &#x5F02;&#x6B65;&#x7684;&#x53BB;&#x5199;&#x5165;excel &#x4E0D;&#x652F;&#x6301;&#x884C;&#x7684;&#x5220;&#x9664;&#x548C;&#x79FB;&#x52A8;&#xFF0C;&#x4E5F;&#x4E0D;&#x652F;&#x6301;&#x5907;&#x6CE8;&#x8FD9;&#x79CD;&#x7684;&#x5199;&#x5165;&#xFF0C;&#x6240;&#x4EE5;&#x4E5F;&#x6392;&#x9664;&#x4E86;&#x53EF;&#x4EE5; // &#x65B0;&#x5EFA;&#x4E00;&#x4E2A; &#x7136;&#x540E;&#x4E00;&#x70B9;&#x70B9;&#x590D;&#x5236;&#x8FC7;&#x6765;&#x7684;&#x65B9;&#x6848;&#xFF0C;&#x6700;&#x540E;&#x5BFC;&#x81F4;list&#x9700;&#x8981;&#x65B0;&#x589E;&#x884C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x540E;&#x9762;&#x7684;&#x5217;&#x7684;&#x6570;&#x636E;&#x6CA1;&#x6CD5;&#x540E;&#x79FB;&#xFF0C;&#x540E;&#x7EED;&#x4F1A;&#x7EE7;&#x7EED;&#x60F3;&#x60F3;&#x89E3;&#x51B3;&#x65B9;&#x6848; }"},"quickstart/fill.html#横向的填充":{"title":"&#x6A2A;&#x5411;&#x7684;&#x586B;&#x5145;","path":"/quickstart/fill.html#横向的填充","body":"&#x6A21;&#x677F; &#x6700;&#x7EC8;&#x6548;&#x679C; &#x5BF9;&#x8C61; &#x53C2;&#x7167;&#xFF1A; &#x5BF9;&#x8C61; &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 /** * &#x6A2A;&#x5411;&#x7684;&#x586B;&#x5145; */ @Test public void horizontalFill () { // &#x6A21;&#x677F;&#x6CE8;&#x610F; &#x7528;{} &#x6765;&#x8868;&#x793A;&#x4F60;&#x8981;&#x7528;&#x7684;&#x53D8;&#x91CF; &#x5982;&#x679C;&#x672C;&#x6765;&#x5C31;&#x6709;{,} &#x7279;&#x6B8A;&#x5B57;&#x7B26; &#x7528;\\{,\\}&#x4EE3;&#x66FF; // {} &#x4EE3;&#x8868;&#x666E;&#x901A;&#x53D8;&#x91CF; {.} &#x4EE3;&#x8868;&#x662F;list&#x7684;&#x53D8;&#x91CF; String templateFileName = TestFileUtil.getPath() + demo + File.separator + fill + File.separator + horizontal.xlsx ; String fileName = TestFileUtil.getPath() + horizontalFill + System.currentTimeMillis() + .xlsx ; ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(templateFileName).build(); WriteSheet writeSheet = EasyExcel.writerSheet().build(); FillConfig fillConfig = FillConfig.builder().direction(WriteDirectionEnum.HORIZONTAL).build(); excelWriter.fill(data(), fillConfig, writeSheet); excelWriter.fill(data(), fillConfig, writeSheet); MapString, Object map = new HashMapString, Object(); map.put( date , 2019&#x5E74;10&#x6708;9&#x65E5;13:28:28 ); excelWriter.fill(map, writeSheet); // &#x522B;&#x5FD8;&#x8BB0;&#x5173;&#x95ED;&#x6D41; excelWriter.finish(); }"},"quickstart/read.html":{"title":"读Excel","path":"/quickstart/read.html","body":"最简单的读 excel示例 对象 1 2 3 4 5 6 @Data public class DemoData  private String string; private Date date; private Double doubleData;  监听器 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 // 有个很重要的点 DemoDataListener 不能被spring管理，要每次读取excel都要new,然后里面用到spring可以构造方法传进去 public class DemoDataListener extends AnalysisEventListener  DemoData   private static final Logger LOGGER = LoggerFactory.getLogger(DemoDataListener.class); /** * 每隔5条存储数据库，实际使用中可以3000条，然后清理list ，方便内存回收 */ private static final int BATCH_COUNT = 5 ; ListDemoData list = new ArrayListDemoData(); @Override public void invoke (DemoData data, AnalysisContext context)  LOGGER.info( \"解析到一条数据:\" , JSON.toJSONString(data)); list.add(data); if (list.size() = BATCH_COUNT)  saveData(); list.clear();   @Override public void doAfterAllAnalysed (AnalysisContext context)  saveData(); LOGGER.info( \"所有数据解析完成！\" );  /** * 加上存储数据库 */ private void saveData ()  LOGGER.info( \"条数据，开始存储数据库！\" , list.size()); LOGGER.info( \"存储数据库成功！\" );   代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 /** * 最简单的读 * p1. 创建excel对应的实体对象 参照 @link DemoData * p2. 由于默认异步读取excel，所以需要创建excel一行一行的回调监听器，参照 @link DemoDataListener * p3. 直接读即可 */ @Test public void simpleRead ()  // 有个很重要的点 DemoDataListener 不能被spring管理，要每次读取excel都要new,然后里面用到spring可以构造方法传进去 // 写法1： String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\" ; // 这里 需要指定读用哪个class去读，然后读取第一个sheet 文件流会自动关闭 EasyExcel.read(fileName, DemoData.class, new DemoDataListener()).sheet().doRead(); // 写法2： fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\" ; ExcelReader excelReader = EasyExcel.read(fileName, DemoData.class, new DemoDataListener()).build(); ReadSheet readSheet = EasyExcel.readSheet( 0 ).build(); excelReader.read(readSheet); // 这里千万别忘记关闭，读的时候会创建临时文件，到时磁盘会崩的 excelReader.finish();  指定列的下标或者列名 excel示例 参照： excel示例 对象 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 @Data public class IndexOrNameData  /** * 强制读取第三个 这里不建议 index 和 name 同时用，要么一个对象只用index，要么一个对象只用name去匹配 */ @ExcelProperty (index = 2 ) private Double doubleData; /** * 用名字去匹配，这里需要注意，如果名字重复，会导致只有一个字段读取到数据 */ @ExcelProperty ( \"字符串标题\" ) private String string; @ExcelProperty ( \"日期标题\" ) private Date date;  监听器 参照： 监听器 只是泛型变了而已 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 /** * 指定列的下标或者列名 * * p1. 创建excel对应的实体对象,并使用 @link ExcelProperty注解. 参照 @link IndexOrNameData * p2. 由于默认异步读取excel，所以需要创建excel一行一行的回调监听器，参照 @link IndexOrNameDataListener * p3. 直接读即可 */ @Test public void indexOrNameRead ()  String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\" ; // 这里默认读取第一个sheet EasyExcel.read(fileName, IndexOrNameData.class, new IndexOrNameDataListener()).sheet().doRead();  读多个sheet excel示例 参照： excel示例 对象 参照： 对象 监听器 参照： 监听器 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 /** * 读多个或者全部sheet,这里注意一个sheet不能读取多次，多次读取需要重新读取文件 * p * 1. 创建excel对应的实体对象 参照 @link DemoData * p * 2. 由于默认异步读取excel，所以需要创建excel一行一行的回调监听器，参照 @link DemoDataListener * p * 3. 直接读即可 */ @Test public void repeatedRead ()  String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\" ; // 读取全部sheet // 这里需要注意 DemoDataListener的doAfterAllAnalysed 会在每个sheet读取完毕后调用一次。然后所有sheet都会往同一个DemoDataListener里面写 EasyExcel.read(fileName, DemoData.class, new DemoDataListener()).doReadAll(); // 读取部分sheet fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\" ; ExcelReader excelReader = EasyExcel.read(fileName).build(); // 这里为了简单 所以注册了 同样的head 和Listener 自己使用功能必须不同的Listener ReadSheet readSheet1 = EasyExcel.readSheet( 0 ).head(DemoData.class).registerReadListener( new DemoDataListener()).build(); ReadSheet readSheet2 = EasyExcel.readSheet( 1 ).head(DemoData.class).registerReadListener( new DemoDataListener()).build(); // 这里注意 一定要把sheet1 sheet2 一起传进去，不然有个问题就是03版的excel 会读取多次，浪费性能 excelReader.read(readSheet1, readSheet2); // 这里千万别忘记关闭，读的时候会创建临时文件，到时磁盘会崩的 excelReader.finish();  日期、数字或者自定义格式转换 excel示例 参照： excel示例 对象 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 @Data public class ConverterData  /** * 我自定义 转换器，不管数据库传过来什么 。我给他加上“自定义：” */ @ExcelProperty (converter = CustomStringStringConverter.class) private String string; /** * 这里用string 去接日期才能格式化。我想接收年月日格式 */ @DateTimeFormat ( \"yyyy年MM月dd日HH时mm分ss秒\" ) private String date; /** * 我想接收百分比的数字 */ @NumberFormat ( \"#.##%\" ) private String doubleData;  监听器 参照： 监听器 只是泛型变了 自定义转换器 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 public class CustomStringStringConverter implements Converter  String   @Override public Class supportJavaTypeKey ()  return String.class;  @Override public CellDataTypeEnum supportExcelTypeKey ()  return CellDataTypeEnum.STRING;  /** * 这里读的时候会调用 * * @param cellData * NotNull * @param contentProperty * Nullable * @param globalConfiguration * NotNull * @return */ @Override public String convertToJavaData (CellData cellData, ExcelContentProperty contentProperty, GlobalConfiguration globalConfiguration)  return \"自定义：\" + cellData.getStringValue();  /** * 这里是写的时候会调用 不用管 * * @param value * NotNull * @param contentProperty * Nullable * @param globalConfiguration * NotNull * @return */ @Override public CellData convertToExcelData (String value, ExcelContentProperty contentProperty, GlobalConfiguration globalConfiguration)  return new CellData(value);   代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 /** * 日期、数字或者自定义格式转换 * p * 默认读的转换器 @link DefaultConverterLoader#loadDefaultReadConverter() * p1. 创建excel对应的实体对象 参照 @link ConverterData.里面可以使用注解 @link DateTimeFormat、 @link NumberFormat或者自定义注解 * p2. 由于默认异步读取excel，所以需要创建excel一行一行的回调监听器，参照 @link ConverterDataListener * p3. 直接读即可 */ @Test public void converterRead ()  String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\" ; // 这里 需要指定读用哪个class去读，然后读取第一个sheet EasyExcel.read(fileName, ConverterData.class, new ConverterDataListener()) // 这里注意 我们也可以registerConverter来指定自定义转换器， 但是这个转换变成全局了， 所有java为string,excel为string的都会用这个转换器。 // 如果就想单个字段使用请使用@ExcelProperty 指定converter // .registerConverter(new CustomStringStringConverter()) // 读取sheet .sheet().doRead();  多行头 excel示例 参照： excel示例 对象 参照： 对象 监听器 参照： 监听器 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 /** * 多行头 * * p1. 创建excel对应的实体对象 参照 @link DemoData * p2. 由于默认异步读取excel，所以需要创建excel一行一行的回调监听器，参照 @link DemoDataListener * p3. 设置headRowNumber参数，然后读。 这里要注意headRowNumber如果不指定， 会根据你传入的class的 @link ExcelProperty#value()里面的表头的数量来决定行数， * 如果不传入class则默认为1.当然你指定了headRowNumber不管是否传入class都是以你传入的为准。 */ @Test public void complexHeaderRead ()  String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\" ; // 这里 需要指定读用哪个class去读，然后读取第一个sheet EasyExcel.read(fileName, DemoData.class, new DemoDataListener()).sheet() // 这里可以设置1，因为头就是一行。如果多行头，可以设置其他值。不传入也可以，因为默认会根据DemoData 来解析，他没有指定头，也就是默认1行 .headRowNumber( 1 ).doRead();  同步的返回 excel示例 参照： excel示例 对象 参照： 对象 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 /** * 同步的返回，不推荐使用，如果数据量大会把数据放到内存里面 */ @Test public void synchronousRead ()  String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\" ; // 这里 需要指定读用哪个class去读，然后读取第一个sheet 同步读取会自动finish ListObject list = EasyExcel.read(fileName).head(DemoData.class).sheet().doReadSync(); for (Object obj : list)  DemoData data = (DemoData)obj; LOGGER.info( \"读取到数据:\" , JSON.toJSONString(data));  // 这里 也可以不指定class，返回一个list，然后读取第一个sheet 同步读取会自动finish list = EasyExcel.read(fileName).sheet().doReadSync(); for (Object obj : list)  // 返回每条数据的键值对 表示所在的列 和所在列的值 MapInteger, String data = (MapInteger, String)obj; LOGGER.info( \"读取到数据:\" , JSON.toJSONString(data));   读取表头数据 excel示例 参照： excel示例 对象 参照： 对象 监听器 参照： 监听器 里面多了一个方法,只要重写invokeHeadMap方法即可 1 2 3 4 5 6 7 8 9 10 /** * 这里会一行行的返回头 * * @param headMap * @param context */ @Override public void invokeHeadMap (MapInteger, String headMap, AnalysisContext context)  LOGGER.info( \"解析到一条头数据:\" , JSON.toJSONString(headMap));  代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 /** * 读取表头数据 * * p * 1. 创建excel对应的实体对象 参照 @link DemoData * p * 2. 由于默认异步读取excel，所以需要创建excel一行一行的回调监听器，参照 @link DemoHeadDataListener * p * 3. 直接读即可 */ @Test public void headerRead ()  String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\" ; // 这里 需要指定读用哪个class去读，然后读取第一个sheet EasyExcel.read(fileName, DemoData.class, new DemoHeadDataListener()).sheet().doRead();  数据转换等异常处理 excel示例 参照： excel示例 对象 1 2 3 4 5 6 7 @Data public class ExceptionDemoData  /** * 用日期去接字符串 肯定报错 */ private Date date;  监听器 参照： 监听器 里面多了一个方法,只要重写onException方法即可 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 /** * 在转换异常 获取其他异常下会调用本接口。抛出异常则停止读取。如果这里不抛出异常则 继续读取下一行。 * * @param exception * @param context * @throws Exception */ @Override public void onException (Exception exception, AnalysisContext context)  LOGGER.error( \"解析失败，但是继续解析下一行:\" , exception.getMessage()); // 如果是某一个单元格的转换异常 能获取到具体行号 // 如果要获取头的信息 配合invokeHeadMap使用 if (exception instanceof ExcelDataConvertException)  ExcelDataConvertException excelDataConvertException = (ExcelDataConvertException)exception; LOGGER.error( \"第行，第列解析异常\" , excelDataConvertException.getRowIndex(), excelDataConvertException.getColumnIndex());   代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 /** * 数据转换等异常处理 * * p * 1. 创建excel对应的实体对象 参照 @link ExceptionDemoData * p * 2. 由于默认异步读取excel，所以需要创建excel一行一行的回调监听器，参照 @link DemoExceptionListener * p * 3. 直接读即可 */ @Test public void exceptionRead ()  String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\" ; // 这里 需要指定读用哪个class去读，然后读取第一个sheet EasyExcel.read(fileName, ExceptionDemoData.class, new DemoExceptionListener()).sheet().doRead();  web中的读 示例代码 DEMO代码地址： https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/web/WebTest.java excel示例 参照： excel示例 对象 参照： 对象 只是名字变了 监听器 参照： 监听器 只是泛型变了 代码 1 2 3 4 5 6 7 8 9 10 11 12 /** * 文件上传 * p1. 创建excel对应的实体对象 参照 @link UploadData * p2. 由于默认异步读取excel，所以需要创建excel一行一行的回调监听器，参照 @link UploadDataListener * p3. 直接读即可 */ @PostMapping ( \"upload\" ) @ResponseBody public String upload (MultipartFile file) throws IOException  EasyExcel.read(file.getInputStream(), UploadData.class, new UploadDataListener()).sheet().doRead(); return \"success\" ; "},"quickstart/read.html#最简单的读":{"title":"&#x6700;&#x7B80;&#x5355;&#x7684;&#x8BFB;","path":"/quickstart/read.html#最简单的读","body":"excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; 1 2 3 4 5 6 @Data public class DemoData { private String string; private Date date; private Double doubleData; } &#x76D1;&#x542C;&#x5668; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 // &#x6709;&#x4E2A;&#x5F88;&#x91CD;&#x8981;&#x7684;&#x70B9; DemoDataListener &#x4E0D;&#x80FD;&#x88AB;spring&#x7BA1;&#x7406;&#xFF0C;&#x8981;&#x6BCF;&#x6B21;&#x8BFB;&#x53D6;excel&#x90FD;&#x8981;new,&#x7136;&#x540E;&#x91CC;&#x9762;&#x7528;&#x5230;spring&#x53EF;&#x4EE5;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x4F20;&#x8FDB;&#x53BB; public class DemoDataListener extends AnalysisEventListener  DemoData  { private static final Logger LOGGER = LoggerFactory.getLogger(DemoDataListener.class); /** * &#x6BCF;&#x9694;5&#x6761;&#x5B58;&#x50A8;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x5B9E;&#x9645;&#x4F7F;&#x7528;&#x4E2D;&#x53EF;&#x4EE5;3000&#x6761;&#xFF0C;&#x7136;&#x540E;&#x6E05;&#x7406;list &#xFF0C;&#x65B9;&#x4FBF;&#x5185;&#x5B58;&#x56DE;&#x6536; */ private static final int BATCH_COUNT = 5 ; ListDemoData list = new ArrayListDemoData(); @Override public void invoke (DemoData data, AnalysisContext context) { LOGGER.info( &#x89E3;&#x6790;&#x5230;&#x4E00;&#x6761;&#x6570;&#x636E;:{} , JSON.toJSONString(data)); list.add(data); if (list.size() = BATCH_COUNT) { saveData(); list.clear(); } } @Override public void doAfterAllAnalysed (AnalysisContext context) { saveData(); LOGGER.info( &#x6240;&#x6709;&#x6570;&#x636E;&#x89E3;&#x6790;&#x5B8C;&#x6210;&#xFF01; ); } /** * &#x52A0;&#x4E0A;&#x5B58;&#x50A8;&#x6570;&#x636E;&#x5E93; */ private void saveData () { LOGGER.info( {}&#x6761;&#x6570;&#x636E;&#xFF0C;&#x5F00;&#x59CB;&#x5B58;&#x50A8;&#x6570;&#x636E;&#x5E93;&#xFF01; , list.size()); LOGGER.info( &#x5B58;&#x50A8;&#x6570;&#x636E;&#x5E93;&#x6210;&#x529F;&#xFF01; ); } } &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 /** * &#x6700;&#x7B80;&#x5355;&#x7684;&#x8BFB; * p1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link DemoData} * p2. &#x7531;&#x4E8E;&#x9ED8;&#x8BA4;&#x5F02;&#x6B65;&#x8BFB;&#x53D6;excel&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x521B;&#x5EFA;excel&#x4E00;&#x884C;&#x4E00;&#x884C;&#x7684;&#x56DE;&#x8C03;&#x76D1;&#x542C;&#x5668;&#xFF0C;&#x53C2;&#x7167;{ @link DemoDataListener} * p3. &#x76F4;&#x63A5;&#x8BFB;&#x5373;&#x53EF; */ @Test public void simpleRead () { // &#x6709;&#x4E2A;&#x5F88;&#x91CD;&#x8981;&#x7684;&#x70B9; DemoDataListener &#x4E0D;&#x80FD;&#x88AB;spring&#x7BA1;&#x7406;&#xFF0C;&#x8981;&#x6BCF;&#x6B21;&#x8BFB;&#x53D6;excel&#x90FD;&#x8981;new,&#x7136;&#x540E;&#x91CC;&#x9762;&#x7528;&#x5230;spring&#x53EF;&#x4EE5;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x4F20;&#x8FDB;&#x53BB; // &#x5199;&#x6CD5;1&#xFF1A; String fileName = TestFileUtil.getPath() + demo + File.separator + demo.xlsx ; // &#x8FD9;&#x91CC; &#x9700;&#x8981;&#x6307;&#x5B9A;&#x8BFB;&#x7528;&#x54EA;&#x4E2A;class&#x53BB;&#x8BFB;&#xFF0C;&#x7136;&#x540E;&#x8BFB;&#x53D6;&#x7B2C;&#x4E00;&#x4E2A;sheet &#x6587;&#x4EF6;&#x6D41;&#x4F1A;&#x81EA;&#x52A8;&#x5173;&#x95ED; EasyExcel.read(fileName, DemoData.class, new DemoDataListener()).sheet().doRead(); // &#x5199;&#x6CD5;2&#xFF1A; fileName = TestFileUtil.getPath() + demo + File.separator + demo.xlsx ; ExcelReader excelReader = EasyExcel.read(fileName, DemoData.class, new DemoDataListener()).build(); ReadSheet readSheet = EasyExcel.readSheet( 0 ).build(); excelReader.read(readSheet); // &#x8FD9;&#x91CC;&#x5343;&#x4E07;&#x522B;&#x5FD8;&#x8BB0;&#x5173;&#x95ED;&#xFF0C;&#x8BFB;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x521B;&#x5EFA;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#xFF0C;&#x5230;&#x65F6;&#x78C1;&#x76D8;&#x4F1A;&#x5D29;&#x7684; excelReader.finish(); }"},"quickstart/read.html#指定列的下标或者列名":{"title":"&#x6307;&#x5B9A;&#x5217;&#x7684;&#x4E0B;&#x6807;&#x6216;&#x8005;&#x5217;&#x540D;","path":"/quickstart/read.html#指定列的下标或者列名","body":"excel&#x793A;&#x4F8B; &#x53C2;&#x7167;&#xFF1A; excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 @Data public class IndexOrNameData { /** * &#x5F3A;&#x5236;&#x8BFB;&#x53D6;&#x7B2C;&#x4E09;&#x4E2A; &#x8FD9;&#x91CC;&#x4E0D;&#x5EFA;&#x8BAE; index &#x548C; name &#x540C;&#x65F6;&#x7528;&#xFF0C;&#x8981;&#x4E48;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x53EA;&#x7528;index&#xFF0C;&#x8981;&#x4E48;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x53EA;&#x7528;name&#x53BB;&#x5339;&#x914D; */ @ExcelProperty (index = 2 ) private Double doubleData; /** * &#x7528;&#x540D;&#x5B57;&#x53BB;&#x5339;&#x914D;&#xFF0C;&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x5982;&#x679C;&#x540D;&#x5B57;&#x91CD;&#x590D;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5B57;&#x6BB5;&#x8BFB;&#x53D6;&#x5230;&#x6570;&#x636E; */ @ExcelProperty ( &#x5B57;&#x7B26;&#x4E32;&#x6807;&#x9898; ) private String string; @ExcelProperty ( &#x65E5;&#x671F;&#x6807;&#x9898; ) private Date date; } &#x76D1;&#x542C;&#x5668; &#x53C2;&#x7167;&#xFF1A; &#x76D1;&#x542C;&#x5668; &#x53EA;&#x662F;&#x6CDB;&#x578B;&#x53D8;&#x4E86;&#x800C;&#x5DF2; &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 /** * &#x6307;&#x5B9A;&#x5217;&#x7684;&#x4E0B;&#x6807;&#x6216;&#x8005;&#x5217;&#x540D; * * p1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;,&#x5E76;&#x4F7F;&#x7528;{ @link ExcelProperty}&#x6CE8;&#x89E3;. &#x53C2;&#x7167;{ @link IndexOrNameData} * p2. &#x7531;&#x4E8E;&#x9ED8;&#x8BA4;&#x5F02;&#x6B65;&#x8BFB;&#x53D6;excel&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x521B;&#x5EFA;excel&#x4E00;&#x884C;&#x4E00;&#x884C;&#x7684;&#x56DE;&#x8C03;&#x76D1;&#x542C;&#x5668;&#xFF0C;&#x53C2;&#x7167;{ @link IndexOrNameDataListener} * p3. &#x76F4;&#x63A5;&#x8BFB;&#x5373;&#x53EF; */ @Test public void indexOrNameRead () { String fileName = TestFileUtil.getPath() + demo + File.separator + demo.xlsx ; // &#x8FD9;&#x91CC;&#x9ED8;&#x8BA4;&#x8BFB;&#x53D6;&#x7B2C;&#x4E00;&#x4E2A;sheet EasyExcel.read(fileName, IndexOrNameData.class, new IndexOrNameDataListener()).sheet().doRead(); }"},"quickstart/read.html#读多个sheet":{"title":"&#x8BFB;&#x591A;&#x4E2A;sheet","path":"/quickstart/read.html#读多个sheet","body":"excel&#x793A;&#x4F8B; &#x53C2;&#x7167;&#xFF1A; excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; &#x53C2;&#x7167;&#xFF1A; &#x5BF9;&#x8C61; &#x76D1;&#x542C;&#x5668; &#x53C2;&#x7167;&#xFF1A; &#x76D1;&#x542C;&#x5668; &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 /** * &#x8BFB;&#x591A;&#x4E2A;&#x6216;&#x8005;&#x5168;&#x90E8;sheet,&#x8FD9;&#x91CC;&#x6CE8;&#x610F;&#x4E00;&#x4E2A;sheet&#x4E0D;&#x80FD;&#x8BFB;&#x53D6;&#x591A;&#x6B21;&#xFF0C;&#x591A;&#x6B21;&#x8BFB;&#x53D6;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x8BFB;&#x53D6;&#x6587;&#x4EF6; * p * 1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link DemoData} * p * 2. &#x7531;&#x4E8E;&#x9ED8;&#x8BA4;&#x5F02;&#x6B65;&#x8BFB;&#x53D6;excel&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x521B;&#x5EFA;excel&#x4E00;&#x884C;&#x4E00;&#x884C;&#x7684;&#x56DE;&#x8C03;&#x76D1;&#x542C;&#x5668;&#xFF0C;&#x53C2;&#x7167;{ @link DemoDataListener} * p * 3. &#x76F4;&#x63A5;&#x8BFB;&#x5373;&#x53EF; */ @Test public void repeatedRead () { String fileName = TestFileUtil.getPath() + demo + File.separator + demo.xlsx ; // &#x8BFB;&#x53D6;&#x5168;&#x90E8;sheet // &#x8FD9;&#x91CC;&#x9700;&#x8981;&#x6CE8;&#x610F; DemoDataListener&#x7684;doAfterAllAnalysed &#x4F1A;&#x5728;&#x6BCF;&#x4E2A;sheet&#x8BFB;&#x53D6;&#x5B8C;&#x6BD5;&#x540E;&#x8C03;&#x7528;&#x4E00;&#x6B21;&#x3002;&#x7136;&#x540E;&#x6240;&#x6709;sheet&#x90FD;&#x4F1A;&#x5F80;&#x540C;&#x4E00;&#x4E2A;DemoDataListener&#x91CC;&#x9762;&#x5199; EasyExcel.read(fileName, DemoData.class, new DemoDataListener()).doReadAll(); // &#x8BFB;&#x53D6;&#x90E8;&#x5206;sheet fileName = TestFileUtil.getPath() + demo + File.separator + demo.xlsx ; ExcelReader excelReader = EasyExcel.read(fileName).build(); // &#x8FD9;&#x91CC;&#x4E3A;&#x4E86;&#x7B80;&#x5355; &#x6240;&#x4EE5;&#x6CE8;&#x518C;&#x4E86; &#x540C;&#x6837;&#x7684;head &#x548C;Listener &#x81EA;&#x5DF1;&#x4F7F;&#x7528;&#x529F;&#x80FD;&#x5FC5;&#x987B;&#x4E0D;&#x540C;&#x7684;Listener ReadSheet readSheet1 = EasyExcel.readSheet( 0 ).head(DemoData.class).registerReadListener( new DemoDataListener()).build(); ReadSheet readSheet2 = EasyExcel.readSheet( 1 ).head(DemoData.class).registerReadListener( new DemoDataListener()).build(); // &#x8FD9;&#x91CC;&#x6CE8;&#x610F; &#x4E00;&#x5B9A;&#x8981;&#x628A;sheet1 sheet2 &#x4E00;&#x8D77;&#x4F20;&#x8FDB;&#x53BB;&#xFF0C;&#x4E0D;&#x7136;&#x6709;&#x4E2A;&#x95EE;&#x9898;&#x5C31;&#x662F;03&#x7248;&#x7684;excel &#x4F1A;&#x8BFB;&#x53D6;&#x591A;&#x6B21;&#xFF0C;&#x6D6A;&#x8D39;&#x6027;&#x80FD; excelReader.read(readSheet1, readSheet2); // &#x8FD9;&#x91CC;&#x5343;&#x4E07;&#x522B;&#x5FD8;&#x8BB0;&#x5173;&#x95ED;&#xFF0C;&#x8BFB;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x521B;&#x5EFA;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#xFF0C;&#x5230;&#x65F6;&#x78C1;&#x76D8;&#x4F1A;&#x5D29;&#x7684; excelReader.finish(); }"},"quickstart/read.html#日期、数字或者自定义格式转换":{"title":"&#x65E5;&#x671F;&#x3001;&#x6570;&#x5B57;&#x6216;&#x8005;&#x81EA;&#x5B9A;&#x4E49;&#x683C;&#x5F0F;&#x8F6C;&#x6362;","path":"/quickstart/read.html#日期、数字或者自定义格式转换","body":"excel&#x793A;&#x4F8B; &#x53C2;&#x7167;&#xFF1A; excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 @Data public class ConverterData { /** * &#x6211;&#x81EA;&#x5B9A;&#x4E49; &#x8F6C;&#x6362;&#x5668;&#xFF0C;&#x4E0D;&#x7BA1;&#x6570;&#x636E;&#x5E93;&#x4F20;&#x8FC7;&#x6765;&#x4EC0;&#x4E48; &#x3002;&#x6211;&#x7ED9;&#x4ED6;&#x52A0;&#x4E0A;&#x201C;&#x81EA;&#x5B9A;&#x4E49;&#xFF1A;&#x201D; */ @ExcelProperty (converter = CustomStringStringConverter.class) private String string; /** * &#x8FD9;&#x91CC;&#x7528;string &#x53BB;&#x63A5;&#x65E5;&#x671F;&#x624D;&#x80FD;&#x683C;&#x5F0F;&#x5316;&#x3002;&#x6211;&#x60F3;&#x63A5;&#x6536;&#x5E74;&#x6708;&#x65E5;&#x683C;&#x5F0F; */ @DateTimeFormat ( yyyy&#x5E74;MM&#x6708;dd&#x65E5;HH&#x65F6;mm&#x5206;ss&#x79D2; ) private String date; /** * &#x6211;&#x60F3;&#x63A5;&#x6536;&#x767E;&#x5206;&#x6BD4;&#x7684;&#x6570;&#x5B57; */ @NumberFormat ( #.##% ) private String doubleData; } &#x76D1;&#x542C;&#x5668; &#x53C2;&#x7167;&#xFF1A; &#x76D1;&#x542C;&#x5668; &#x53EA;&#x662F;&#x6CDB;&#x578B;&#x53D8;&#x4E86; &#x81EA;&#x5B9A;&#x4E49;&#x8F6C;&#x6362;&#x5668; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 public class CustomStringStringConverter implements Converter  String  { @Override public Class supportJavaTypeKey () { return String.class; } @Override public CellDataTypeEnum supportExcelTypeKey () { return CellDataTypeEnum.STRING; } /** * &#x8FD9;&#x91CC;&#x8BFB;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x8C03;&#x7528; * * @param cellData * NotNull * @param contentProperty * Nullable * @param globalConfiguration * NotNull * @return */ @Override public String convertToJavaData (CellData cellData, ExcelContentProperty contentProperty, GlobalConfiguration globalConfiguration) { return &#x81EA;&#x5B9A;&#x4E49;&#xFF1A; + cellData.getStringValue(); } /** * &#x8FD9;&#x91CC;&#x662F;&#x5199;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x8C03;&#x7528; &#x4E0D;&#x7528;&#x7BA1; * * @param value * NotNull * @param contentProperty * Nullable * @param globalConfiguration * NotNull * @return */ @Override public CellData convertToExcelData (String value, ExcelContentProperty contentProperty, GlobalConfiguration globalConfiguration) { return new CellData(value); } } &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 /** * &#x65E5;&#x671F;&#x3001;&#x6570;&#x5B57;&#x6216;&#x8005;&#x81EA;&#x5B9A;&#x4E49;&#x683C;&#x5F0F;&#x8F6C;&#x6362; * p * &#x9ED8;&#x8BA4;&#x8BFB;&#x7684;&#x8F6C;&#x6362;&#x5668;{ @link DefaultConverterLoader#loadDefaultReadConverter()} * p1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link ConverterData}.&#x91CC;&#x9762;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x6CE8;&#x89E3;{ @link DateTimeFormat}&#x3001;{ @link NumberFormat}&#x6216;&#x8005;&#x81EA;&#x5B9A;&#x4E49;&#x6CE8;&#x89E3; * p2. &#x7531;&#x4E8E;&#x9ED8;&#x8BA4;&#x5F02;&#x6B65;&#x8BFB;&#x53D6;excel&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x521B;&#x5EFA;excel&#x4E00;&#x884C;&#x4E00;&#x884C;&#x7684;&#x56DE;&#x8C03;&#x76D1;&#x542C;&#x5668;&#xFF0C;&#x53C2;&#x7167;{ @link ConverterDataListener} * p3. &#x76F4;&#x63A5;&#x8BFB;&#x5373;&#x53EF; */ @Test public void converterRead () { String fileName = TestFileUtil.getPath() + demo + File.separator + demo.xlsx ; // &#x8FD9;&#x91CC; &#x9700;&#x8981;&#x6307;&#x5B9A;&#x8BFB;&#x7528;&#x54EA;&#x4E2A;class&#x53BB;&#x8BFB;&#xFF0C;&#x7136;&#x540E;&#x8BFB;&#x53D6;&#x7B2C;&#x4E00;&#x4E2A;sheet EasyExcel.read(fileName, ConverterData.class, new ConverterDataListener()) // &#x8FD9;&#x91CC;&#x6CE8;&#x610F; &#x6211;&#x4EEC;&#x4E5F;&#x53EF;&#x4EE5;registerConverter&#x6765;&#x6307;&#x5B9A;&#x81EA;&#x5B9A;&#x4E49;&#x8F6C;&#x6362;&#x5668;&#xFF0C; &#x4F46;&#x662F;&#x8FD9;&#x4E2A;&#x8F6C;&#x6362;&#x53D8;&#x6210;&#x5168;&#x5C40;&#x4E86;&#xFF0C; &#x6240;&#x6709;java&#x4E3A;string,excel&#x4E3A;string&#x7684;&#x90FD;&#x4F1A;&#x7528;&#x8FD9;&#x4E2A;&#x8F6C;&#x6362;&#x5668;&#x3002; // &#x5982;&#x679C;&#x5C31;&#x60F3;&#x5355;&#x4E2A;&#x5B57;&#x6BB5;&#x4F7F;&#x7528;&#x8BF7;&#x4F7F;&#x7528;@ExcelProperty &#x6307;&#x5B9A;converter // .registerConverter(new CustomStringStringConverter()) // &#x8BFB;&#x53D6;sheet .sheet().doRead(); }"},"quickstart/read.html#多行头":{"title":"&#x591A;&#x884C;&#x5934;","path":"/quickstart/read.html#多行头","body":"excel&#x793A;&#x4F8B; &#x53C2;&#x7167;&#xFF1A; excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; &#x53C2;&#x7167;&#xFF1A; &#x5BF9;&#x8C61; &#x76D1;&#x542C;&#x5668; &#x53C2;&#x7167;&#xFF1A; &#x76D1;&#x542C;&#x5668; &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 /** * &#x591A;&#x884C;&#x5934; * * p1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link DemoData} * p2. &#x7531;&#x4E8E;&#x9ED8;&#x8BA4;&#x5F02;&#x6B65;&#x8BFB;&#x53D6;excel&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x521B;&#x5EFA;excel&#x4E00;&#x884C;&#x4E00;&#x884C;&#x7684;&#x56DE;&#x8C03;&#x76D1;&#x542C;&#x5668;&#xFF0C;&#x53C2;&#x7167;{ @link DemoDataListener} * p3. &#x8BBE;&#x7F6E;headRowNumber&#x53C2;&#x6570;&#xFF0C;&#x7136;&#x540E;&#x8BFB;&#x3002; &#x8FD9;&#x91CC;&#x8981;&#x6CE8;&#x610F;headRowNumber&#x5982;&#x679C;&#x4E0D;&#x6307;&#x5B9A;&#xFF0C; &#x4F1A;&#x6839;&#x636E;&#x4F60;&#x4F20;&#x5165;&#x7684;class&#x7684;{ @link ExcelProperty#value()}&#x91CC;&#x9762;&#x7684;&#x8868;&#x5934;&#x7684;&#x6570;&#x91CF;&#x6765;&#x51B3;&#x5B9A;&#x884C;&#x6570;&#xFF0C; * &#x5982;&#x679C;&#x4E0D;&#x4F20;&#x5165;class&#x5219;&#x9ED8;&#x8BA4;&#x4E3A;1.&#x5F53;&#x7136;&#x4F60;&#x6307;&#x5B9A;&#x4E86;headRowNumber&#x4E0D;&#x7BA1;&#x662F;&#x5426;&#x4F20;&#x5165;class&#x90FD;&#x662F;&#x4EE5;&#x4F60;&#x4F20;&#x5165;&#x7684;&#x4E3A;&#x51C6;&#x3002; */ @Test public void complexHeaderRead () { String fileName = TestFileUtil.getPath() + demo + File.separator + demo.xlsx ; // &#x8FD9;&#x91CC; &#x9700;&#x8981;&#x6307;&#x5B9A;&#x8BFB;&#x7528;&#x54EA;&#x4E2A;class&#x53BB;&#x8BFB;&#xFF0C;&#x7136;&#x540E;&#x8BFB;&#x53D6;&#x7B2C;&#x4E00;&#x4E2A;sheet EasyExcel.read(fileName, DemoData.class, new DemoDataListener()).sheet() // &#x8FD9;&#x91CC;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;1&#xFF0C;&#x56E0;&#x4E3A;&#x5934;&#x5C31;&#x662F;&#x4E00;&#x884C;&#x3002;&#x5982;&#x679C;&#x591A;&#x884C;&#x5934;&#xFF0C;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x5176;&#x4ED6;&#x503C;&#x3002;&#x4E0D;&#x4F20;&#x5165;&#x4E5F;&#x53EF;&#x4EE5;&#xFF0C;&#x56E0;&#x4E3A;&#x9ED8;&#x8BA4;&#x4F1A;&#x6839;&#x636E;DemoData &#x6765;&#x89E3;&#x6790;&#xFF0C;&#x4ED6;&#x6CA1;&#x6709;&#x6307;&#x5B9A;&#x5934;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x9ED8;&#x8BA4;1&#x884C; .headRowNumber( 1 ).doRead(); }"},"quickstart/read.html#同步的返回":{"title":"&#x540C;&#x6B65;&#x7684;&#x8FD4;&#x56DE;","path":"/quickstart/read.html#同步的返回","body":"excel&#x793A;&#x4F8B; &#x53C2;&#x7167;&#xFF1A; excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; &#x53C2;&#x7167;&#xFF1A; &#x5BF9;&#x8C61; &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 /** * &#x540C;&#x6B65;&#x7684;&#x8FD4;&#x56DE;&#xFF0C;&#x4E0D;&#x63A8;&#x8350;&#x4F7F;&#x7528;&#xFF0C;&#x5982;&#x679C;&#x6570;&#x636E;&#x91CF;&#x5927;&#x4F1A;&#x628A;&#x6570;&#x636E;&#x653E;&#x5230;&#x5185;&#x5B58;&#x91CC;&#x9762; */ @Test public void synchronousRead () { String fileName = TestFileUtil.getPath() + demo + File.separator + demo.xlsx ; // &#x8FD9;&#x91CC; &#x9700;&#x8981;&#x6307;&#x5B9A;&#x8BFB;&#x7528;&#x54EA;&#x4E2A;class&#x53BB;&#x8BFB;&#xFF0C;&#x7136;&#x540E;&#x8BFB;&#x53D6;&#x7B2C;&#x4E00;&#x4E2A;sheet &#x540C;&#x6B65;&#x8BFB;&#x53D6;&#x4F1A;&#x81EA;&#x52A8;finish ListObject list = EasyExcel.read(fileName).head(DemoData.class).sheet().doReadSync(); for (Object obj : list) { DemoData data = (DemoData)obj; LOGGER.info( &#x8BFB;&#x53D6;&#x5230;&#x6570;&#x636E;:{} , JSON.toJSONString(data)); } // &#x8FD9;&#x91CC; &#x4E5F;&#x53EF;&#x4EE5;&#x4E0D;&#x6307;&#x5B9A;class&#xFF0C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;list&#xFF0C;&#x7136;&#x540E;&#x8BFB;&#x53D6;&#x7B2C;&#x4E00;&#x4E2A;sheet &#x540C;&#x6B65;&#x8BFB;&#x53D6;&#x4F1A;&#x81EA;&#x52A8;finish list = EasyExcel.read(fileName).sheet().doReadSync(); for (Object obj : list) { // &#x8FD4;&#x56DE;&#x6BCF;&#x6761;&#x6570;&#x636E;&#x7684;&#x952E;&#x503C;&#x5BF9; &#x8868;&#x793A;&#x6240;&#x5728;&#x7684;&#x5217; &#x548C;&#x6240;&#x5728;&#x5217;&#x7684;&#x503C; MapInteger, String data = (MapInteger, String)obj; LOGGER.info( &#x8BFB;&#x53D6;&#x5230;&#x6570;&#x636E;:{} , JSON.toJSONString(data)); } }"},"quickstart/read.html#读取表头数据":{"title":"&#x8BFB;&#x53D6;&#x8868;&#x5934;&#x6570;&#x636E;","path":"/quickstart/read.html#读取表头数据","body":"excel&#x793A;&#x4F8B; &#x53C2;&#x7167;&#xFF1A; excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; &#x53C2;&#x7167;&#xFF1A; &#x5BF9;&#x8C61; &#x76D1;&#x542C;&#x5668; &#x53C2;&#x7167;&#xFF1A; &#x76D1;&#x542C;&#x5668; &#x91CC;&#x9762;&#x591A;&#x4E86;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;,&#x53EA;&#x8981;&#x91CD;&#x5199;invokeHeadMap&#x65B9;&#x6CD5;&#x5373;&#x53EF; 1 2 3 4 5 6 7 8 9 10 /** * &#x8FD9;&#x91CC;&#x4F1A;&#x4E00;&#x884C;&#x884C;&#x7684;&#x8FD4;&#x56DE;&#x5934; * * @param headMap * @param context */ @Override public void invokeHeadMap (MapInteger, String headMap, AnalysisContext context) { LOGGER.info( &#x89E3;&#x6790;&#x5230;&#x4E00;&#x6761;&#x5934;&#x6570;&#x636E;:{} , JSON.toJSONString(headMap)); } &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 /** * &#x8BFB;&#x53D6;&#x8868;&#x5934;&#x6570;&#x636E; * * p * 1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link DemoData} * p * 2. &#x7531;&#x4E8E;&#x9ED8;&#x8BA4;&#x5F02;&#x6B65;&#x8BFB;&#x53D6;excel&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x521B;&#x5EFA;excel&#x4E00;&#x884C;&#x4E00;&#x884C;&#x7684;&#x56DE;&#x8C03;&#x76D1;&#x542C;&#x5668;&#xFF0C;&#x53C2;&#x7167;{ @link DemoHeadDataListener} * p * 3. &#x76F4;&#x63A5;&#x8BFB;&#x5373;&#x53EF; */ @Test public void headerRead () { String fileName = TestFileUtil.getPath() + demo + File.separator + demo.xlsx ; // &#x8FD9;&#x91CC; &#x9700;&#x8981;&#x6307;&#x5B9A;&#x8BFB;&#x7528;&#x54EA;&#x4E2A;class&#x53BB;&#x8BFB;&#xFF0C;&#x7136;&#x540E;&#x8BFB;&#x53D6;&#x7B2C;&#x4E00;&#x4E2A;sheet EasyExcel.read(fileName, DemoData.class, new DemoHeadDataListener()).sheet().doRead(); }"},"quickstart/read.html#数据转换等异常处理":{"title":"&#x6570;&#x636E;&#x8F6C;&#x6362;&#x7B49;&#x5F02;&#x5E38;&#x5904;&#x7406;","path":"/quickstart/read.html#数据转换等异常处理","body":"excel&#x793A;&#x4F8B; &#x53C2;&#x7167;&#xFF1A; excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; 1 2 3 4 5 6 7 @Data public class ExceptionDemoData { /** * &#x7528;&#x65E5;&#x671F;&#x53BB;&#x63A5;&#x5B57;&#x7B26;&#x4E32; &#x80AF;&#x5B9A;&#x62A5;&#x9519; */ private Date date; } &#x76D1;&#x542C;&#x5668; &#x53C2;&#x7167;&#xFF1A; &#x76D1;&#x542C;&#x5668; &#x91CC;&#x9762;&#x591A;&#x4E86;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;,&#x53EA;&#x8981;&#x91CD;&#x5199;onException&#x65B9;&#x6CD5;&#x5373;&#x53EF; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 /** * &#x5728;&#x8F6C;&#x6362;&#x5F02;&#x5E38; &#x83B7;&#x53D6;&#x5176;&#x4ED6;&#x5F02;&#x5E38;&#x4E0B;&#x4F1A;&#x8C03;&#x7528;&#x672C;&#x63A5;&#x53E3;&#x3002;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#x5219;&#x505C;&#x6B62;&#x8BFB;&#x53D6;&#x3002;&#x5982;&#x679C;&#x8FD9;&#x91CC;&#x4E0D;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#x5219; &#x7EE7;&#x7EED;&#x8BFB;&#x53D6;&#x4E0B;&#x4E00;&#x884C;&#x3002; * * @param exception * @param context * @throws Exception */ @Override public void onException (Exception exception, AnalysisContext context) { LOGGER.error( &#x89E3;&#x6790;&#x5931;&#x8D25;&#xFF0C;&#x4F46;&#x662F;&#x7EE7;&#x7EED;&#x89E3;&#x6790;&#x4E0B;&#x4E00;&#x884C;:{} , exception.getMessage()); // &#x5982;&#x679C;&#x662F;&#x67D0;&#x4E00;&#x4E2A;&#x5355;&#x5143;&#x683C;&#x7684;&#x8F6C;&#x6362;&#x5F02;&#x5E38; &#x80FD;&#x83B7;&#x53D6;&#x5230;&#x5177;&#x4F53;&#x884C;&#x53F7; // &#x5982;&#x679C;&#x8981;&#x83B7;&#x53D6;&#x5934;&#x7684;&#x4FE1;&#x606F; &#x914D;&#x5408;invokeHeadMap&#x4F7F;&#x7528; if (exception instanceof ExcelDataConvertException) { ExcelDataConvertException excelDataConvertException = (ExcelDataConvertException)exception; LOGGER.error( &#x7B2C;{}&#x884C;&#xFF0C;&#x7B2C;{}&#x5217;&#x89E3;&#x6790;&#x5F02;&#x5E38; , excelDataConvertException.getRowIndex(), excelDataConvertException.getColumnIndex()); } } &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 /** * &#x6570;&#x636E;&#x8F6C;&#x6362;&#x7B49;&#x5F02;&#x5E38;&#x5904;&#x7406; * * p * 1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link ExceptionDemoData} * p * 2. &#x7531;&#x4E8E;&#x9ED8;&#x8BA4;&#x5F02;&#x6B65;&#x8BFB;&#x53D6;excel&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x521B;&#x5EFA;excel&#x4E00;&#x884C;&#x4E00;&#x884C;&#x7684;&#x56DE;&#x8C03;&#x76D1;&#x542C;&#x5668;&#xFF0C;&#x53C2;&#x7167;{ @link DemoExceptionListener} * p * 3. &#x76F4;&#x63A5;&#x8BFB;&#x5373;&#x53EF; */ @Test public void exceptionRead () { String fileName = TestFileUtil.getPath() + demo + File.separator + demo.xlsx ; // &#x8FD9;&#x91CC; &#x9700;&#x8981;&#x6307;&#x5B9A;&#x8BFB;&#x7528;&#x54EA;&#x4E2A;class&#x53BB;&#x8BFB;&#xFF0C;&#x7136;&#x540E;&#x8BFB;&#x53D6;&#x7B2C;&#x4E00;&#x4E2A;sheet EasyExcel.read(fileName, ExceptionDemoData.class, new DemoExceptionListener()).sheet().doRead(); }"},"quickstart/read.html#web中的读":{"title":"web&#x4E2D;&#x7684;&#x8BFB;","path":"/quickstart/read.html#web中的读","body":"&#x793A;&#x4F8B;&#x4EE3;&#x7801; DEMO&#x4EE3;&#x7801;&#x5730;&#x5740;&#xFF1A; https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/web/WebTest.java excel&#x793A;&#x4F8B; &#x53C2;&#x7167;&#xFF1A; excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; &#x53C2;&#x7167;&#xFF1A; &#x5BF9;&#x8C61; &#x53EA;&#x662F;&#x540D;&#x5B57;&#x53D8;&#x4E86; &#x76D1;&#x542C;&#x5668; &#x53C2;&#x7167;&#xFF1A; &#x76D1;&#x542C;&#x5668; &#x53EA;&#x662F;&#x6CDB;&#x578B;&#x53D8;&#x4E86; &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 /** * &#x6587;&#x4EF6;&#x4E0A;&#x4F20; * p1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link UploadData} * p2. &#x7531;&#x4E8E;&#x9ED8;&#x8BA4;&#x5F02;&#x6B65;&#x8BFB;&#x53D6;excel&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x521B;&#x5EFA;excel&#x4E00;&#x884C;&#x4E00;&#x884C;&#x7684;&#x56DE;&#x8C03;&#x76D1;&#x542C;&#x5668;&#xFF0C;&#x53C2;&#x7167;{ @link UploadDataListener} * p3. &#x76F4;&#x63A5;&#x8BFB;&#x5373;&#x53EF; */ @PostMapping ( upload ) @ResponseBody public String upload (MultipartFile file) throws IOException { EasyExcel.read(file.getInputStream(), UploadData.class, new UploadDataListener()).sheet().doRead(); return success ; }"},"quickstart/write.html":{"title":"写Excel","path":"/quickstart/write.html","body":"通用数据生成 后面不会重复写 1 2 3 4 5 6 7 8 9 10 11 private ListDemoData data ()  ListDemoData list = new ArrayListDemoData(); for ( int i = 0 ; i  10 ; i++)  DemoData data = new DemoData(); data.setString( \"字符串\" + i); data.setDate( new Date()); data.setDoubleData( 0.56 ); list.add(data);  return list;  最简单的写 excel示例 对象 1 2 3 4 5 6 7 8 9 10 11 12 13 14 @Data public class DemoData  @ExcelProperty ( \"字符串标题\" ) private String string; @ExcelProperty ( \"日期标题\" ) private Date date; @ExcelProperty ( \"数字标题\" ) private Double doubleData; /** * 忽略这个字段 */ @ExcelIgnore private String ignore;  代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 /** * 最简单的写 * p1. 创建excel对应的实体对象 参照 @link DemoData * p2. 直接写即可 */ @Test public void simpleWrite ()  // 写法1 String fileName = TestFileUtil.getPath() + \"simpleWrite\" + System.currentTimeMillis() + \".xlsx\" ; // 这里 需要指定写用哪个class去读，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 // 如果这里想使用03 则 传入excelType参数即可 EasyExcel.write(fileName, DemoData.class).sheet( \"模板\" ).doWrite(data()); // 写法2 fileName = TestFileUtil.getPath() + \"simpleWrite\" + System.currentTimeMillis() + \".xlsx\" ; // 这里 需要指定写用哪个class去读 ExcelWriter excelWriter = EasyExcel.write(fileName, DemoData.class).build(); WriteSheet writeSheet = EasyExcel.writerSheet( \"模板\" ).build(); excelWriter.write(data(), writeSheet); /// 千万别忘记finish 会帮忙关闭流 excelWriter.finish();  指定写入的列 excel示例 对象 1 2 3 4 5 6 7 8 9 10 11 12 @Data public class IndexData  @ExcelProperty (value = \"字符串标题\" , index = 0 ) private String string; @ExcelProperty (value = \"日期标题\" , index = 1 ) private Date date; /** * 这里设置3 会导致第二列空的 */ @ExcelProperty (value = \"数字标题\" , index = 3 ) private Double doubleData;  代码 1 2 3 4 5 6 7 8 9 10 11 12 /** * 指定写入的列 * p1. 创建excel对应的实体对象 参照 @link IndexData * p2. 使用 @link ExcelProperty注解指定写入的列 * p3. 直接写即可 */ @Test public void indexWrite ()  String fileName = TestFileUtil.getPath() + \"indexWrite\" + System.currentTimeMillis() + \".xlsx\" ; // 这里 需要指定写用哪个class去读，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, IndexData.class).sheet( \"模板\" ).doWrite(data());  复杂头写入 excel示例 对象 1 2 3 4 5 6 7 8 9 @Data public class ComplexHeadData  @ExcelProperty ( \"主标题\" , \"字符串标题\" ) private String string; @ExcelProperty ( \"主标题\" , \"日期标题\" ) private Date date; @ExcelProperty ( \"主标题\" , \"数字标题\" ) private Double doubleData;  代码 1 2 3 4 5 6 7 8 9 10 11 12 /** * 复杂头写入 * p1. 创建excel对应的实体对象 参照 @link ComplexHeadData * p2. 使用 @link ExcelProperty注解指定复杂的头 * p3. 直接写即可 */ @Test public void complexHeadWrite ()  String fileName = TestFileUtil.getPath() + \"complexHeadWrite\" + System.currentTimeMillis() + \".xlsx\" ; // 这里 需要指定写用哪个class去读，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, ComplexHeadData.class).sheet( \"模板\" ).doWrite(data());  重复多次写入 excel示例 对象 参照： 对象 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 /** * 重复多次写入 * p * 1. 创建excel对应的实体对象 参照 @link ComplexHeadData * p * 2. 使用 @link ExcelProperty注解指定复杂的头 * p * 3. 直接调用二次写入即可 */ @Test public void repeatedWrite ()  // 方法1 如果写到同一个sheet String fileName = TestFileUtil.getPath() + \"repeatedWrite\" + System.currentTimeMillis() + \".xlsx\" ; // 这里 需要指定写用哪个class去读 ExcelWriter excelWriter = EasyExcel.write(fileName, DemoData.class).build(); // 这里注意 如果同一个sheet只要创建一次 WriteSheet writeSheet = EasyExcel.writerSheet( \"模板\" ).build(); // 去调用写入,这里我调用了五次，实际使用时根据数据库分页的总的页数来 for ( int i = 0 ; i  5 ; i++)  // 分页去数据库查询数据 这里可以去数据库查询每一页的数据 ListDemoData data = data(); excelWriter.write(data, writeSheet);  /// 千万别忘记finish 会帮忙关闭流 excelWriter.finish(); // 方法2 如果写到不同的sheet 同一个对象 fileName = TestFileUtil.getPath() + \"repeatedWrite\" + System.currentTimeMillis() + \".xlsx\" ; // 这里 指定文件 excelWriter = EasyExcel.write(fileName, DemoData.class).build(); // 去调用写入,这里我调用了五次，实际使用时根据数据库分页的总的页数来。这里最终会写到5个sheet里面 for ( int i = 0 ; i  5 ; i++)  // 每次都要创建writeSheet 这里注意必须指定sheetNo writeSheet = EasyExcel.writerSheet(i, \"模板\" ).build(); // 分页去数据库查询数据 这里可以去数据库查询每一页的数据 ListDemoData data = data(); excelWriter.write(data, writeSheet);  /// 千万别忘记finish 会帮忙关闭流 excelWriter.finish(); // 方法3 如果写到不同的sheet 不同的对象 fileName = TestFileUtil.getPath() + \"repeatedWrite\" + System.currentTimeMillis() + \".xlsx\" ; // 这里 指定文件 excelWriter = EasyExcel.write(fileName).build(); // 去调用写入,这里我调用了五次，实际使用时根据数据库分页的总的页数来。这里最终会写到5个sheet里面 for ( int i = 0 ; i  5 ; i++)  // 每次都要创建writeSheet 这里注意必须指定sheetNo。这里注意DemoData.class 可以每次都变，我这里为了方便 所以用的同一个class 实际上可以一直变 writeSheet = EasyExcel.writerSheet(i, \"模板\" ).head(DemoData.class).build(); // 分页去数据库查询数据 这里可以去数据库查询每一页的数据 ListDemoData data = data(); excelWriter.write(data, writeSheet);  /// 千万别忘记finish 会帮忙关闭流 excelWriter.finish();  日期、数字或者自定义格式转换 excel示例 对象 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 @Data public class ConverterData  /** * 我想所有的 字符串起前面加上\"自定义：\"三个字 */ @ExcelProperty (value = \"字符串标题\" , converter = CustomStringStringConverter.class) private String string; /** * 我想写到excel 用年月日的格式 */ @DateTimeFormat ( \"yyyy年MM月dd日HH时mm分ss秒\" ) @ExcelProperty ( \"日期标题\" ) private Date date; /** * 我想写到excel 用百分比表示 */ @NumberFormat ( \"#.##%\" ) @ExcelProperty (value = \"数字标题\" ) private Double doubleData;  代码 1 2 3 4 5 6 7 8 9 10 11 12 /** * 日期、数字或者自定义格式转换 * p1. 创建excel对应的实体对象 参照 @link ConverterData * p2. 使用 @link ExcelProperty配合使用注解 @link DateTimeFormat、 @link NumberFormat或者自定义注解 * p3. 直接写即可 */ @Test public void converterWrite ()  String fileName = TestFileUtil.getPath() + \"converterWrite\" + System.currentTimeMillis() + \".xlsx\" ; // 这里 需要指定写用哪个class去读，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, ConverterData.class).sheet( \"模板\" ).doWrite(data());  图片导出 excel示例 对象 1 2 3 4 5 6 7 8 9 10 11 12 13 @Data @ContentRowHeight ( 100 ) @ColumnWidth ( 100 / 8 ) public class ImageData  private File file; private InputStream inputStream; /** * 如果string类型 必须指定转换器，string默认转换成string */ @ExcelProperty (converter = StringImageConverter.class) private String string; private byte [] byteArray;  代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 /** * 图片导出 * p1. 创建excel对应的实体对象 参照 @link ImageData * p2. 直接写即可 */ @Test public void imageWrite () throws Exception  String fileName = TestFileUtil.getPath() + \"imageWrite\" + System.currentTimeMillis() + \".xlsx\" ; // 如果使用流 记得关闭 InputStream inputStream = null ; try  ListImageData list = new ArrayListImageData(); ImageData imageData = new ImageData(); list.add(imageData); String imagePath = TestFileUtil.getPath() + \"converter\" + File.separator + \"img.jpg\" ; // 放入四种类型的图片 实际使用只要选一种即可 imageData.setByteArray(FileUtils.readFileToByteArray( new File(imagePath))); imageData.setFile( new File(imagePath)); imageData.setString(imagePath); inputStream = FileUtils.openInputStream( new File(imagePath)); imageData.setInputStream(inputStream); EasyExcel.write(fileName, ImageData.class).sheet().doWrite(list);  finally  if (inputStream != null )  inputStream.close();    根据模板写入 模板excel示例 参照： 模板excel示例 excel示例 对象 参照： 对象 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 /** * 根据模板写入 * p1. 创建excel对应的实体对象 参照 @link IndexData * p2. 使用 @link ExcelProperty注解指定写入的列 * p3. 使用withTemplate 读取模板 * p4. 直接写即可 */ @Test public void templateWrite ()  String templateFileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\" ; String fileName = TestFileUtil.getPath() + \"templateWrite\" + System.currentTimeMillis() + \".xlsx\" ; // 这里 需要指定写用哪个class去读，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, DemoData.class).withTemplate(templateFileName).sheet().doWrite(data());  列宽、行高 excel示例 对象 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 @Data @ContentRowHeight ( 10 ) @HeadRowHeight ( 20 ) @ColumnWidth ( 25 ) public class WidthAndHeightData  @ExcelProperty ( \"字符串标题\" ) private String string; @ExcelProperty ( \"日期标题\" ) private Date date; /** * 宽度为50 */ @ColumnWidth ( 50 ) @ExcelProperty ( \"数字标题\" ) private Double doubleData;  代码 1 2 3 4 5 6 7 8 9 10 11 12 /** * 列宽、行高 * p1. 创建excel对应的实体对象 参照 @link WidthAndHeightData * p2. 使用注解 @link ColumnWidth、 @link HeadRowHeight、 @link ContentRowHeight指定宽度或高度 * p3. 直接写即可 */ @Test public void widthAndHeightWrite ()  String fileName = TestFileUtil.getPath() + \"widthAndHeightWrite\" + System.currentTimeMillis() + \".xlsx\" ; // 这里 需要指定写用哪个class去读，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, WidthAndHeightData.class).sheet( \"模板\" ).doWrite(data());  自定义样式 excel示例 对象 参照： 对象 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 /** * 自定义样式 * p1. 创建excel对应的实体对象 参照 @link DemoData * p2. 创建一个style策略 并注册 * p3. 直接写即可 */ @Test public void styleWrite ()  String fileName = TestFileUtil.getPath() + \"styleWrite\" + System.currentTimeMillis() + \".xlsx\" ; // 头的策略 WriteCellStyle headWriteCellStyle = new WriteCellStyle(); // 背景设置为红色 headWriteCellStyle.setFillForegroundColor(IndexedColors.RED.getIndex()); WriteFont headWriteFont = new WriteFont(); headWriteFont.setFontHeightInPoints(( short ) 20 ); headWriteCellStyle.setWriteFont(headWriteFont); // 内容的策略 WriteCellStyle contentWriteCellStyle = new WriteCellStyle(); // 这里需要指定 FillPatternType 为FillPatternType.SOLID_FOREGROUND 不然无法显示背景颜色.头默认了 FillPatternType所以可以不指定 contentWriteCellStyle.setFillPatternType(FillPatternType.SOLID_FOREGROUND); // 背景绿色 contentWriteCellStyle.setFillForegroundColor(IndexedColors.GREEN.getIndex()); WriteFont contentWriteFont = new WriteFont(); // 字体大小 contentWriteFont.setFontHeightInPoints(( short ) 20 ); contentWriteCellStyle.setWriteFont(contentWriteFont); // 这个策略是 头是头的样式 内容是内容的样式 其他的策略可以自己实现 HorizontalCellStyleStrategy horizontalCellStyleStrategy = new HorizontalCellStyleStrategy(headWriteCellStyle, contentWriteCellStyle); // 这里 需要指定写用哪个class去读，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, DemoData.class).registerWriteHandler(horizontalCellStyleStrategy).sheet( \"模板\" ) .doWrite(data());  合并单元格 excel示例 对象 参照： 对象 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 /** * 合并单元格 * p1. 创建excel对应的实体对象 参照 @link DemoData * p2. 创建一个merge策略 并注册 * p3. 直接写即可 */ @Test public void mergeWrite ()  String fileName = TestFileUtil.getPath() + \"mergeWrite\" + System.currentTimeMillis() + \".xlsx\" ; // 每隔2行会合并 把eachColumn 设置成 3 也就是我们数据的长度，所以就第一列会合并。当然其他合并策略也可以自己写 LoopMergeStrategy loopMergeStrategy = new LoopMergeStrategy( 2 , 0 ); // 这里 需要指定写用哪个class去读，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, DemoData.class).registerWriteHandler(loopMergeStrategy).sheet( \"模板\" ) .doWrite(data());  使用table去写入 excel示例 对象 参照： 对象 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 /** * 使用table去写入 * p1. 创建excel对应的实体对象 参照 @link DemoData * p2. 然后写入table即可 */ @Test public void tableWrite ()  String fileName = TestFileUtil.getPath() + \"tableWrite\" + System.currentTimeMillis() + \".xlsx\" ; // 这里直接写多个table的案例了，如果只有一个 也可以直一行代码搞定，参照其他案例 // 这里 需要指定写用哪个class去读 ExcelWriter excelWriter = EasyExcel.write(fileName, DemoData.class).build(); // 把sheet设置为不需要头 不然会输出sheet的头 这样看起来第一个table 就有2个头了 WriteSheet writeSheet = EasyExcel.writerSheet( \"模板\" ).needHead(Boolean.FALSE).build(); // 这里必须指定需要头，table 会继承sheet的配置，sheet配置了不需要，table 默认也是不需要 WriteTable writeTable0 = EasyExcel.writerTable( 0 ).needHead(Boolean.TRUE).build(); WriteTable writeTable1 = EasyExcel.writerTable( 1 ).needHead(Boolean.TRUE).build(); // 第一次写入会创建头 excelWriter.write(data(), writeSheet, writeTable0); // 第二次写如也会创建头，然后在第一次的后面写入数据 excelWriter.write(data(), writeSheet, writeTable1); /// 千万别忘记finish 会帮忙关闭流 excelWriter.finish();  动态头，实时生成头写入 excel示例 对象 参照： 对象 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 /** * 动态头，实时生成头写入 * p * 思路是这样子的，先创建ListString头格式的sheet仅仅写入头,然后通过table 不写入头的方式 去写入数据 * * p * 1. 创建excel对应的实体对象 参照 @link DemoData * p * 2. 然后写入table即可 */ @Test public void dynamicHeadWrite ()  String fileName = TestFileUtil.getPath() + \"dynamicHeadWrite\" + System.currentTimeMillis() + \".xlsx\" ; EasyExcel.write(fileName) // 这里放入动态头 .head(head()).sheet( \"模板\" ) // 当然这里数据也可以用 ListListString 去传入 .doWrite(data());  private ListListString head()  ListListString list = new ArrayListListString(); ListString head0 = new ArrayListString(); head0.add( \"字符串\" + System.currentTimeMillis()); ListString head1 = new ArrayListString(); head1.add( \"数字\" + System.currentTimeMillis()); ListString head2 = new ArrayListString(); head2.add( \"日期\" + System.currentTimeMillis()); list.add(head0); list.add(head1); list.add(head2); return list;  自动列宽(不太精确) excel示例 对象 1 2 3 4 5 6 7 8 9 @Data public class LongestMatchColumnWidthData  @ExcelProperty ( \"字符串标题\" ) private String string; @ExcelProperty ( \"日期标题很长日期标题很长日期标题很长很长\" ) private Date date; @ExcelProperty ( \"数字\" ) private Double doubleData;  代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 /** * 自动列宽(不太精确) * p * 这个目前不是很好用，比如有数字就会导致换行。而且长度也不是刚好和实际长度一致。 所以需要精确到刚好列宽的慎用。 当然也可以自己参照 *  @link LongestMatchColumnWidthStyleStrategy重新实现. * p * poi 自带 @link SXSSFSheet#autoSizeColumn(int) 对中文支持也不太好。目前没找到很好的算法。 有的话可以推荐下。 * * p * 1. 创建excel对应的实体对象 参照 @link LongestMatchColumnWidthData * p * 2. 注册策略 @link LongestMatchColumnWidthStyleStrategy * p * 3. 直接写即可 */ @Test public void longestMatchColumnWidthWrite ()  String fileName = TestFileUtil.getPath() + \"longestMatchColumnWidthWrite\" + System.currentTimeMillis() + \".xlsx\" ; // 这里 需要指定写用哪个class去读，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, LongestMatchColumnWidthData.class) .registerWriteHandler( new LongestMatchColumnWidthStyleStrategy()).sheet( \"模板\" ).doWrite(dataLong());  private ListLongestMatchColumnWidthData dataLong ()  ListLongestMatchColumnWidthData list = new ArrayListLongestMatchColumnWidthData(); for ( int i = 0 ; i  10 ; i++)  LongestMatchColumnWidthData data = new LongestMatchColumnWidthData(); data.setString( \"测试很长的字符串测试很长的字符串测试很长的字符串\" + i); data.setDate( new Date()); data.setDoubleData( 1000000000000.0 ); list.add(data);  return list;  自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个） excel示例 对象 参照： 对象 定义拦截器 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 /** * 自定义拦截器。对第一行第一列的头超链接到:https://github.com/alibaba/easyexcel * * @author Jiaju Zhuang */ public class CustomCellWriteHandler implements CellWriteHandler  private static final Logger LOGGER = LoggerFactory.getLogger(CustomCellWriteHandler.class); @Override public void beforeCellCreate (WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Row row, Head head, Integer columnIndex, Integer relativeRowIndex, Boolean isHead)   @Override public void afterCellCreate (WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead)   @Override public void afterCellDispose (WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, ListCellData cellDataList, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead)  // 这里可以对cell进行任何操作 LOGGER.info( \"第行，第列写入完成。\" , cell.getRowIndex(), cell.getColumnIndex()); if (isHead &amp;&amp; cell.getColumnIndex() == 0 )  CreationHelper createHelper = writeSheetHolder.getSheet().getWorkbook().getCreationHelper(); Hyperlink hyperlink = createHelper.createHyperlink(HyperlinkType.URL); hyperlink.setAddress( \"https://github.com/alibaba/easyexcel\" ); cell.setHyperlink(hyperlink);    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 /** * 自定义拦截器.对第一列第一行和第二行的数据新增下拉框，显示 测试1 测试2 * * @author Jiaju Zhuang */ public class CustomSheetWriteHandler implements SheetWriteHandler  private static final Logger LOGGER = LoggerFactory.getLogger(CustomSheetWriteHandler.class); @Override public void beforeSheetCreate (WriteWorkbookHolder writeWorkbookHolder, WriteSheetHolder writeSheetHolder)   @Override public void afterSheetCreate (WriteWorkbookHolder writeWorkbookHolder, WriteSheetHolder writeSheetHolder)  LOGGER.info( \"第个Sheet写入成功。\" , writeSheetHolder.getSheetNo()); // 区间设置 第一列第一行和第二行的数据。由于第一行是头，所以第一、二行的数据实际上是第二三行 CellRangeAddressList cellRangeAddressList = new CellRangeAddressList( 1 , 2 , 0 , 0 ); DataValidationHelper helper = writeSheetHolder.getSheet().getDataValidationHelper(); DataValidationConstraint constraint = helper.createExplicitListConstraint( new String[]  \"测试1\" , \"测试2\" ); DataValidation dataValidation = helper.createValidation(constraint, cellRangeAddressList); writeSheetHolder.getSheet().addValidationData(dataValidation);   代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 /** * 下拉，超链接等自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个） * p * demo这里实现2点。1. 对第一行第一列的头超链接到:https://github.com/alibaba/easyexcel 2. 对第一列第一行和第二行的数据新增下拉框，显示 测试1 测试2 * p * 1. 创建excel对应的实体对象 参照 @link DemoData * p * 2. 注册拦截器  @link CustomCellWriteHandler  @link CustomSheetWriteHandler * p * 2. 直接写即可 */ @Test public void customHandlerWrite ()  String fileName = TestFileUtil.getPath() + \"customHandlerWrite\" + System.currentTimeMillis() + \".xlsx\" ; // 这里 需要指定写用哪个class去读，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, DemoData.class).registerWriteHandler( new CustomSheetWriteHandler()) .registerWriteHandler( new CustomCellWriteHandler()).sheet( \"模板\" ).doWrite(data());  web中的写 示例代码 DEMO代码地址： https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/web/WebTest.java 对象 参照： 对象 就是名称变了下 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 /** * 文件下载 * p * 1. 创建excel对应的实体对象 参照 @link DownloadData * p * 2. 设置返回的 参数 * p * 3. 直接写，这里注意，finish的时候会自动关闭OutputStream,当然你外面再关闭流问题不大 */ @GetMapping ( \"download\" ) public void download (HttpServletResponse response) throws IOException  // 这里注意 有同学反应使用swagger 会导致各种问题，请直接用浏览器或者用postman response.setContentType( \"application/vnd.ms-excel\" ); response.setCharacterEncoding( \"utf-8\" ); // 这里URLEncoder.encode可以防止中文乱码 当然和easyexcel没有关系 String fileName = URLEncoder.encode( \"测试\" , \"UTF-8\" ); response.setHeader( \"Content-disposition\" , \"attachment;filename=\" + fileName + \".xlsx\" ); EasyExcel.write(response.getOutputStream(), DownloadData.class).sheet( \"模板\" ).doWrite(data()); "},"quickstart/write.html#最简单的写":{"title":"&#x6700;&#x7B80;&#x5355;&#x7684;&#x5199;","path":"/quickstart/write.html#最简单的写","body":"excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 @Data public class DemoData { @ExcelProperty ( &#x5B57;&#x7B26;&#x4E32;&#x6807;&#x9898; ) private String string; @ExcelProperty ( &#x65E5;&#x671F;&#x6807;&#x9898; ) private Date date; @ExcelProperty ( &#x6570;&#x5B57;&#x6807;&#x9898; ) private Double doubleData; /** * &#x5FFD;&#x7565;&#x8FD9;&#x4E2A;&#x5B57;&#x6BB5; */ @ExcelIgnore private String ignore; } &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 /** * &#x6700;&#x7B80;&#x5355;&#x7684;&#x5199; * p1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link DemoData} * p2. &#x76F4;&#x63A5;&#x5199;&#x5373;&#x53EF; */ @Test public void simpleWrite () { // &#x5199;&#x6CD5;1 String fileName = TestFileUtil.getPath() + simpleWrite + System.currentTimeMillis() + .xlsx ; // &#x8FD9;&#x91CC; &#x9700;&#x8981;&#x6307;&#x5B9A;&#x5199;&#x7528;&#x54EA;&#x4E2A;class&#x53BB;&#x8BFB;&#xFF0C;&#x7136;&#x540E;&#x5199;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;sheet&#xFF0C;&#x540D;&#x5B57;&#x4E3A;&#x6A21;&#x677F; &#x7136;&#x540E;&#x6587;&#x4EF6;&#x6D41;&#x4F1A;&#x81EA;&#x52A8;&#x5173;&#x95ED; // &#x5982;&#x679C;&#x8FD9;&#x91CC;&#x60F3;&#x4F7F;&#x7528;03 &#x5219; &#x4F20;&#x5165;excelType&#x53C2;&#x6570;&#x5373;&#x53EF; EasyExcel.write(fileName, DemoData.class).sheet( &#x6A21;&#x677F; ).doWrite(data()); // &#x5199;&#x6CD5;2 fileName = TestFileUtil.getPath() + simpleWrite + System.currentTimeMillis() + .xlsx ; // &#x8FD9;&#x91CC; &#x9700;&#x8981;&#x6307;&#x5B9A;&#x5199;&#x7528;&#x54EA;&#x4E2A;class&#x53BB;&#x8BFB; ExcelWriter excelWriter = EasyExcel.write(fileName, DemoData.class).build(); WriteSheet writeSheet = EasyExcel.writerSheet( &#x6A21;&#x677F; ).build(); excelWriter.write(data(), writeSheet); /// &#x5343;&#x4E07;&#x522B;&#x5FD8;&#x8BB0;finish &#x4F1A;&#x5E2E;&#x5FD9;&#x5173;&#x95ED;&#x6D41; excelWriter.finish(); }"},"quickstart/write.html#指定写入的列":{"title":"&#x6307;&#x5B9A;&#x5199;&#x5165;&#x7684;&#x5217;","path":"/quickstart/write.html#指定写入的列","body":"excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; 1 2 3 4 5 6 7 8 9 10 11 12 @Data public class IndexData { @ExcelProperty (value = &#x5B57;&#x7B26;&#x4E32;&#x6807;&#x9898; , index = 0 ) private String string; @ExcelProperty (value = &#x65E5;&#x671F;&#x6807;&#x9898; , index = 1 ) private Date date; /** * &#x8FD9;&#x91CC;&#x8BBE;&#x7F6E;3 &#x4F1A;&#x5BFC;&#x81F4;&#x7B2C;&#x4E8C;&#x5217;&#x7A7A;&#x7684; */ @ExcelProperty (value = &#x6570;&#x5B57;&#x6807;&#x9898; , index = 3 ) private Double doubleData; } &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 /** * &#x6307;&#x5B9A;&#x5199;&#x5165;&#x7684;&#x5217; * p1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link IndexData} * p2. &#x4F7F;&#x7528;{ @link ExcelProperty}&#x6CE8;&#x89E3;&#x6307;&#x5B9A;&#x5199;&#x5165;&#x7684;&#x5217; * p3. &#x76F4;&#x63A5;&#x5199;&#x5373;&#x53EF; */ @Test public void indexWrite () { String fileName = TestFileUtil.getPath() + indexWrite + System.currentTimeMillis() + .xlsx ; // &#x8FD9;&#x91CC; &#x9700;&#x8981;&#x6307;&#x5B9A;&#x5199;&#x7528;&#x54EA;&#x4E2A;class&#x53BB;&#x8BFB;&#xFF0C;&#x7136;&#x540E;&#x5199;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;sheet&#xFF0C;&#x540D;&#x5B57;&#x4E3A;&#x6A21;&#x677F; &#x7136;&#x540E;&#x6587;&#x4EF6;&#x6D41;&#x4F1A;&#x81EA;&#x52A8;&#x5173;&#x95ED; EasyExcel.write(fileName, IndexData.class).sheet( &#x6A21;&#x677F; ).doWrite(data()); }"},"quickstart/write.html#复杂头写入":{"title":"&#x590D;&#x6742;&#x5934;&#x5199;&#x5165;","path":"/quickstart/write.html#复杂头写入","body":"excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; 1 2 3 4 5 6 7 8 9 @Data public class ComplexHeadData { @ExcelProperty ({ &#x4E3B;&#x6807;&#x9898; , &#x5B57;&#x7B26;&#x4E32;&#x6807;&#x9898; }) private String string; @ExcelProperty ({ &#x4E3B;&#x6807;&#x9898; , &#x65E5;&#x671F;&#x6807;&#x9898; }) private Date date; @ExcelProperty ({ &#x4E3B;&#x6807;&#x9898; , &#x6570;&#x5B57;&#x6807;&#x9898; }) private Double doubleData; } &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 /** * &#x590D;&#x6742;&#x5934;&#x5199;&#x5165; * p1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link ComplexHeadData} * p2. &#x4F7F;&#x7528;{ @link ExcelProperty}&#x6CE8;&#x89E3;&#x6307;&#x5B9A;&#x590D;&#x6742;&#x7684;&#x5934; * p3. &#x76F4;&#x63A5;&#x5199;&#x5373;&#x53EF; */ @Test public void complexHeadWrite () { String fileName = TestFileUtil.getPath() + complexHeadWrite + System.currentTimeMillis() + .xlsx ; // &#x8FD9;&#x91CC; &#x9700;&#x8981;&#x6307;&#x5B9A;&#x5199;&#x7528;&#x54EA;&#x4E2A;class&#x53BB;&#x8BFB;&#xFF0C;&#x7136;&#x540E;&#x5199;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;sheet&#xFF0C;&#x540D;&#x5B57;&#x4E3A;&#x6A21;&#x677F; &#x7136;&#x540E;&#x6587;&#x4EF6;&#x6D41;&#x4F1A;&#x81EA;&#x52A8;&#x5173;&#x95ED; EasyExcel.write(fileName, ComplexHeadData.class).sheet( &#x6A21;&#x677F; ).doWrite(data()); }"},"quickstart/write.html#重复多次写入":{"title":"&#x91CD;&#x590D;&#x591A;&#x6B21;&#x5199;&#x5165;","path":"/quickstart/write.html#重复多次写入","body":"excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; &#x53C2;&#x7167;&#xFF1A; &#x5BF9;&#x8C61; &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 /** * &#x91CD;&#x590D;&#x591A;&#x6B21;&#x5199;&#x5165; * p * 1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link ComplexHeadData} * p * 2. &#x4F7F;&#x7528;{ @link ExcelProperty}&#x6CE8;&#x89E3;&#x6307;&#x5B9A;&#x590D;&#x6742;&#x7684;&#x5934; * p * 3. &#x76F4;&#x63A5;&#x8C03;&#x7528;&#x4E8C;&#x6B21;&#x5199;&#x5165;&#x5373;&#x53EF; */ @Test public void repeatedWrite () { // &#x65B9;&#x6CD5;1 &#x5982;&#x679C;&#x5199;&#x5230;&#x540C;&#x4E00;&#x4E2A;sheet String fileName = TestFileUtil.getPath() + repeatedWrite + System.currentTimeMillis() + .xlsx ; // &#x8FD9;&#x91CC; &#x9700;&#x8981;&#x6307;&#x5B9A;&#x5199;&#x7528;&#x54EA;&#x4E2A;class&#x53BB;&#x8BFB; ExcelWriter excelWriter = EasyExcel.write(fileName, DemoData.class).build(); // &#x8FD9;&#x91CC;&#x6CE8;&#x610F; &#x5982;&#x679C;&#x540C;&#x4E00;&#x4E2A;sheet&#x53EA;&#x8981;&#x521B;&#x5EFA;&#x4E00;&#x6B21; WriteSheet writeSheet = EasyExcel.writerSheet( &#x6A21;&#x677F; ).build(); // &#x53BB;&#x8C03;&#x7528;&#x5199;&#x5165;,&#x8FD9;&#x91CC;&#x6211;&#x8C03;&#x7528;&#x4E86;&#x4E94;&#x6B21;&#xFF0C;&#x5B9E;&#x9645;&#x4F7F;&#x7528;&#x65F6;&#x6839;&#x636E;&#x6570;&#x636E;&#x5E93;&#x5206;&#x9875;&#x7684;&#x603B;&#x7684;&#x9875;&#x6570;&#x6765; for ( int i = 0 ; i  5 ; i++) { // &#x5206;&#x9875;&#x53BB;&#x6570;&#x636E;&#x5E93;&#x67E5;&#x8BE2;&#x6570;&#x636E; &#x8FD9;&#x91CC;&#x53EF;&#x4EE5;&#x53BB;&#x6570;&#x636E;&#x5E93;&#x67E5;&#x8BE2;&#x6BCF;&#x4E00;&#x9875;&#x7684;&#x6570;&#x636E; ListDemoData data = data(); excelWriter.write(data, writeSheet); } /// &#x5343;&#x4E07;&#x522B;&#x5FD8;&#x8BB0;finish &#x4F1A;&#x5E2E;&#x5FD9;&#x5173;&#x95ED;&#x6D41; excelWriter.finish(); // &#x65B9;&#x6CD5;2 &#x5982;&#x679C;&#x5199;&#x5230;&#x4E0D;&#x540C;&#x7684;sheet &#x540C;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61; fileName = TestFileUtil.getPath() + repeatedWrite + System.currentTimeMillis() + .xlsx ; // &#x8FD9;&#x91CC; &#x6307;&#x5B9A;&#x6587;&#x4EF6; excelWriter = EasyExcel.write(fileName, DemoData.class).build(); // &#x53BB;&#x8C03;&#x7528;&#x5199;&#x5165;,&#x8FD9;&#x91CC;&#x6211;&#x8C03;&#x7528;&#x4E86;&#x4E94;&#x6B21;&#xFF0C;&#x5B9E;&#x9645;&#x4F7F;&#x7528;&#x65F6;&#x6839;&#x636E;&#x6570;&#x636E;&#x5E93;&#x5206;&#x9875;&#x7684;&#x603B;&#x7684;&#x9875;&#x6570;&#x6765;&#x3002;&#x8FD9;&#x91CC;&#x6700;&#x7EC8;&#x4F1A;&#x5199;&#x5230;5&#x4E2A;sheet&#x91CC;&#x9762; for ( int i = 0 ; i  5 ; i++) { // &#x6BCF;&#x6B21;&#x90FD;&#x8981;&#x521B;&#x5EFA;writeSheet &#x8FD9;&#x91CC;&#x6CE8;&#x610F;&#x5FC5;&#x987B;&#x6307;&#x5B9A;sheetNo writeSheet = EasyExcel.writerSheet(i, &#x6A21;&#x677F; ).build(); // &#x5206;&#x9875;&#x53BB;&#x6570;&#x636E;&#x5E93;&#x67E5;&#x8BE2;&#x6570;&#x636E; &#x8FD9;&#x91CC;&#x53EF;&#x4EE5;&#x53BB;&#x6570;&#x636E;&#x5E93;&#x67E5;&#x8BE2;&#x6BCF;&#x4E00;&#x9875;&#x7684;&#x6570;&#x636E; ListDemoData data = data(); excelWriter.write(data, writeSheet); } /// &#x5343;&#x4E07;&#x522B;&#x5FD8;&#x8BB0;finish &#x4F1A;&#x5E2E;&#x5FD9;&#x5173;&#x95ED;&#x6D41; excelWriter.finish(); // &#x65B9;&#x6CD5;3 &#x5982;&#x679C;&#x5199;&#x5230;&#x4E0D;&#x540C;&#x7684;sheet &#x4E0D;&#x540C;&#x7684;&#x5BF9;&#x8C61; fileName = TestFileUtil.getPath() + repeatedWrite + System.currentTimeMillis() + .xlsx ; // &#x8FD9;&#x91CC; &#x6307;&#x5B9A;&#x6587;&#x4EF6; excelWriter = EasyExcel.write(fileName).build(); // &#x53BB;&#x8C03;&#x7528;&#x5199;&#x5165;,&#x8FD9;&#x91CC;&#x6211;&#x8C03;&#x7528;&#x4E86;&#x4E94;&#x6B21;&#xFF0C;&#x5B9E;&#x9645;&#x4F7F;&#x7528;&#x65F6;&#x6839;&#x636E;&#x6570;&#x636E;&#x5E93;&#x5206;&#x9875;&#x7684;&#x603B;&#x7684;&#x9875;&#x6570;&#x6765;&#x3002;&#x8FD9;&#x91CC;&#x6700;&#x7EC8;&#x4F1A;&#x5199;&#x5230;5&#x4E2A;sheet&#x91CC;&#x9762; for ( int i = 0 ; i  5 ; i++) { // &#x6BCF;&#x6B21;&#x90FD;&#x8981;&#x521B;&#x5EFA;writeSheet &#x8FD9;&#x91CC;&#x6CE8;&#x610F;&#x5FC5;&#x987B;&#x6307;&#x5B9A;sheetNo&#x3002;&#x8FD9;&#x91CC;&#x6CE8;&#x610F;DemoData.class &#x53EF;&#x4EE5;&#x6BCF;&#x6B21;&#x90FD;&#x53D8;&#xFF0C;&#x6211;&#x8FD9;&#x91CC;&#x4E3A;&#x4E86;&#x65B9;&#x4FBF; &#x6240;&#x4EE5;&#x7528;&#x7684;&#x540C;&#x4E00;&#x4E2A;class &#x5B9E;&#x9645;&#x4E0A;&#x53EF;&#x4EE5;&#x4E00;&#x76F4;&#x53D8; writeSheet = EasyExcel.writerSheet(i, &#x6A21;&#x677F; ).head(DemoData.class).build(); // &#x5206;&#x9875;&#x53BB;&#x6570;&#x636E;&#x5E93;&#x67E5;&#x8BE2;&#x6570;&#x636E; &#x8FD9;&#x91CC;&#x53EF;&#x4EE5;&#x53BB;&#x6570;&#x636E;&#x5E93;&#x67E5;&#x8BE2;&#x6BCF;&#x4E00;&#x9875;&#x7684;&#x6570;&#x636E; ListDemoData data = data(); excelWriter.write(data, writeSheet); } /// &#x5343;&#x4E07;&#x522B;&#x5FD8;&#x8BB0;finish &#x4F1A;&#x5E2E;&#x5FD9;&#x5173;&#x95ED;&#x6D41; excelWriter.finish(); }"},"quickstart/write.html#日期、数字或者自定义格式转换":{"title":"&#x65E5;&#x671F;&#x3001;&#x6570;&#x5B57;&#x6216;&#x8005;&#x81EA;&#x5B9A;&#x4E49;&#x683C;&#x5F0F;&#x8F6C;&#x6362;","path":"/quickstart/write.html#日期、数字或者自定义格式转换","body":"excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 @Data public class ConverterData { /** * &#x6211;&#x60F3;&#x6240;&#x6709;&#x7684; &#x5B57;&#x7B26;&#x4E32;&#x8D77;&#x524D;&#x9762;&#x52A0;&#x4E0A;&#x81EA;&#x5B9A;&#x4E49;&#xFF1A;&#x4E09;&#x4E2A;&#x5B57; */ @ExcelProperty (value = &#x5B57;&#x7B26;&#x4E32;&#x6807;&#x9898; , converter = CustomStringStringConverter.class) private String string; /** * &#x6211;&#x60F3;&#x5199;&#x5230;excel &#x7528;&#x5E74;&#x6708;&#x65E5;&#x7684;&#x683C;&#x5F0F; */ @DateTimeFormat ( yyyy&#x5E74;MM&#x6708;dd&#x65E5;HH&#x65F6;mm&#x5206;ss&#x79D2; ) @ExcelProperty ( &#x65E5;&#x671F;&#x6807;&#x9898; ) private Date date; /** * &#x6211;&#x60F3;&#x5199;&#x5230;excel &#x7528;&#x767E;&#x5206;&#x6BD4;&#x8868;&#x793A; */ @NumberFormat ( #.##% ) @ExcelProperty (value = &#x6570;&#x5B57;&#x6807;&#x9898; ) private Double doubleData; } &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 /** * &#x65E5;&#x671F;&#x3001;&#x6570;&#x5B57;&#x6216;&#x8005;&#x81EA;&#x5B9A;&#x4E49;&#x683C;&#x5F0F;&#x8F6C;&#x6362; * p1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link ConverterData} * p2. &#x4F7F;&#x7528;{ @link ExcelProperty}&#x914D;&#x5408;&#x4F7F;&#x7528;&#x6CE8;&#x89E3;{ @link DateTimeFormat}&#x3001;{ @link NumberFormat}&#x6216;&#x8005;&#x81EA;&#x5B9A;&#x4E49;&#x6CE8;&#x89E3; * p3. &#x76F4;&#x63A5;&#x5199;&#x5373;&#x53EF; */ @Test public void converterWrite () { String fileName = TestFileUtil.getPath() + converterWrite + System.currentTimeMillis() + .xlsx ; // &#x8FD9;&#x91CC; &#x9700;&#x8981;&#x6307;&#x5B9A;&#x5199;&#x7528;&#x54EA;&#x4E2A;class&#x53BB;&#x8BFB;&#xFF0C;&#x7136;&#x540E;&#x5199;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;sheet&#xFF0C;&#x540D;&#x5B57;&#x4E3A;&#x6A21;&#x677F; &#x7136;&#x540E;&#x6587;&#x4EF6;&#x6D41;&#x4F1A;&#x81EA;&#x52A8;&#x5173;&#x95ED; EasyExcel.write(fileName, ConverterData.class).sheet( &#x6A21;&#x677F; ).doWrite(data()); }"},"quickstart/write.html#图片导出":{"title":"&#x56FE;&#x7247;&#x5BFC;&#x51FA;","path":"/quickstart/write.html#图片导出","body":"excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; 1 2 3 4 5 6 7 8 9 10 11 12 13 @Data @ContentRowHeight ( 100 ) @ColumnWidth ( 100 / 8 ) public class ImageData { private File file; private InputStream inputStream; /** * &#x5982;&#x679C;string&#x7C7B;&#x578B; &#x5FC5;&#x987B;&#x6307;&#x5B9A;&#x8F6C;&#x6362;&#x5668;&#xFF0C;string&#x9ED8;&#x8BA4;&#x8F6C;&#x6362;&#x6210;string */ @ExcelProperty (converter = StringImageConverter.class) private String string; private byte [] byteArray; } &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 /** * &#x56FE;&#x7247;&#x5BFC;&#x51FA; * p1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link ImageData} * p2. &#x76F4;&#x63A5;&#x5199;&#x5373;&#x53EF; */ @Test public void imageWrite () throws Exception { String fileName = TestFileUtil.getPath() + imageWrite + System.currentTimeMillis() + .xlsx ; // &#x5982;&#x679C;&#x4F7F;&#x7528;&#x6D41; &#x8BB0;&#x5F97;&#x5173;&#x95ED; InputStream inputStream = null ; try { ListImageData list = new ArrayListImageData(); ImageData imageData = new ImageData(); list.add(imageData); String imagePath = TestFileUtil.getPath() + converter + File.separator + img.jpg ; // &#x653E;&#x5165;&#x56DB;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x56FE;&#x7247; &#x5B9E;&#x9645;&#x4F7F;&#x7528;&#x53EA;&#x8981;&#x9009;&#x4E00;&#x79CD;&#x5373;&#x53EF; imageData.setByteArray(FileUtils.readFileToByteArray( new File(imagePath))); imageData.setFile( new File(imagePath)); imageData.setString(imagePath); inputStream = FileUtils.openInputStream( new File(imagePath)); imageData.setInputStream(inputStream); EasyExcel.write(fileName, ImageData.class).sheet().doWrite(list); } finally { if (inputStream != null ) { inputStream.close(); } } }"},"quickstart/write.html#根据模板写入":{"title":"&#x6839;&#x636E;&#x6A21;&#x677F;&#x5199;&#x5165;","path":"/quickstart/write.html#根据模板写入","body":"&#x6A21;&#x677F;excel&#x793A;&#x4F8B; &#x53C2;&#x7167;&#xFF1A; &#x6A21;&#x677F;excel&#x793A;&#x4F8B; excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; &#x53C2;&#x7167;&#xFF1A; &#x5BF9;&#x8C61; &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 /** * &#x6839;&#x636E;&#x6A21;&#x677F;&#x5199;&#x5165; * p1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link IndexData} * p2. &#x4F7F;&#x7528;{ @link ExcelProperty}&#x6CE8;&#x89E3;&#x6307;&#x5B9A;&#x5199;&#x5165;&#x7684;&#x5217; * p3. &#x4F7F;&#x7528;withTemplate &#x8BFB;&#x53D6;&#x6A21;&#x677F; * p4. &#x76F4;&#x63A5;&#x5199;&#x5373;&#x53EF; */ @Test public void templateWrite () { String templateFileName = TestFileUtil.getPath() + demo + File.separator + demo.xlsx ; String fileName = TestFileUtil.getPath() + templateWrite + System.currentTimeMillis() + .xlsx ; // &#x8FD9;&#x91CC; &#x9700;&#x8981;&#x6307;&#x5B9A;&#x5199;&#x7528;&#x54EA;&#x4E2A;class&#x53BB;&#x8BFB;&#xFF0C;&#x7136;&#x540E;&#x5199;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;sheet&#xFF0C;&#x540D;&#x5B57;&#x4E3A;&#x6A21;&#x677F; &#x7136;&#x540E;&#x6587;&#x4EF6;&#x6D41;&#x4F1A;&#x81EA;&#x52A8;&#x5173;&#x95ED; EasyExcel.write(fileName, DemoData.class).withTemplate(templateFileName).sheet().doWrite(data()); }"},"quickstart/write.html#列宽、行高":{"title":"&#x5217;&#x5BBD;&#x3001;&#x884C;&#x9AD8;","path":"/quickstart/write.html#列宽、行高","body":"excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 @Data @ContentRowHeight ( 10 ) @HeadRowHeight ( 20 ) @ColumnWidth ( 25 ) public class WidthAndHeightData { @ExcelProperty ( &#x5B57;&#x7B26;&#x4E32;&#x6807;&#x9898; ) private String string; @ExcelProperty ( &#x65E5;&#x671F;&#x6807;&#x9898; ) private Date date; /** * &#x5BBD;&#x5EA6;&#x4E3A;50 */ @ColumnWidth ( 50 ) @ExcelProperty ( &#x6570;&#x5B57;&#x6807;&#x9898; ) private Double doubleData; } &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 /** * &#x5217;&#x5BBD;&#x3001;&#x884C;&#x9AD8; * p1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link WidthAndHeightData} * p2. &#x4F7F;&#x7528;&#x6CE8;&#x89E3;{ @link ColumnWidth}&#x3001;{ @link HeadRowHeight}&#x3001;{ @link ContentRowHeight}&#x6307;&#x5B9A;&#x5BBD;&#x5EA6;&#x6216;&#x9AD8;&#x5EA6; * p3. &#x76F4;&#x63A5;&#x5199;&#x5373;&#x53EF; */ @Test public void widthAndHeightWrite () { String fileName = TestFileUtil.getPath() + widthAndHeightWrite + System.currentTimeMillis() + .xlsx ; // &#x8FD9;&#x91CC; &#x9700;&#x8981;&#x6307;&#x5B9A;&#x5199;&#x7528;&#x54EA;&#x4E2A;class&#x53BB;&#x8BFB;&#xFF0C;&#x7136;&#x540E;&#x5199;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;sheet&#xFF0C;&#x540D;&#x5B57;&#x4E3A;&#x6A21;&#x677F; &#x7136;&#x540E;&#x6587;&#x4EF6;&#x6D41;&#x4F1A;&#x81EA;&#x52A8;&#x5173;&#x95ED; EasyExcel.write(fileName, WidthAndHeightData.class).sheet( &#x6A21;&#x677F; ).doWrite(data()); }"},"quickstart/write.html#自定义样式":{"title":"&#x81EA;&#x5B9A;&#x4E49;&#x6837;&#x5F0F;","path":"/quickstart/write.html#自定义样式","body":"excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; &#x53C2;&#x7167;&#xFF1A; &#x5BF9;&#x8C61; &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 /** * &#x81EA;&#x5B9A;&#x4E49;&#x6837;&#x5F0F; * p1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link DemoData} * p2. &#x521B;&#x5EFA;&#x4E00;&#x4E2A;style&#x7B56;&#x7565; &#x5E76;&#x6CE8;&#x518C; * p3. &#x76F4;&#x63A5;&#x5199;&#x5373;&#x53EF; */ @Test public void styleWrite () { String fileName = TestFileUtil.getPath() + styleWrite + System.currentTimeMillis() + .xlsx ; // &#x5934;&#x7684;&#x7B56;&#x7565; WriteCellStyle headWriteCellStyle = new WriteCellStyle(); // &#x80CC;&#x666F;&#x8BBE;&#x7F6E;&#x4E3A;&#x7EA2;&#x8272; headWriteCellStyle.setFillForegroundColor(IndexedColors.RED.getIndex()); WriteFont headWriteFont = new WriteFont(); headWriteFont.setFontHeightInPoints(( short ) 20 ); headWriteCellStyle.setWriteFont(headWriteFont); // &#x5185;&#x5BB9;&#x7684;&#x7B56;&#x7565; WriteCellStyle contentWriteCellStyle = new WriteCellStyle(); // &#x8FD9;&#x91CC;&#x9700;&#x8981;&#x6307;&#x5B9A; FillPatternType &#x4E3A;FillPatternType.SOLID_FOREGROUND &#x4E0D;&#x7136;&#x65E0;&#x6CD5;&#x663E;&#x793A;&#x80CC;&#x666F;&#x989C;&#x8272;.&#x5934;&#x9ED8;&#x8BA4;&#x4E86; FillPatternType&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x4E0D;&#x6307;&#x5B9A; contentWriteCellStyle.setFillPatternType(FillPatternType.SOLID_FOREGROUND); // &#x80CC;&#x666F;&#x7EFF;&#x8272; contentWriteCellStyle.setFillForegroundColor(IndexedColors.GREEN.getIndex()); WriteFont contentWriteFont = new WriteFont(); // &#x5B57;&#x4F53;&#x5927;&#x5C0F; contentWriteFont.setFontHeightInPoints(( short ) 20 ); contentWriteCellStyle.setWriteFont(contentWriteFont); // &#x8FD9;&#x4E2A;&#x7B56;&#x7565;&#x662F; &#x5934;&#x662F;&#x5934;&#x7684;&#x6837;&#x5F0F; &#x5185;&#x5BB9;&#x662F;&#x5185;&#x5BB9;&#x7684;&#x6837;&#x5F0F; &#x5176;&#x4ED6;&#x7684;&#x7B56;&#x7565;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0; HorizontalCellStyleStrategy horizontalCellStyleStrategy = new HorizontalCellStyleStrategy(headWriteCellStyle, contentWriteCellStyle); // &#x8FD9;&#x91CC; &#x9700;&#x8981;&#x6307;&#x5B9A;&#x5199;&#x7528;&#x54EA;&#x4E2A;class&#x53BB;&#x8BFB;&#xFF0C;&#x7136;&#x540E;&#x5199;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;sheet&#xFF0C;&#x540D;&#x5B57;&#x4E3A;&#x6A21;&#x677F; &#x7136;&#x540E;&#x6587;&#x4EF6;&#x6D41;&#x4F1A;&#x81EA;&#x52A8;&#x5173;&#x95ED; EasyExcel.write(fileName, DemoData.class).registerWriteHandler(horizontalCellStyleStrategy).sheet( &#x6A21;&#x677F; ) .doWrite(data()); }"},"quickstart/write.html#合并单元格":{"title":"&#x5408;&#x5E76;&#x5355;&#x5143;&#x683C;","path":"/quickstart/write.html#合并单元格","body":"excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; &#x53C2;&#x7167;&#xFF1A; &#x5BF9;&#x8C61; &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 /** * &#x5408;&#x5E76;&#x5355;&#x5143;&#x683C; * p1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link DemoData} * p2. &#x521B;&#x5EFA;&#x4E00;&#x4E2A;merge&#x7B56;&#x7565; &#x5E76;&#x6CE8;&#x518C; * p3. &#x76F4;&#x63A5;&#x5199;&#x5373;&#x53EF; */ @Test public void mergeWrite () { String fileName = TestFileUtil.getPath() + mergeWrite + System.currentTimeMillis() + .xlsx ; // &#x6BCF;&#x9694;2&#x884C;&#x4F1A;&#x5408;&#x5E76; &#x628A;eachColumn &#x8BBE;&#x7F6E;&#x6210; 3 &#x4E5F;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x6570;&#x636E;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x6240;&#x4EE5;&#x5C31;&#x7B2C;&#x4E00;&#x5217;&#x4F1A;&#x5408;&#x5E76;&#x3002;&#x5F53;&#x7136;&#x5176;&#x4ED6;&#x5408;&#x5E76;&#x7B56;&#x7565;&#x4E5F;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x5199; LoopMergeStrategy loopMergeStrategy = new LoopMergeStrategy( 2 , 0 ); // &#x8FD9;&#x91CC; &#x9700;&#x8981;&#x6307;&#x5B9A;&#x5199;&#x7528;&#x54EA;&#x4E2A;class&#x53BB;&#x8BFB;&#xFF0C;&#x7136;&#x540E;&#x5199;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;sheet&#xFF0C;&#x540D;&#x5B57;&#x4E3A;&#x6A21;&#x677F; &#x7136;&#x540E;&#x6587;&#x4EF6;&#x6D41;&#x4F1A;&#x81EA;&#x52A8;&#x5173;&#x95ED; EasyExcel.write(fileName, DemoData.class).registerWriteHandler(loopMergeStrategy).sheet( &#x6A21;&#x677F; ) .doWrite(data()); }"},"quickstart/write.html#使用table去写入":{"title":"&#x4F7F;&#x7528;table&#x53BB;&#x5199;&#x5165;","path":"/quickstart/write.html#使用table去写入","body":"excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; &#x53C2;&#x7167;&#xFF1A; &#x5BF9;&#x8C61; &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 /** * &#x4F7F;&#x7528;table&#x53BB;&#x5199;&#x5165; * p1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link DemoData} * p2. &#x7136;&#x540E;&#x5199;&#x5165;table&#x5373;&#x53EF; */ @Test public void tableWrite () { String fileName = TestFileUtil.getPath() + tableWrite + System.currentTimeMillis() + .xlsx ; // &#x8FD9;&#x91CC;&#x76F4;&#x63A5;&#x5199;&#x591A;&#x4E2A;table&#x7684;&#x6848;&#x4F8B;&#x4E86;&#xFF0C;&#x5982;&#x679C;&#x53EA;&#x6709;&#x4E00;&#x4E2A; &#x4E5F;&#x53EF;&#x4EE5;&#x76F4;&#x4E00;&#x884C;&#x4EE3;&#x7801;&#x641E;&#x5B9A;&#xFF0C;&#x53C2;&#x7167;&#x5176;&#x4ED6;&#x6848;&#x4F8B; // &#x8FD9;&#x91CC; &#x9700;&#x8981;&#x6307;&#x5B9A;&#x5199;&#x7528;&#x54EA;&#x4E2A;class&#x53BB;&#x8BFB; ExcelWriter excelWriter = EasyExcel.write(fileName, DemoData.class).build(); // &#x628A;sheet&#x8BBE;&#x7F6E;&#x4E3A;&#x4E0D;&#x9700;&#x8981;&#x5934; &#x4E0D;&#x7136;&#x4F1A;&#x8F93;&#x51FA;sheet&#x7684;&#x5934; &#x8FD9;&#x6837;&#x770B;&#x8D77;&#x6765;&#x7B2C;&#x4E00;&#x4E2A;table &#x5C31;&#x6709;2&#x4E2A;&#x5934;&#x4E86; WriteSheet writeSheet = EasyExcel.writerSheet( &#x6A21;&#x677F; ).needHead(Boolean.FALSE).build(); // &#x8FD9;&#x91CC;&#x5FC5;&#x987B;&#x6307;&#x5B9A;&#x9700;&#x8981;&#x5934;&#xFF0C;table &#x4F1A;&#x7EE7;&#x627F;sheet&#x7684;&#x914D;&#x7F6E;&#xFF0C;sheet&#x914D;&#x7F6E;&#x4E86;&#x4E0D;&#x9700;&#x8981;&#xFF0C;table &#x9ED8;&#x8BA4;&#x4E5F;&#x662F;&#x4E0D;&#x9700;&#x8981; WriteTable writeTable0 = EasyExcel.writerTable( 0 ).needHead(Boolean.TRUE).build(); WriteTable writeTable1 = EasyExcel.writerTable( 1 ).needHead(Boolean.TRUE).build(); // &#x7B2C;&#x4E00;&#x6B21;&#x5199;&#x5165;&#x4F1A;&#x521B;&#x5EFA;&#x5934; excelWriter.write(data(), writeSheet, writeTable0); // &#x7B2C;&#x4E8C;&#x6B21;&#x5199;&#x5982;&#x4E5F;&#x4F1A;&#x521B;&#x5EFA;&#x5934;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x7B2C;&#x4E00;&#x6B21;&#x7684;&#x540E;&#x9762;&#x5199;&#x5165;&#x6570;&#x636E; excelWriter.write(data(), writeSheet, writeTable1); /// &#x5343;&#x4E07;&#x522B;&#x5FD8;&#x8BB0;finish &#x4F1A;&#x5E2E;&#x5FD9;&#x5173;&#x95ED;&#x6D41; excelWriter.finish(); }"},"quickstart/write.html#动态头，实时生成头写入":{"title":"&#x52A8;&#x6001;&#x5934;&#xFF0C;&#x5B9E;&#x65F6;&#x751F;&#x6210;&#x5934;&#x5199;&#x5165;","path":"/quickstart/write.html#动态头，实时生成头写入","body":"excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; &#x53C2;&#x7167;&#xFF1A; &#x5BF9;&#x8C61; &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 /** * &#x52A8;&#x6001;&#x5934;&#xFF0C;&#x5B9E;&#x65F6;&#x751F;&#x6210;&#x5934;&#x5199;&#x5165; * p * &#x601D;&#x8DEF;&#x662F;&#x8FD9;&#x6837;&#x5B50;&#x7684;&#xFF0C;&#x5148;&#x521B;&#x5EFA;ListString&#x5934;&#x683C;&#x5F0F;&#x7684;sheet&#x4EC5;&#x4EC5;&#x5199;&#x5165;&#x5934;,&#x7136;&#x540E;&#x901A;&#x8FC7;table &#x4E0D;&#x5199;&#x5165;&#x5934;&#x7684;&#x65B9;&#x5F0F; &#x53BB;&#x5199;&#x5165;&#x6570;&#x636E; * * p * 1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link DemoData} * p * 2. &#x7136;&#x540E;&#x5199;&#x5165;table&#x5373;&#x53EF; */ @Test public void dynamicHeadWrite () { String fileName = TestFileUtil.getPath() + dynamicHeadWrite + System.currentTimeMillis() + .xlsx ; EasyExcel.write(fileName) // &#x8FD9;&#x91CC;&#x653E;&#x5165;&#x52A8;&#x6001;&#x5934; .head(head()).sheet( &#x6A21;&#x677F; ) // &#x5F53;&#x7136;&#x8FD9;&#x91CC;&#x6570;&#x636E;&#x4E5F;&#x53EF;&#x4EE5;&#x7528; ListListString &#x53BB;&#x4F20;&#x5165; .doWrite(data()); } private ListListString head() { ListListString list = new ArrayListListString(); ListString head0 = new ArrayListString(); head0.add( &#x5B57;&#x7B26;&#x4E32; + System.currentTimeMillis()); ListString head1 = new ArrayListString(); head1.add( &#x6570;&#x5B57; + System.currentTimeMillis()); ListString head2 = new ArrayListString(); head2.add( &#x65E5;&#x671F; + System.currentTimeMillis()); list.add(head0); list.add(head1); list.add(head2); return list; }"},"quickstart/write.html#自动列宽-不太精确":{"title":"&#x81EA;&#x52A8;&#x5217;&#x5BBD;(&#x4E0D;&#x592A;&#x7CBE;&#x786E;)","path":"/quickstart/write.html#自动列宽-不太精确","body":"excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; 1 2 3 4 5 6 7 8 9 @Data public class LongestMatchColumnWidthData { @ExcelProperty ( &#x5B57;&#x7B26;&#x4E32;&#x6807;&#x9898; ) private String string; @ExcelProperty ( &#x65E5;&#x671F;&#x6807;&#x9898;&#x5F88;&#x957F;&#x65E5;&#x671F;&#x6807;&#x9898;&#x5F88;&#x957F;&#x65E5;&#x671F;&#x6807;&#x9898;&#x5F88;&#x957F;&#x5F88;&#x957F; ) private Date date; @ExcelProperty ( &#x6570;&#x5B57; ) private Double doubleData; } &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 /** * &#x81EA;&#x52A8;&#x5217;&#x5BBD;(&#x4E0D;&#x592A;&#x7CBE;&#x786E;) * p * &#x8FD9;&#x4E2A;&#x76EE;&#x524D;&#x4E0D;&#x662F;&#x5F88;&#x597D;&#x7528;&#xFF0C;&#x6BD4;&#x5982;&#x6709;&#x6570;&#x5B57;&#x5C31;&#x4F1A;&#x5BFC;&#x81F4;&#x6362;&#x884C;&#x3002;&#x800C;&#x4E14;&#x957F;&#x5EA6;&#x4E5F;&#x4E0D;&#x662F;&#x521A;&#x597D;&#x548C;&#x5B9E;&#x9645;&#x957F;&#x5EA6;&#x4E00;&#x81F4;&#x3002; &#x6240;&#x4EE5;&#x9700;&#x8981;&#x7CBE;&#x786E;&#x5230;&#x521A;&#x597D;&#x5217;&#x5BBD;&#x7684;&#x614E;&#x7528;&#x3002; &#x5F53;&#x7136;&#x4E5F;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x53C2;&#x7167; * { @link LongestMatchColumnWidthStyleStrategy}&#x91CD;&#x65B0;&#x5B9E;&#x73B0;. * p * poi &#x81EA;&#x5E26;{ @link SXSSFSheet#autoSizeColumn(int)} &#x5BF9;&#x4E2D;&#x6587;&#x652F;&#x6301;&#x4E5F;&#x4E0D;&#x592A;&#x597D;&#x3002;&#x76EE;&#x524D;&#x6CA1;&#x627E;&#x5230;&#x5F88;&#x597D;&#x7684;&#x7B97;&#x6CD5;&#x3002; &#x6709;&#x7684;&#x8BDD;&#x53EF;&#x4EE5;&#x63A8;&#x8350;&#x4E0B;&#x3002; * * p * 1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link LongestMatchColumnWidthData} * p * 2. &#x6CE8;&#x518C;&#x7B56;&#x7565;{ @link LongestMatchColumnWidthStyleStrategy} * p * 3. &#x76F4;&#x63A5;&#x5199;&#x5373;&#x53EF; */ @Test public void longestMatchColumnWidthWrite () { String fileName = TestFileUtil.getPath() + longestMatchColumnWidthWrite + System.currentTimeMillis() + .xlsx ; // &#x8FD9;&#x91CC; &#x9700;&#x8981;&#x6307;&#x5B9A;&#x5199;&#x7528;&#x54EA;&#x4E2A;class&#x53BB;&#x8BFB;&#xFF0C;&#x7136;&#x540E;&#x5199;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;sheet&#xFF0C;&#x540D;&#x5B57;&#x4E3A;&#x6A21;&#x677F; &#x7136;&#x540E;&#x6587;&#x4EF6;&#x6D41;&#x4F1A;&#x81EA;&#x52A8;&#x5173;&#x95ED; EasyExcel.write(fileName, LongestMatchColumnWidthData.class) .registerWriteHandler( new LongestMatchColumnWidthStyleStrategy()).sheet( &#x6A21;&#x677F; ).doWrite(dataLong()); } private ListLongestMatchColumnWidthData dataLong () { ListLongestMatchColumnWidthData list = new ArrayListLongestMatchColumnWidthData(); for ( int i = 0 ; i  10 ; i++) { LongestMatchColumnWidthData data = new LongestMatchColumnWidthData(); data.setString( &#x6D4B;&#x8BD5;&#x5F88;&#x957F;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x6D4B;&#x8BD5;&#x5F88;&#x957F;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x6D4B;&#x8BD5;&#x5F88;&#x957F;&#x7684;&#x5B57;&#x7B26;&#x4E32; + i); data.setDate( new Date()); data.setDoubleData( 1000000000000.0 ); list.add(data); } return list; }"},"quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）":{"title":"&#x81EA;&#x5B9A;&#x4E49;&#x62E6;&#x622A;&#x5668;&#xFF08;&#x4E0A;&#x9762;&#x51E0;&#x70B9;&#x90FD;&#x4E0D;&#x7B26;&#x5408;&#x4F46;&#x662F;&#x8981;&#x5BF9;&#x5355;&#x5143;&#x683C;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#x7684;&#x53C2;&#x7167;&#x8FD9;&#x4E2A;&#xFF09;","path":"/quickstart/write.html#自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）","body":"excel&#x793A;&#x4F8B; &#x5BF9;&#x8C61; &#x53C2;&#x7167;&#xFF1A; &#x5BF9;&#x8C61; &#x5B9A;&#x4E49;&#x62E6;&#x622A;&#x5668; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 /** * &#x81EA;&#x5B9A;&#x4E49;&#x62E6;&#x622A;&#x5668;&#x3002;&#x5BF9;&#x7B2C;&#x4E00;&#x884C;&#x7B2C;&#x4E00;&#x5217;&#x7684;&#x5934;&#x8D85;&#x94FE;&#x63A5;&#x5230;:https://github.com/alibaba/easyexcel * * @author Jiaju Zhuang */ public class CustomCellWriteHandler implements CellWriteHandler { private static final Logger LOGGER = LoggerFactory.getLogger(CustomCellWriteHandler.class); @Override public void beforeCellCreate (WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Row row, Head head, Integer columnIndex, Integer relativeRowIndex, Boolean isHead) { } @Override public void afterCellCreate (WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) { } @Override public void afterCellDispose (WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, ListCellData cellDataList, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) { // &#x8FD9;&#x91CC;&#x53EF;&#x4EE5;&#x5BF9;cell&#x8FDB;&#x884C;&#x4EFB;&#x4F55;&#x64CD;&#x4F5C; LOGGER.info( &#x7B2C;{}&#x884C;&#xFF0C;&#x7B2C;{}&#x5217;&#x5199;&#x5165;&#x5B8C;&#x6210;&#x3002; , cell.getRowIndex(), cell.getColumnIndex()); if (isHead &amp;&amp; cell.getColumnIndex() == 0 ) { CreationHelper createHelper = writeSheetHolder.getSheet().getWorkbook().getCreationHelper(); Hyperlink hyperlink = createHelper.createHyperlink(HyperlinkType.URL); hyperlink.setAddress( https://github.com/alibaba/easyexcel ); cell.setHyperlink(hyperlink); } } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 /** * &#x81EA;&#x5B9A;&#x4E49;&#x62E6;&#x622A;&#x5668;.&#x5BF9;&#x7B2C;&#x4E00;&#x5217;&#x7B2C;&#x4E00;&#x884C;&#x548C;&#x7B2C;&#x4E8C;&#x884C;&#x7684;&#x6570;&#x636E;&#x65B0;&#x589E;&#x4E0B;&#x62C9;&#x6846;&#xFF0C;&#x663E;&#x793A; &#x6D4B;&#x8BD5;1 &#x6D4B;&#x8BD5;2 * * @author Jiaju Zhuang */ public class CustomSheetWriteHandler implements SheetWriteHandler { private static final Logger LOGGER = LoggerFactory.getLogger(CustomSheetWriteHandler.class); @Override public void beforeSheetCreate (WriteWorkbookHolder writeWorkbookHolder, WriteSheetHolder writeSheetHolder) { } @Override public void afterSheetCreate (WriteWorkbookHolder writeWorkbookHolder, WriteSheetHolder writeSheetHolder) { LOGGER.info( &#x7B2C;{}&#x4E2A;Sheet&#x5199;&#x5165;&#x6210;&#x529F;&#x3002; , writeSheetHolder.getSheetNo()); // &#x533A;&#x95F4;&#x8BBE;&#x7F6E; &#x7B2C;&#x4E00;&#x5217;&#x7B2C;&#x4E00;&#x884C;&#x548C;&#x7B2C;&#x4E8C;&#x884C;&#x7684;&#x6570;&#x636E;&#x3002;&#x7531;&#x4E8E;&#x7B2C;&#x4E00;&#x884C;&#x662F;&#x5934;&#xFF0C;&#x6240;&#x4EE5;&#x7B2C;&#x4E00;&#x3001;&#x4E8C;&#x884C;&#x7684;&#x6570;&#x636E;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x7B2C;&#x4E8C;&#x4E09;&#x884C; CellRangeAddressList cellRangeAddressList = new CellRangeAddressList( 1 , 2 , 0 , 0 ); DataValidationHelper helper = writeSheetHolder.getSheet().getDataValidationHelper(); DataValidationConstraint constraint = helper.createExplicitListConstraint( new String[] { &#x6D4B;&#x8BD5;1 , &#x6D4B;&#x8BD5;2 }); DataValidation dataValidation = helper.createValidation(constraint, cellRangeAddressList); writeSheetHolder.getSheet().addValidationData(dataValidation); } } &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 /** * &#x4E0B;&#x62C9;&#xFF0C;&#x8D85;&#x94FE;&#x63A5;&#x7B49;&#x81EA;&#x5B9A;&#x4E49;&#x62E6;&#x622A;&#x5668;&#xFF08;&#x4E0A;&#x9762;&#x51E0;&#x70B9;&#x90FD;&#x4E0D;&#x7B26;&#x5408;&#x4F46;&#x662F;&#x8981;&#x5BF9;&#x5355;&#x5143;&#x683C;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#x7684;&#x53C2;&#x7167;&#x8FD9;&#x4E2A;&#xFF09; * p * demo&#x8FD9;&#x91CC;&#x5B9E;&#x73B0;2&#x70B9;&#x3002;1. &#x5BF9;&#x7B2C;&#x4E00;&#x884C;&#x7B2C;&#x4E00;&#x5217;&#x7684;&#x5934;&#x8D85;&#x94FE;&#x63A5;&#x5230;:https://github.com/alibaba/easyexcel 2. &#x5BF9;&#x7B2C;&#x4E00;&#x5217;&#x7B2C;&#x4E00;&#x884C;&#x548C;&#x7B2C;&#x4E8C;&#x884C;&#x7684;&#x6570;&#x636E;&#x65B0;&#x589E;&#x4E0B;&#x62C9;&#x6846;&#xFF0C;&#x663E;&#x793A; &#x6D4B;&#x8BD5;1 &#x6D4B;&#x8BD5;2 * p * 1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link DemoData} * p * 2. &#x6CE8;&#x518C;&#x62E6;&#x622A;&#x5668; { @link CustomCellWriteHandler} { @link CustomSheetWriteHandler} * p * 2. &#x76F4;&#x63A5;&#x5199;&#x5373;&#x53EF; */ @Test public void customHandlerWrite () { String fileName = TestFileUtil.getPath() + customHandlerWrite + System.currentTimeMillis() + .xlsx ; // &#x8FD9;&#x91CC; &#x9700;&#x8981;&#x6307;&#x5B9A;&#x5199;&#x7528;&#x54EA;&#x4E2A;class&#x53BB;&#x8BFB;&#xFF0C;&#x7136;&#x540E;&#x5199;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;sheet&#xFF0C;&#x540D;&#x5B57;&#x4E3A;&#x6A21;&#x677F; &#x7136;&#x540E;&#x6587;&#x4EF6;&#x6D41;&#x4F1A;&#x81EA;&#x52A8;&#x5173;&#x95ED; EasyExcel.write(fileName, DemoData.class).registerWriteHandler( new CustomSheetWriteHandler()) .registerWriteHandler( new CustomCellWriteHandler()).sheet( &#x6A21;&#x677F; ).doWrite(data()); }"},"quickstart/write.html#web中的写":{"title":"web&#x4E2D;&#x7684;&#x5199;","path":"/quickstart/write.html#web中的写","body":"&#x793A;&#x4F8B;&#x4EE3;&#x7801; DEMO&#x4EE3;&#x7801;&#x5730;&#x5740;&#xFF1A; https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/web/WebTest.java &#x5BF9;&#x8C61; &#x53C2;&#x7167;&#xFF1A; &#x5BF9;&#x8C61; &#x5C31;&#x662F;&#x540D;&#x79F0;&#x53D8;&#x4E86;&#x4E0B; &#x4EE3;&#x7801; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 /** * &#x6587;&#x4EF6;&#x4E0B;&#x8F7D; * p * 1. &#x521B;&#x5EFA;excel&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; &#x53C2;&#x7167;{ @link DownloadData} * p * 2. &#x8BBE;&#x7F6E;&#x8FD4;&#x56DE;&#x7684; &#x53C2;&#x6570; * p * 3. &#x76F4;&#x63A5;&#x5199;&#xFF0C;&#x8FD9;&#x91CC;&#x6CE8;&#x610F;&#xFF0C;finish&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x81EA;&#x52A8;&#x5173;&#x95ED;OutputStream,&#x5F53;&#x7136;&#x4F60;&#x5916;&#x9762;&#x518D;&#x5173;&#x95ED;&#x6D41;&#x95EE;&#x9898;&#x4E0D;&#x5927; */ @GetMapping ( download ) public void download (HttpServletResponse response) throws IOException { // &#x8FD9;&#x91CC;&#x6CE8;&#x610F; &#x6709;&#x540C;&#x5B66;&#x53CD;&#x5E94;&#x4F7F;&#x7528;swagger &#x4F1A;&#x5BFC;&#x81F4;&#x5404;&#x79CD;&#x95EE;&#x9898;&#xFF0C;&#x8BF7;&#x76F4;&#x63A5;&#x7528;&#x6D4F;&#x89C8;&#x5668;&#x6216;&#x8005;&#x7528;postman response.setContentType( application/vnd.ms-excel ); response.setCharacterEncoding( utf-8 ); // &#x8FD9;&#x91CC;URLEncoder.encode&#x53EF;&#x4EE5;&#x9632;&#x6B62;&#x4E2D;&#x6587;&#x4E71;&#x7801; &#x5F53;&#x7136;&#x548C;easyexcel&#x6CA1;&#x6709;&#x5173;&#x7CFB; String fileName = URLEncoder.encode( &#x6D4B;&#x8BD5; , UTF-8 ); response.setHeader( Content-disposition , attachment;filename= + fileName + .xlsx ); EasyExcel.write(response.getOutputStream(), DownloadData.class).sheet( &#x6A21;&#x677F; ).doWrite(data()); }"}}}